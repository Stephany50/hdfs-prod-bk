flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.name = "SQ_EXPORT_IT_OMNY_TRANSACTIONS"

flux.type = "EXPORT"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -7
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-date-format = "yyyy-MM-dd"

flux.rdms.has-pre-queries = true

flux.hive.has-pre-queries = true

flux.rdms.pre-exec-queries += """
SELECT (CASE WHEN NBR = 0 THEN 'OK' ELSE 'NOK' END) RESULT FROM
(SELECT COUNT(*) NBR FROM MON.IT_OMNY_TRANSACTIONS WHERE ORIGINAL_FILE_DATE BETWEEN TO_DATE('###SLICE_VALUE### 000000', 'YYYY-MM-DD HH24MISS') AND TO_DATE('###SLICE_VALUE### 235959', 'YYYY-MM-DD HH24MISS'))
"""
flux.hive.pre-exec-queries += """
SELECT IF(A.NBR > 1, 'OK', 'NOK') FROM
(SELECT COUNT(*) NBR FROM CDR.SPARK_IT_OMNY_TRANSACTIONS WHERE ORIGINAL_FILE_DATE='###SLICE_VALUE###') A
"""

flux.sqoop.jdbc-connect-uri = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL = TCP)(HOST = 172.21.75.133)(PORT = 20303)))(CONNECT_DATA=(SERVICE_NAME = OCMDWH)))"
flux.sqoop.jdbc-username = "mon"
flux.sqoop.jdbc-password = "Mon123ocm#"
flux.sqoop.jdbc-driver = "oracle.jdbc.driver.OracleDriver"

flux.sqoop.query = """SELECT 
SENDER_MSISDN, 
RECEIVER_MSISDN, 
RECEIVER_USER_ID, 
SENDER_USER_ID, 
TRANSACTION_AMOUNT, 
COMMISSIONS_PAID, 
COMMISSIONS_RECEIVED, 
COMMISSIONS_OTHERS, 
SERVICE_CHARGE_RECEIVED, 
SERVICE_CHARGE_PAID, 
TAXES, 
SERVICE_TYPE, 
TRANSFER_STATUS, 
SENDER_PRE_BAL, 
SENDER_POST_BAL, 
RECEIVER_PRE_BAL, 
RECEIVER_POST_BAL, 
SENDER_ACC_STATUS, 
RECEIVER_ACC_STATUS, 
ERROR_CODE, 
ERROR_DESC, 
REFERENCE_NUMBER, 
FROM_UNIXTIME(UNIX_TIMESTAMP(CREATED_ON,'dd/MM/yyyy HH:mm:ss')+3600) CREATED_ON, 
CREATED_BY, 
FROM_UNIXTIME(UNIX_TIMESTAMP(MODIFIED_ON,'dd/MM/yyyy HH:mm:ss')+3600) MODIFIED_ON, 
MODIFIED_BY, 
APP_1_DATE, 
APP_2_DATE, 
TRANSFER_ID, 
FROM_UNIXTIME(UNIX_TIMESTAMP(TRANSFER_DATETIME_NQ,'dd/MM/yyyy HH:mm:ss')+3600) TRANSFER_DATETIME, 
SENDER_CATEGORY_CODE, 
SENDER_DOMAIN_CODE, 
SENDER_GRADE_NAME, 
SENDER_GROUP_ROLE, 
SENDER_DESIGNATION, 
SENDER_STATE, 
RECEIVER_CATEGORY_CODE, 
RECEIVER_DOMAIN_CODE, 
RECEIVER_GRADE_NAME, 
RECEIVER_GROUP_ROLE, 
RECEIVER_DESIGNATION, 
RECEIVER_STATE, 
SENDER_CITY, 
RECEIVER_CITY, 
APP_1_BY, 
APP_2_BY, 
REQUEST_SOURCE, 
HO, 
TRANSFER_SUBTYPE, 
PAYMENT_TYPE, 
PAYMENT_NUMBER, 
PAYMENT_DATE, 
REMARKS, 
ACTION_TYPE, 
TRANSACTION_TAG, 
RECONCILIATION_BY, 
RECONCILIATION_FOR, 
EXT_TXN_NUMBER, 
ORIGINAL_REF_NUMBER, 
ZEBRA_AMBIGUOUS, 
ATTEMPT_STATUS, 
OTHER_MSISDN, 
SENDER_WALLET_NUMBER, 
RECEIVER_WALLET_NUMBER, 
SENDER_USER_NAME, 
RECEIVER_USER_NAME, 
TNO_MSISDN, 
TNO_ID, 
UNREG_FIRST_NAME, 
UNREG_LAST_NAME, 
UNREG_DOB, 
UNREG_ID_NUMBER, 
BULK_PAYOUT_BATCHID, 
IS_FINANCIAL, 
TRANSFER_DONE, 
ORIGINAL_FILE_NAME, 
ORIGINAL_FILE_DATE, 
FROM_UNIXTIME(UNIX_TIMESTAMP(INSERT_DATE,'dd/MM/yyyy HH:mm:ss')+3600) INSERT_DATE, 
INITIATOR_MSISDN, 
VALIDATOR_MSISDN, 
INITIATOR_COMMENTS, 
VALIDATOR_COMMENTS, 
SENDER_WALLET_NAME, 
RECIEVER_WALLET_NAME, 
SENDER_USER_TYPE, 
RECEIVER_USER_TYPE

FROM CDR.SPARK_IT_OMNY_TRANSACTIONS WHERE ORIGINAL_FILE_DATE='###SLICE_VALUE###'"""

flux.sqoop.export-rdms.staging-table = "MON.SQ_IT_OMNY_TRANSACTIONS"
flux.sqoop.export-rdms.dest-table = "MON.IT_OMNY_TRANSACTIONS"
flux.sqoop.export-hive.staging-table = "SQ_IT_OMNY_TRANSACTIONS"
flux.sqoop.export-hive.staging-table-database = "TMP"
flux.sqoop.extra-params +="-Dmapreduce.map.java.opts='-Duser.timezone=UTC'"
flux.sqoop.extra-params +="-jt local"