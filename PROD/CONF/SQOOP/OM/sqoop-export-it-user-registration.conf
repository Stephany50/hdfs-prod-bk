flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.name = "SQ_EXPORT_SPARK_IT_OMNY_REGISTRATION"

flux.type = "EXPORT"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -3
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-date-format = "yyyy-MM-dd"

flux.rdms.has-pre-queries = true

flux.hive.has-pre-queries = true

flux.rdms.pre-exec-queries += """
SELECT (CASE WHEN NBR < 8000 THEN 'OK' ELSE 'NOK' END) RESULT FROM
(SELECT COUNT(*) NBR FROM TANGO_CDR.IT_OMNY_USER_REGISTRATION  WHERE registered_on BETWEEN TO_DATE('###SLICE_VALUE### 000000', 'YYYY-MM-DD HH24MISS') AND TO_DATE('###SLICE_VALUE### 235959', 'YYYY-MM-DD HH24MISS'))
"""
flux.hive.pre-exec-queries += """
SELECT IF(A.NBR > 0, 'OK', 'NOK') FROM
(SELECT COUNT(*) NBR FROM MON.SPARK_FT_OMNY_USER_REGISTRATION_NEW WHERE original_file_date='###SLICE_VALUE###') A
"""

flux.sqoop.jdbc-connect-uri = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL = TCP)(HOST = 172.21.75.133)(PORT = 20303)))(CONNECT_DATA=(SERVICE_NAME = OCMDWH)))"
flux.sqoop.jdbc-username = "mon"
flux.sqoop.jdbc-password = "Mon123ocm#"
flux.sqoop.jdbc-driver = "oracle.jdbc.driver.OracleDriver"

flux.sqoop.query = """select 
  USER_ID              ,
  PROFILE_ID           ,
  PARENT_USER_ID       ,
  PARENT_USER_MSISDN   ,
  MSISDN               ,
  USER_NAME_PREFIX     ,
  USER_FIRST_NAME      ,
  USER_LAST_NAME       ,
  USER_SHORT_NAME      ,
  DOB               ,
  FROM_UNIXTIME(UNIX_TIMESTAMP(registered_on,'yyyy-MM-dd HH:mm:ss')+3600) REGISTERED_ON,
  ADDRESS1             ,
  ADDRESS2             ,
  STATE                ,
  CITY                 ,
  COUNTRY              ,
  SSN                  ,
  DESIGNATION          ,
  DIVISION             ,
  CONTACT_PERSON       ,
  CONTACT_NO           ,
  EMPLOYEE_CODE        ,
  SEX                  ,
  ID_NUMBER            ,
  E_MAIL               ,
  WEB_LOGIN            ,
  ACCOUNT_STATUS       ,
  FROM_UNIXTIME(UNIX_TIMESTAMP(creation_date,'yyyy-MM-dd HH:mm:ss')+3600) creation_date,
  CREATED_BY           ,
  CREATED_BY_MSISDN    ,
  NOMADE_CREATED_BY    ,
  LEVEL1_APP_DATE   ,
  LEVEL1_APP_BY        ,
  LEVEL2_APP_DATE   ,
  LEVEL2_APP_BY        ,
  OWNER_ID             ,
  OWNER_MSISDN         ,
  USER_DOMAIN_CODE     ,
  USER_CATEGORY_CODE   ,
  USER_GRADE_NAME      ,
  MODIFIED_BY          ,
  FROM_UNIXTIME(UNIX_TIMESTAMP(modified_on,'yyyy-MM-dd HH:mm:ss')+3600) modified_on,
  MODIFIED_APPROVED_BY ,
  FROM_UNIXTIME(UNIX_TIMESTAMP(modified_approved_on,'yyyy-MM-dd HH:mm:ss')+3600) modified_approved_on,
  FROM_UNIXTIME(UNIX_TIMESTAMP(deleted_on,'yyyy-MM-dd HH:mm:ss')+3600) deleted_on,
  DEACTIVATION_BY      ,
  DEPARTMENT           ,
  REGISTRATION_FORM_NUMBER  ,
  REMARKS              ,
  GEOGRAPHICAL_DOMAIN  ,
  GROUP_ROLE           ,
  FIRST_TRANSACTION_ON   ,
  COMPANY_CODE         ,
  USER_TYPE            ,
  ACTION_TYPE          ,
  AGENT_CODE           ,
  CREATION_TYPE        ,
  BULK_ID              ,
  IDENTITY_PROOF_TYPE  ,
  ADDRESS_PROOF_TYPE   ,
  PHOTO_PROOF_TYPE     ,
  ID_TYPE              ,
  ID_NO                ,
  ID_ISSUE_PLACE       ,
  ID_ISSUE_DATE     ,
  ID_ISSUE_COUNTRY     ,
  ID_EXPIRY_DATE    ,
  RESIDENCE_COUNTRY    ,
  NATIONALITY          ,
  EMPLOYER_NAME        ,
  POSTAL_CODE          ,
  MOBILE_GROUP_CODE    ,
  SOUSCRIPTION_TYPE    ,
  MOBILE_GROUP_ROLE    ,
  ORIGINAL_FILE_NAME   ,
  ORIGINAL_FILE_DATE,
  FROM_UNIXTIME(UNIX_TIMESTAMP(INSERT_DATE,'dd/MM/yyyy HH:mm:ss')+3600) INSERT_DATE 
FROM MON.SPARK_FT_OMNY_USER_REGISTRATION_NEW WHERE original_file_date='###SLICE_VALUE###'"""

flux.sqoop.export-rdms.staging-table = "MON.SQ_BI_USER_REGISTRATION"
flux.sqoop.export-rdms.dest-table = "TANGO_CDR.IT_OMNY_USER_REGISTRATION"
flux.sqoop.export-hive.staging-table = "SQ_IT_OMNY_REGISTRATION"
flux.sqoop.export-hive.staging-table-database = "TMP"

flux.sqoop.extra-params +="-Dmapreduce.map.java.opts='-Duser.timezone=UTC'"
flux.sqoop.extra-params +="-jt local"
