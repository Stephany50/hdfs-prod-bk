//------******************************************************************
//------********************* EXPORT FTA TO DWH ********************** 
//------ ALEX BILLANG 06-04-2020 ----------------------------------
//------*****************************------*******************************


flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.name = "SQ_EXPORT_SPARK_FT_A_SUBSCRIPTION"

flux.type = "EXPORT"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -14
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-date-format = "yyyy-MM-dd"

flux.rdms.has-pre-queries = true

flux.hive.has-pre-queries = true

flux.rdms.pre-exec-queries += """
SELECT (CASE WHEN NBR = 0 THEN 'OK' ELSE 'NOK' END) RESULT FROM
(SELECT COUNT(*) NBR FROM MON.FT_A_SUBSCRIPTION WHERE TRANSACTION_DATE BETWEEN TO_DATE('###SLICE_VALUE### 000000', 'YYYY-MM-DD HH24MISS') AND TO_DATE('###SLICE_VALUE### 235959', 'YYYY-MM-DD HH24MISS'))
"""
flux.hive.pre-exec-queries += """
SELECT IF(A.NBR > 1, 'OK', 'NOK') FROM
(SELECT COUNT(*) NBR FROM AGG.SPARK_FT_A_SUBSCRIPTION WHERE TRANSACTION_DATE='###SLICE_VALUE###') A
"""

flux.sqoop.jdbc-connect-uri = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL = TCP)(HOST = 172.21.75.133)(PORT = 20303)))(CONNECT_DATA=(SERVICE_NAME = OCMDWH)))"
flux.sqoop.jdbc-username = "mon"
flux.sqoop.jdbc-password = "Mon123ocm#"
flux.sqoop.jdbc-driver = "oracle.jdbc.driver.OracleDriver"

flux.sqoop.query = """

    SELECT
      TRANSACTION_DATE,
      TRANSACTION_TIME,
      CONTRACT_TYPE,
      OPERATOR_CODE,
      MAIN_USAGE_SERVICE_CODE,
      COMMERCIAL_OFFER,
      PREVIOUS_COMMERCIAL_OFFER,
      SUBS_SERVICE,
      SUBS_BENEFIT_NAME,
      SUBS_CHANNEL,
      SUBS_RELATED_SERVICE,
      SUM(SUBS_TOTAL_COUNT) SUBS_TOTAL_COUNT,
      SUM(SUBS_AMOUNT) SUBS_AMOUNT,
      SOURCE_PLATFORM,
      SOURCE_DATA,
      max(INSERT_DATE) INSERT_DATE,
      SERVICE_CODE,
      sum(MSISDN_COUNT) MSISDN_COUNT,
      sum(SUBS_EVENT_RATED_COUNT) SUBS_EVENT_RATED_COUNT,
      SUBS_PRICE_UNIT,
      sum(AMOUNT_SVA ) AMOUNT_SVA,
      sum(AMOUNT_VOICE_ONNET) AMOUNT_VOICE_ONNET,
      sum(AMOUNT_VOICE_OFFNET) AMOUNT_VOICE_OFFNET ,
      sum(AMOUNT_VOICE_INTER) AMOUNT_VOICE_INTER,
      sum(AMOUNT_VOICE_ROAMING) AMOUNT_VOICE_ROAMING,
      sum(AMOUNT_SMS_ONNET) AMOUNT_SMS_ONNET,
      sum(AMOUNT_SMS_OFFNET)AMOUNT_SMS_OFFNET,
      sum(AMOUNT_SMS_INTER) AMOUNT_SMS_INTER,
      sum(AMOUNT_SMS_ROAMING) AMOUNT_SMS_ROAMING,
      sum(AMOUNT_DATA) AMOUNT_DATA,
      COMBO
    FROM AGG.SPARK_FT_A_SUBSCRIPTION WHERE TRANSACTION_DATE='###SLICE_VALUE###'
    group by
    TRANSACTION_DATE,
    TRANSACTION_TIME,
    CONTRACT_TYPE,
    OPERATOR_CODE,
    MAIN_USAGE_SERVICE_CODE,
    COMMERCIAL_OFFER,
    PREVIOUS_COMMERCIAL_OFFER,
    SUBS_SERVICE,
    SUBS_BENEFIT_NAME,
    SUBS_CHANNEL,
    SUBS_RELATED_SERVICE,
    SOURCE_PLATFORM,
    SOURCE_DATA,
    SERVICE_CODE,
    SUBS_PRICE_UNIT,
    AMOUNT_SVA,
    AMOUNT_VOICE_ONNET,
    AMOUNT_VOICE_OFFNET,
    AMOUNT_VOICE_INTER,
    AMOUNT_VOICE_ROAMING,
    AMOUNT_SMS_ONNET,
    AMOUNT_SMS_OFFNET,
    AMOUNT_SMS_INTER,
    AMOUNT_SMS_ROAMING,
    AMOUNT_DATA,
    COMBO
"""
flux.sqoop.export-rdms.staging-table = "MON.SQ_TMP_FT_A_SUBSCRIPTION"
flux.sqoop.export-rdms.dest-table = "MON.FT_A_SUBSCRIPTION"
flux.sqoop.export-hive.staging-table = "SQ_TMP_FT_A_SUBSCRIPTION"
flux.sqoop.export-hive.staging-table-database = "TMP"

flux.sqoop.extra-params +="-Dmapreduce.map.java.opts='-Duser.timezone=UTC'"
flux.sqoop.extra-params +="-jt local"
