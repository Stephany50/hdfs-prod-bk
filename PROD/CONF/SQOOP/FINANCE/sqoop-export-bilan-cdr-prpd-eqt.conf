flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.name = "SQ_EXPORT_BILAN_CDR_PRPD_EQT"

flux.type = "EXPORT"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -3
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-date-format = "yyyy-MM-dd"

flux.rdms.has-pre-queries = true

flux.hive.has-pre-queries = true

flux.rdms.pre-exec-queries += """
SELECT (CASE WHEN NBR = 0 THEN 'OK' ELSE 'NOK' END) RESULT FROM
(SELECT COUNT(*) NBR FROM MON.FT_LMA_PRPD_EQT WHERE jour BETWEEN TO_DATE('###SLICE_VALUE### 000000', 'YYYY-MM-DD HH24MISS') AND TO_DATE('###SLICE_VALUE### 235959', 'YYYY-MM-DD HH24MISS'))
"""
flux.hive.pre-exec-queries += """
SELECT IF(A.nbr_eqt_prpd > 0 and B.nbr_contract_snap > 0, 'OK', 'NOK') FROM
(SELECT COUNT(*) nbr_eqt_prpd FROM MON.SPARK_FT_EDR_PRPD_EQT WHERE event_date='###SLICE_VALUE###') A
(SELECT COUNT(*) nbr_contract_snap FROM mon.spark_ft_contract_snapshot WHERE event_date='###SLICE_VALUE###') B
"""

flux.sqoop.jdbc-connect-uri = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL = TCP)(HOST = 172.21.75.133)(PORT = 20303)))(CONNECT_DATA=(SERVICE_NAME = OCMDWH)))"
flux.sqoop.jdbc-username = "mon"
flux.sqoop.jdbc-password = "Mon123ocm#"
flux.sqoop.jdbc-driver = "oracle.jdbc.driver.OracleDriver"

flux.sqoop.query = "SELECT jour, t2.osp_contract_type as profil, t2.commercial_offer as offre,  TYPE,  BALANCE_IMPACTE, KPI, KPI_DETAILS, DEBIT_CREDIT, COMPTER_CA_RECHARGE, COMPTER_EQT_PREP, sum(t1.main_credit) as main_credit,  sum(main_debit) as main_debit, sum(loan_credit) as loan_credit, sum(loan_debit) as loan_debit, sum(total_credit) as total_credit,sum(total_debit) as total_debit, sum(montant_principal) as montant_principal, sum(montant_secondaire) as montant_secondaire, sum(nombre) as nombre FROM (SELECT  EVENT_DATE as jour, TYPE, ACCT_ID_MSISDN as MSISDN, t2.BALANCE_IMPACTE, t2.KPI, t2.KPI_DETAILS, t2.DEBIT_CREDIT, t2.COMPTER_CA_RECHARGE, t2.COMPTER_EQT_PREP,sum(main_credit) as main_credit, sum(main_debit) as main_debit,sum(loan_credit) as loan_credit, sum(loan_debit) as loan_debit, sum(main_credit+loan_credit) as total_credit,sum(main_debit+loan_debit) as total_debit, sum(case when (main_credit+loan_credit) < (main_debit+loan_debit) then main_debit+loan_debit else main_credit+loan_credit end) as montant_principal, sum(case when (main_credit+loan_credit) >= (main_debit+loan_debit) then main_debit+loan_debit else main_credit+loan_credit end) as montant_secondaire,  count(event_time) as nombre FROM MON.SPARK_FT_EDR_PRPD_EQT t1 LEFT OUTER JOIN RA.EQTPREP_DESCRIPTION_FLUX t2 ON t1.TYPE=t2.type_flux WHERE EVENT_DATE = '###SLICE_VALUE###' group by  EVENT_DATE, TYPE, ACCT_ID_MSISDN, t2.BALANCE_IMPACTE, t2.KPI, t2.KPI_DETAILS, t2.DEBIT_CREDIT, t2.COMPTER_CA_RECHARGE, t2.COMPTER_EQT_PREP)  t1 left outer join ( SELECT event_date, access_key,  osp_contract_type, commercial_offer FROM mon.spark_ft_contract_snapshot WHERE event_date = '###SLICE_VALUE###') t2  on t1.MSISDN = t2.access_key and  t1.jour = t2.event_date group by  jour, TYPE, t2.osp_contract_type, t2.commercial_offer, BALANCE_IMPACTE, KPI,KPI_DETAILS, DEBIT_CREDIT, COMPTER_CA_RECHARGE, COMPTER_EQT_PREP"

flux.sqoop.export-rdms.staging-table = "MON.SQ_LMA_BILAN_CDR_PRPD_EQT"
flux.sqoop.export-rdms.dest-table = "MON.FT_LMA_PRPD_EQT"
flux.sqoop.export-hive.staging-table = "FT_TMP_LMA_BILAN_CDR_PRPD_EQT"
flux.sqoop.export-hive.staging-table-database = "TMP"

flux.sqoop.extra-params +="-Dmapreduce.map.java.opts='-Duser.timezone=UTC'"
flux.sqoop.extra-params +="-jt local"