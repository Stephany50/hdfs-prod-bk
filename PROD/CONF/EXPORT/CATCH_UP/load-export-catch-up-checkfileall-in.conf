flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HDFS"

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.spark.setup-var +=  {"key": "job_instanceid", "value": "LOAD_EXPORT_CATCH_UP_CHECKFILEALL"}

flux.name = "LOAD_EXPORT_CATCH_UP_CHECKFILEALL"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -1
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=false
flux.slice-state-query="""
select
	if(count(*)=1,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 1) and date_sub(current_date, 1)
and datecode in ( 
	select distinct FILE_DATE 
	from CDR.SPARK_IT_ZTE_CHECK_FILE_ALL 
	where FILE_DATE between date_sub(current_date, 1) and date_sub(current_date, 1)
) 
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """ 
select
	date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 1) and date_sub(current_date, 1)
and datecode in ( 
	select distinct FILE_DATE 
	from CDR.SPARK_IT_ZTE_CHECK_FILE_ALL 
	where FILE_DATE between date_sub(current_date, 1) and date_sub(current_date, 1)
)
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true

flux.inline.pre-exec-queries += """
SELECT IF( CHECK_FILE_ALL_EXIST <= 0, 'OK','NOK')
FROM 
( SELECT COUNT(*) CHECK_FILE_ALL_EXIST FROM CDR.SPARK_IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '###SLICE_VALUE###' ) T
"""

flux.inline.exec-queries += """
SELECT concat('IN_ZTE_ALL_CHECK_FILELIST_', replace('###SLICE_VALUE###', '-', '')) MISSING_FILES
"""

flux.hdfs.output-format = "csv"
flux.hdfs.output-has-header = "true"
flux.hdfs.output-separator = ";"
flux.hdfs.output-mode = "overwrite"
flux.hdfs.output-path = "/PROD/EXPORT/CATCH_UP/CHECKFILEALL_IN"
