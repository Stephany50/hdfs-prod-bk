flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HDFS"

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}
flux.spark.setup-var +=  {"key": "job_instanceid", "value": "LOAD_EXPORT_ECHEC_OM_ROBOT"}

flux.name = "LOAD_EXPORT_ECHEC_OM_ROBOT"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -10
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0

flux.slice-has-state-query=true
flux.slice-state-query="""
select
    case when count(*) = 10 then 'OK' else 'NOK' end
from
(
    select
        status,
        row_number() over(partition by event_date order by insert_date desc) rang
    from mon.export_history
    where job_instanceid = '${hivevar:job_instanceid}'
    and event_date between date_sub(current_date, 10) and date_sub(current_date, 1)
) R
where status = 'OK' and rang = 1
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from
dim.dt_dates
where datecode between date_sub(current_date, 10) and date_sub(current_date, 1)
and datecode in
(
    select event_date
    from
    (
        select
            *,
            row_number() over(partition by event_date order by insert_date desc) rang
        from mon.export_history
        where job_instanceid = '${hivevar:job_instanceid}'
        and event_date between date_sub(current_date, 10) and date_sub(current_date, 1)
    ) T
    where status = 'OK' and rang = 1
)
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true

flux.inline.pre-exec-queries += """
SELECT IF(
    T_1.FT_EXIST > 0
    AND T_2.NB_EXPORT < 1
    , 'OK'
    , 'NOK'
)
FROM
(SELECT COUNT(*) FT_EXIST FROM CDR.SPARK_IT_OMNY_TRANSACTIONS WHERE TRANSFER_DATETIME = '###SLICE_VALUE###') T_1,
(
    SELECT COUNT(*) NB_EXPORT FROM
    (SELECT * FROM (SELECT * FROM MON.EXPORT_HISTORY WHERE EVENT_DATE='###SLICE_VALUE###' AND JOB_INSTANCEID='${hivevar:job_instanceid}' ORDER BY INSERT_DATE DESC LIMIT 1)  T where T.STATUS = 'OK') M
) T_2
"""

flux.inline.exec-queries += """
select 
msisdn,
error_desc error_type,
type transaction_type,
case 
when substr(transfer_datetime_nq, 12) >= '00:00:00' and substr(transfer_datetime_nq, 12) < '02:00:00' then '00h_02h'
when substr(transfer_datetime_nq, 12) >= '02:00:00' and substr(transfer_datetime_nq, 12) < '04:00:00' then '02h_04h'
when substr(transfer_datetime_nq, 12) >= '04:00:00' and substr(transfer_datetime_nq, 12) < '06:00:00' then '04h_06h'
when substr(transfer_datetime_nq, 12) >= '06:00:00' and substr(transfer_datetime_nq, 12) < '08:00:00' then '06h_08h'
when substr(transfer_datetime_nq, 12) >= '08:00:00' and substr(transfer_datetime_nq, 12) < '10:00:00' then '08h_10h'
when substr(transfer_datetime_nq, 12) >= '10:00:00' and substr(transfer_datetime_nq, 12) < '12:00:00' then '10h_12h'
when substr(transfer_datetime_nq, 12) >= '12:00:00' and substr(transfer_datetime_nq, 12) < '14:00:00' then '12h_14h'
when substr(transfer_datetime_nq, 12) >= '14:00:00' and substr(transfer_datetime_nq, 12) < '16:00:00' then '14h_16h'
when substr(transfer_datetime_nq, 12) >= '16:06:00' and substr(transfer_datetime_nq, 12) < '18:00:00' then '16h_18h'
when substr(transfer_datetime_nq, 12) >= '18:06:00' and substr(transfer_datetime_nq, 12) < '20:00:00' then '18h_20h'
when substr(transfer_datetime_nq, 12) >= '20:06:00' and substr(transfer_datetime_nq, 12) < '22:00:00' then '20h_22h'
when substr(transfer_datetime_nq, 12) >= '22:06:00' and substr(transfer_datetime_nq, 12) < '24:00:00' then '22h_24h'
else null end period,
jour transaction_date,
count(*) total_fail
from 
(
-- RECHARGE
-- AIRTIME
-- SELF
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TOP_UP_SELF' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('RC') AND SENDER_CATEGORY_CODE='SUBS' AND OTHER_MSISDN IS NULL AND
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- TIERS_SELF
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TOP_UP_TIERS_SELF' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('RC') AND SENDER_CATEGORY_CODE='SUBS' AND 
    OTHER_MSISDN IS NOT NULL AND OTHER_MSISDN=SENDER_MSISDN AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- TIERS
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TOP_UP_TIERS' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('RC') AND SENDER_CATEGORY_CODE='SUBS' AND 
    OTHER_MSISDN IS NOT NULL AND OTHER_MSISDN<>SENDER_MSISDN AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- INTERNET
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'RECHARGE_INTERNET' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN IN (SELECT MSISDN FROM BACKUP_DWH.INTERNET_MSISDNS) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
UNION ALL
-- BILL PAYMENTS
-- ENEO
-- ENEO PREPAID
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, concat('FACTURIER_', trim(Y.DETAILS)) TYPE 
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS X JOIN BACKUP_DWH.MSISDN_ENEO Y 
ON X.RECEIVER_MSISDN=Y.MSISDN
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY', 'BILLPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- CANAL
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'FACTURIER_CANAL' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN  IN (SELECT MSISDN FROM  BACKUP_DWH.MSISDN_CANAL) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
UNION ALL
-- CDE
-- CAMWATER
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'FACTURIER_CAMWATER' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY', 'BILLPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN  IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_EAU) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- ORANGE
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'FACTURIER_ORANGE' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('BILLPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN IN ('orang') AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- ALL BILL PAY ASSURANCE 
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'FACTURIER_ASSURANCE' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('BILLPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_ENEO UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_EAU UNION SELECT 'orang' MSISDN FROM  BACKUP_DWH.DUAL UNION ALL 
    SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- ASSUR TOUS
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'MICROASSURANCE_ASSUR_TOUS' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN IN (SELECT MSISDN FROM  BACKUP_DWH.MSISDN_ASSUR_TOUS) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- ATLANTIC ASSURANCE
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'MICROASSURANCE_ATLANTIC_ASSURANCE' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_ATLANTIC_ASSURANCE) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- ACTIVA
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'MICROASSURANCE_MAKALA' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_ACTIVA) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- TRANSFERS
-- TNO_FREE_DEST
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TNO_FREE_DEST' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('P2PNONREG') AND 
    SENDER_CATEGORY_CODE='SUBS' AND TNO_MSISDN IS NULL
-- TNO_DEST
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TNO_DEST' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('P2PNONREG') AND SENDER_CATEGORY_CODE='SUBS' AND 
    TNO_MSISDN IS NOT NULL AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS) AND 
    RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- MARCHAND FOCUS
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'MARCHAND_FOCUS' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.NON_MERCHANT_MSISDNS) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL 
    SELECT MSISDN FROM BACKUP_DWH.NON_MERCHANT_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND RECEIVER_GRADE_NAME NOT IN ('gradeMinsc')
-- MARCHAND MINSEC
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'MARCHAND_MINSEC' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_GRADE_NAME IN ('gradeMinsc') AND RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL 
    SELECT MSISDN FROM BACKUP_DWH.NON_MERCHANT_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W)
-- DISTRIBUTION 
-- CASHOUT 
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'DISTRIBUTION_FOCUS' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('CASHOUT') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN NOT IN  (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_VISA UNION ALL 
    SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_VISA UNION ALL 
    SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC)
-- CASH IN 
UNION ALL
SELECT 
    RECEIVER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'DISTRIBUTION_FOCUS' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('CASHIN') AND RECEIVER_CATEGORY_CODE='SUBS' AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND 
    RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC)
-- W2B
-- ECOBANK, AFRILAND, UBA, PANAFRICA, ADVANS
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, concat('B2W_',trim(B.BANK)) TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS A JOIN BACKUP_DWH.MSISDN_B2W B 
ON A.RECEIVER_MSISDN=B.MSISDN
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('CASHOUT') AND SENDER_CATEGORY_CODE='SUBS' AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- B2W
-- ECOBANK
UNION ALL 
SELECT 
    RECEIVER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, concat('B2W_', trim(B.BANK)) TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS A JOIN BACKUP_DWH.MSISDN_B2W B 
ON A.SENDER_MSISDN=B.MSISDN
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('CASHIN') AND RECEIVER_CATEGORY_CODE='SUBS' 
    AND RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- VISA 
-- PAYMENT
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'VISA_TPE' TYPE 
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('MERCHPAY') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN  IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_VISA) AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- VISA CASHOUT
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'VISA_GAB' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('CASHOUT') AND SENDER_CATEGORY_CODE='SUBS' AND 
    RECEIVER_MSISDN  IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_VISA)
-- P2P
-- P2P TO NOT A SUB
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TRANSFERT_SENDER_REC_INCONNU' DETAILS
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('P2P') AND SENDER_CATEGORY_CODE IN ('SUBS') AND 
    RECEIVER_CATEGORY_CODE NOT IN ('SUBS') AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC)
    AND RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC)
-- P2P TO A SUB
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TRANSFERT_SENDER_REC_CONNU' DETAILS
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('P2P') AND SENDER_CATEGORY_CODE IN ('SUBS') 
    AND RECEIVER_CATEGORY_CODE IN ('SUBS') AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC)
    AND RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC)
-- UNKNOWN RECEIVER
UNION ALL
SELECT 
    RECEIVER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TRANSFERT_RECEIVER_SEN_INCONNU' DETAILS
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('P2P','OTF') AND RECEIVER_CATEGORY_CODE='SUBS' AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND SENDER_CATEGORY_CODE NOT IN ('SUBS')
                AND RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS  UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC)
-- P2P UNKNOWN SENDER
UNION ALL
SELECT 
    RECEIVER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'TRANSFERT_RECEIVER_SEN_CONNU' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('P2P','OTF') AND RECEIVER_CATEGORY_CODE='SUBS' AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS UNION ALL SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND SENDER_CATEGORY_CODE IN ('SUBS') 
    AND RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- SALARY PAYMENTS 
UNION ALL
SELECT 
    RECEIVER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, 'SALAIRE_FOCUS' TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND SERVICE_TYPE IN ('ENT2REG') AND RECEIVER_CATEGORY_CODE='SUBS' AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS) AND 
    RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS)
-- GIMAC
-- IN
UNION ALL
SELECT 
    RECEIVER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, concat('GIMAC_', (CASE WHEN SERVICE_TYPE='CASHIN' THEN 'IN' ELSE 'OUT' END)) TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND 
    SENDER_MSISDN IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND 
    RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS) AND
    RECEIVER_CATEGORY_CODE='SUBS'
-- GIMAC
-- OUT
UNION ALL
SELECT 
    SENDER_MSISDN MSISDN, transfer_datetime_nq, error_desc, TRANSFER_DATETIME JOUR, concat('GIMAC_', (case WHEN SERVICE_TYPE='CASHIN' THEN 'IN' ELSE 'OUT' END)) TYPE
FROM CDR.SPARK_IT_OMNY_TRANSACTIONS
WHERE 
    TRANSFER_STATUS='TF' AND TRANSFER_DATETIME = '###SLICE_VALUE###' AND 
    RECEIVER_MSISDN IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_GIMAC) AND 
    SENDER_MSISDN NOT IN (SELECT MSISDN FROM BACKUP_DWH.MSISDN_B2W UNION SELECT MSISDN FROM BACKUP_DWH.OM_TEST_MSISDNS) AND 
    SENDER_CATEGORY_CODE='SUBS'

) T
group by 
msisdn,
error_desc,
type,
case 
when substr(transfer_datetime_nq, 12) >= '00:00:00' and substr(transfer_datetime_nq, 12) < '02:00:00' then '00h_02h'
when substr(transfer_datetime_nq, 12) >= '02:00:00' and substr(transfer_datetime_nq, 12) < '04:00:00' then '02h_04h'
when substr(transfer_datetime_nq, 12) >= '04:00:00' and substr(transfer_datetime_nq, 12) < '06:00:00' then '04h_06h'
when substr(transfer_datetime_nq, 12) >= '06:00:00' and substr(transfer_datetime_nq, 12) < '08:00:00' then '06h_08h'
when substr(transfer_datetime_nq, 12) >= '08:00:00' and substr(transfer_datetime_nq, 12) < '10:00:00' then '08h_10h'
when substr(transfer_datetime_nq, 12) >= '10:00:00' and substr(transfer_datetime_nq, 12) < '12:00:00' then '10h_12h'
when substr(transfer_datetime_nq, 12) >= '12:00:00' and substr(transfer_datetime_nq, 12) < '14:00:00' then '12h_14h'
when substr(transfer_datetime_nq, 12) >= '14:00:00' and substr(transfer_datetime_nq, 12) < '16:00:00' then '14h_16h'
when substr(transfer_datetime_nq, 12) >= '16:06:00' and substr(transfer_datetime_nq, 12) < '18:00:00' then '16h_18h'
when substr(transfer_datetime_nq, 12) >= '18:06:00' and substr(transfer_datetime_nq, 12) < '20:00:00' then '18h_20h'
when substr(transfer_datetime_nq, 12) >= '20:06:00' and substr(transfer_datetime_nq, 12) < '22:00:00' then '20h_22h'
when substr(transfer_datetime_nq, 12) >= '22:06:00' and substr(transfer_datetime_nq, 12) < '24:00:00' then '22h_24h'
else null end,
jour
"""

flux.inline.post-exec-queries += "INSERT INTO MON.EXPORT_HISTORY VALUES ('${hivevar:job_instanceid}', 'OK', CURRENT_TIMESTAMP, '###SLICE_VALUE###')"


flux.hdfs.output-format = "csv"
flux.hdfs.output-has-header = "true"
flux.hdfs.output-separator = "|"
flux.hdfs.output-mode = "overwrite"
flux.hdfs.output-path = "/PROD/EXPORT/EXPORT_ECHEC_OM_ROBOT"
