flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HDFS"
flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}


flux.name = "LOAD_EXPORT_IDENTIFICATION_IRIS"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -15
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    case when count(*) = 7 then 'OK' else 'NOK' end
from
(
    select
        status,
        row_number() over(partition by event_date order by insert_date desc) rang
    from mon.export_history
    where job_instanceid = 'LOAD_EXPORT_IDENTIFICATION_IRIS'
    and event_date between date_sub(current_date, 7) and date_sub(current_date, 1)
) R
where status = 'OK' and rang = 1
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from
dim.dt_dates
where datecode between date_sub(current_date, 7) and date_sub(current_date, 1)
and datecode in
(
    select event_date
    from
    (
        select
            *,
            row_number() over(partition by event_date order by insert_date desc) rang
        from mon.export_history
        where job_instanceid = 'LOAD_EXPORT_IDENTIFICATION_IRIS'
        and event_date between date_sub(current_date, 7) and date_sub(current_date, 1)
    ) T
    where status = 'OK' and rang = 1
)
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true

flux.inline.pre-exec-queries += """
SELECT IF(
T_1.FT_EXIST > 0 AND
T_2.NB_EXPORT < 1
,'OK','NOK')
FROM
(SELECT COUNT(*) FT_EXIST FROM CDR.SPARK_IT_KYC_BDI_FULL WHERE ORIGINAL_FILE_DATE ='###SLICE_VALUE###') T_1,
(
select count(*) NB_EXPORT from
(select * from (SELECT * FROM MON.EXPORT_HISTORY where event_date='###SLICE_VALUE###' and JOB_INSTANCEID='LOAD_EXPORT_IDENTIFICATION_IRIS' ORDER BY INSERT_DATE DESC LIMIT 1)  T where T.STATUS = 'OK') M
) T_2

"""

flux.inline.exec-queries += """
SELECT
    A.MSISDN MSISDN,
    INITCAP(A.PRENOM) LASTNAME,
    UPPER(A.NOM) FIRSTNAME,
    UNIX_TIMESTAMP(A.DATE_NAISSANCE) BIRTHDATE2,
    B.GENRE SEX
FROM CDR.SPARK_IT_KYC_BDI_FULL A 
LEFT JOIN DIM.SPARK_DT_BASE_IDENTIFICATION B
ON A.MSISDN=B.MSISDN 
WHERE ORIGINAL_FILE_DATE ='###SLICE_VALUE###'
"""

flux.inline.post-exec-queries += "INSERT INTO MON.EXPORT_HISTORY VALUES ('LOAD_EXPORT_DLANDG_IRIS', 'OK', CURRENT_TIMESTAMP, '###SLICE_VALUE###')"


flux.hdfs.output-format = "csv"
flux.hdfs.output-has-header = "true"
flux.hdfs.output-separator = ";"
flux.hdfs.output-mode = "overwrite"
flux.hdfs.output-path = "/PROD/EXPORT/IRIS/IDENTIFICATION_IRIS"
