flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HDFS"
flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}

flux.spark.setup-var +=  {"key": "job_instanceid", "value": "LOAD_EXPORT_KPI_TRAFIC_AMN"}

flux.name = "LOAD_EXPORT_KPI_TRAFIC_AMN"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -35
flux.slice-end-value = -1
flux.slice-step-value = 7
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    case when count(*) = 5 then 'OK' else 'NOK' end
from
(
    select
        status,
        row_number() over(partition by event_date order by insert_date desc) rang
    from mon.export_history
    where job_instanceid = '${hivevar:job_instanceid}'
    and event_date between CONCAT(YEAR(date_sub(current_date, 35)) , LPAD(WEEKOFYEAR(date_sub(current_date, 35)), 2, 0)) AND CONCAT(YEAR(date_sub(current_date, 1)) , LPAD(WEEKOFYEAR(date_sub(current_date, 1)), 2, 0))
) R
where status = 'OK' and rang = 1
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from
dim.dt_dates
where datecode between date_sub(current_date, 35) and date_sub(current_date, 1)
and CONCAT(YEAR(datecode) , LPAD(WEEKOFYEAR(datecode), 2, 0)) in
(
    select event_date
    from
    (
        select
            *,
            row_number() over(partition by event_date order by insert_date desc) rang
        from mon.export_history
        where job_instanceid = '${hivevar:job_instanceid}'
        and event_date between CONCAT(YEAR(date_sub(current_date, 35)) , LPAD(WEEKOFYEAR(date_sub(current_date, 35)), 2, 0)) AND CONCAT(YEAR(date_sub(current_date, 1)) , LPAD(WEEKOFYEAR(date_sub(current_date, 1)), 2, 0))
    ) T
    where status = 'OK' and rang = 1
)
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true

flux.inline.pre-exec-queries += """
SELECT IF(
    T_1.FT_EXIST = 7
    AND T_2.NB_EXPORT < 1
    , 'OK'
    , 'NOK'
)
FROM
(SELECT COUNT(DISTINCT EVENT_DATE) FT_EXIST FROM MON.SPARK_FT_SITE_360 WHERE CONCAT(YEAR(event_date) , LPAD(WEEKOFYEAR(event_date), 2, 0)) = CONCAT(YEAR('###SLICE_VALUE###') , LPAD(WEEKOFYEAR('###SLICE_VALUE###'), 2, 0))) T_1,
(
    SELECT COUNT(*) NB_EXPORT FROM
    (SELECT * FROM (SELECT * FROM MON.EXPORT_HISTORY WHERE EVENT_DATE=CONCAT(YEAR('###SLICE_VALUE###') , LPAD(WEEKOFYEAR('###SLICE_VALUE###'), 2, 0)) AND JOB_INSTANCEID='${hivevar:job_instanceid}' ORDER BY INSERT_DATE DESC LIMIT 1)  T where T.STATUS = 'OK') M
) T_2
"""

flux.inline.exec-queries += """
select event_date,loc_site_name site_name, sum(nvl(og_total_call_duration/60,0)) trafic_voix,
((sum(nvl(data_BYTES_RECEIVED,0))+sum(nvl(data_BYTES_SENT,0)))/(1024*1024*1024)) trafic_data
from
(
select * from mon.spark_ft_site_360 where CONCAT(YEAR(event_date) , LPAD(WEEKOFYEAR(event_date), 2, 0)) = CONCAT(YEAR('###SLICE_VALUE###') , LPAD(WEEKOFYEAR('###SLICE_VALUE###'), 2, 0)) 
) A
right join (select distinct site_name from dim.dt_ci_lac_site_amn) B
on upper(trim(A.loc_site_name)) = upper(trim(B.site_name))
group by event_date,loc_site_name
"""

flux.inline.post-exec-queries += "INSERT INTO MON.EXPORT_HISTORY VALUES ('${hivevar:job_instanceid}', 'OK', CURRENT_TIMESTAMP, CONCAT(YEAR('###SLICE_VALUE###') , LPAD(WEEKOFYEAR('###SLICE_VALUE###'), 2, 0)))"


flux.hdfs.output-format = "csv"
flux.hdfs.output-has-header = "true"
flux.hdfs.output-separator = ";"
flux.hdfs.output-mode = "overwrite"
flux.hdfs.output-path = "/PROD/EXPORT/KPI_TRAFIC_AMN"
