flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}

flux.name = "LOAD_SPARK_FT_SPHERE_TRAFFIC_MONTH"

flux.has-date-processing = true

flux.slice-value-type = "MONTHLY"
flux.slice-begin-value = -4
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    if(count(distinct date_format(datecode,'yyyy-MM')) = 4, 'OK', 'NOK')
from dim.dt_dates
where substring(datecode, 1, 7) between substring(add_months(current_date, -4), 1, 7) and substring(add_months(current_date, -1), 1, 7)
    and substring(datecode, 1, 7) in (select distinct EVENT_MONTH from MON.SPARK_FT_SPHERE_TRAFFIC_MONTH where EVENT_MONTH between substring(add_months(current_date, -4), 1, 7) and substring(add_months(current_date, -1), 1, 7))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    distinct date_format(datecode,'yyyy-MM')
from dim.dt_dates
where substring(datecode, 1, 7) between substring(add_months(current_date, -4), 1, 7) and substring(add_months(current_date, -1), 1, 7)
    and substring(datecode, 1, 7) in (select distinct EVENT_MONTH from MON.SPARK_FT_SPHERE_TRAFFIC_MONTH where EVENT_MONTH between substring(add_months(current_date, -4), 1, 7) and substring(add_months(current_date, -1), 1, 7))
"""
flux.slice-date-format = "yyyy-MM"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false


flux.inline.exec-queries += "SET hive.exec.dynamic.partition=true"
flux.inline.exec-queries += "SET hive.exec.dynamic.partition.mode=nonstrict"
flux.inline.exec-queries += "SET hive.enforce.bucketing=false"
flux.inline.exec-queries += "SET hive.enforce.sorting=false"

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.1.jar"

flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS  FN_GET_NNP_MSISDN_SIMPLE_DESTN"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION FN_GET_NNP_MSISDN_SIMPLE_DESTN as 'cm.orange.bigdata.udf.GetNnpMsisdnSimpleDestn'"

flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS FN_GET_OPERATOR_CODE"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION FN_GET_OPERATOR_CODE as 'cm.orange.bigdata.udf.GetOperatorCode'"


flux.pre-exec-queries += "/PROD/SCRIPTS/FT/FT_SPHERE_TRAFFIC_MONTH/prequery_spark_ft_sphere_traffic_month.hql"

flux.exec-queries += "/PROD/SCRIPTS/FT/FT_SPHERE_TRAFFIC_MONTH/compute_and_insert_into_spark_ft_sphere_traffic_month.hql"






