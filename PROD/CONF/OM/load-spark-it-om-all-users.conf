flux.yarn.queue = "collect"
flux.log-level = "ERROR"

flux.name = "LOAD_SPARK_IT_OM_ALL_USERS"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.has-date-processing = false

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode", "value": "nonstrict"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition", "value": "true"}
flux.spark.setup-conf += {"key": "hive.enforce.bucketing", "value": "false"}
flux.spark.setup-conf += {"key": "hive.enforce.sorting", "value": "false"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.hdfs.move-to-tt = true
flux.hdfs.src-temp-tt-dir-regex = "/PROD/RAW/OM/ALLUSERS/AllUsers*"
flux.hdfs.dest-temp-tt-dir = "/PROD/TT/OM/ALLUSERS"

flux.hdfs.move-to-arch = true
flux.hdfs.src-arch-dir-regex = "/PROD/TT/OM/ALLUSERS/*"
flux.hdfs.dest.arch-dir = "/PROD/ARCH/OM/ALLUSERS"
flux.hdfs.dest.has-sub-dir = true
flux.hdfs.dest.has-sub-dir-extractor-regex = "(\\d{8})"

flux.has-pre-queries = false
flux.has-exec-queries = true
flux.has-post-queries = false

flux.exec-queries += "/PROD/SCRIPTS/IT/OM/insert_into_spark_it_om_all_users.hql"

