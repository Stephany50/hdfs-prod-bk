flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.spark.setup-conf = []

flux.setup-conf = []


flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}

flux.name = "LOAD_SPARK_FT_A_REPORTING_INTERCO_INTERNATIONAL"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -735
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select  if(count(*)=7,'OK','NOK')

from dim.dt_dates
where datecode between date_sub(current_date, 735) and date_sub(current_date, 1)
    and datecode in (select distinct PROCESSING_DATE from AGG.SPARK_FT_A_REPORTING_INTERCO_INTERNATIONAL WHERE  PROCESSING_DATE between date_sub(current_date, 735) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 735) and date_sub(current_date, 1)
    and datecode in (select distinct PROCESSING_DATE from AGG.SPARK_FT_A_REPORTING_INTERCO_INTERNATIONAL where PROCESSING_DATE between date_sub(current_date, 735) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true

flux.exec-query.execution.mode = "JDBC"
flux.inline.exec-queries += "set hive.vectorized.execution.enabled=true"
flux.inline.exec-queries += "set hive.vectorized.execution.reduce.enabled=true"
flux.inline.exec-queries += "set hive.exec.parallel=true"
flux.inline.exec-queries += "SET hive.exec.reducers.max=1"
flux.inline.exec-queries += "SET hive.exec.dynamic.partition=true"
flux.inline.exec-queries += "SET hive.exec.dynamic.partition.mode=nonstrict"
flux.inline.exec-queries += "SET hive.enforce.bucketing=true"
flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS FN_INTERCO_DESTINATION"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION FN_INTERCO_DESTINATION as 'cm.orange.bigdata.udf.IntercoDestination'"
flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS FN_INTERCO_TRUNCKNAME_DEST"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION FN_INTERCO_TRUNCKNAME_DEST as 'cm.orange.bigdata.udf.IntercoTrunckNameDest'"
flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS FN_GET_OPERATOR_CODE"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION FN_GET_OPERATOR_CODE as 'cm.orange.bigdata.udf.GetOperatorCode'"
flux.inline.exec-queries += "DROP  TEMPORARY FUNCTION IF EXISTS FN_FAISEAU_TRUNCK_MSC_HUAWEI"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION FN_FAISEAU_TRUNCK_MSC_HUAWEI as 'cm.orange.bigdata.udf.FaiseauTrunckMscHuawei'"

flux.inline.exec-queries += "TRUNCATE TABLE TMP.SPARK_FT_AG_INTERCO_2"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.SPARK_FT_X_INTERCO_FINAL_2"

flux.pre-exec-queries += "/PROD/SCRIPTS/REPORT/REPORTING_INTERCO/INTERNATIONAL_SORTANT/prequery_compute_and_insert_into_spark_ft_a_reporting_interco_international.hql"

flux.exec-queries += "/PROD/SCRIPTS/REPORT/REPORTING_INTERCO/INTERNATIONAL_SORTANT/compute_and_insert_into_tmp_spark_ft_ag_interco_2.hql"
flux.exec-queries += "/PROD/SCRIPTS/REPORT/REPORTING_INTERCO/INTERNATIONAL_SORTANT/compute_and_insert_into_tmp_spark_ft_x_interco_final_2.hql"
flux.exec-queries += "/PROD/SCRIPTS/REPORT/REPORTING_INTERCO/INTERNATIONAL_SORTANT/compute_and_insert_into_spark_ft_a_reporting_interco_international.hql"

flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.SPARK_FT_AG_INTERCO_2"
flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.SPARK_FT_X_INTERCO_FINAL_2"