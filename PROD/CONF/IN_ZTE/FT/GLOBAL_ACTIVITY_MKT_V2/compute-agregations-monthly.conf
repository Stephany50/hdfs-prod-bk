flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []


flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}

flux.name = "LOAD_SPARK_KPI_DG_AGREGATIONS_MONTHLY"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value =-33
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query= false
flux.slice-state-query="""
select  if(count(*)=7,'OK','NOK')

from dim.dt_dates
where datecode between date_sub(current_date, 7) and date_sub(current_date, 1)
    and datecode in (select distinct PROCESSING_DATE from AGG.SPARK_KPIS_DG_TMP_SUPP_REG_INCONNUE where GRANULARITE = 'MONTHLY' and PROCESSING_DATE between date_sub(current_date, 7) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = false
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 7) and date_sub(current_date, 1)
    and datecode in (select distinct PROCESSING_DATE from AGG.SPARK_KPIS_DG_TMP_SUPP_REG_INCONNUE where GRANULARITE = 'MONTHLY' and PROCESSING_DATE between date_sub(current_date, 7) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false
flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS GET_NNP_MSISDN_9DIGITS"
flux.inline.exec-queries += "create temporary function GET_NNP_MSISDN_9DIGITS as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"
flux.inline.pre-exec-queries+="select if(is_ok=0 and nb_jours=datediff('###SLICE_VALUE###',date_add(last_day(add_months('###SLICE_VALUE###',-1)),1))+1,'OK','NOK') from (select count(*) is_ok from AGG.SPARK_KPIS_DG_TMP_SUPP_REG_INCONNUE where processing_date='###SLICE_VALUE###' AND granularite='MONTHLY' )a,(select count(distinct processing_date) nb_jours from AGG.SPARK_KPIS_DG_TMP_SUPP_REG_INCONNUE where processing_date between date_add(last_day(add_months('###SLICE_VALUE###',-1)),1) and  '###SLICE_VALUE###' AND  granularite='DAILY')b"
flux.exec-queries += "/PROD/SCRIPTS/REPORT/GLOBAL_ACTIVITY_MKT_V2/compute_and_insert_agregations_monthly.hql"
