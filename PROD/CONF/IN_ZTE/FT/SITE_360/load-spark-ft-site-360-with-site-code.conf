
flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}

flux.name = "LOAD_SPARK_FT_SITE_360_WITH_SITE_CODE"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -20
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    if(count(*)=20,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from MON.SPARK_FT_SITE_360_WITH_SITE_CODE where event_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from MON.SPARK_FT_SITE_360_WITH_SITE_CODE where event_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false

flux.inline.pre-exec-queries += """
SELECT IF(
    T_1.FT_SITE_360_EXIST = 0
    AND T_2.FT_BILLED_TRANSACTION_PREPAID_EXIST > 1
    AND T_3.FT_CRA_GPRS_EXIST > 1
    AND T_4.ft_subscription_EXIST > 1
    AND T_5.FT_SITE_EXIST > 1
    , 'OK'
    , 'NOK'
)
FROM
(SELECT COUNT(*) FT_SITE_360_EXIST FROM MON.SPARK_FT_SITE_360_WITH_SITE_CODE WHERE EVENT_DATE='###SLICE_VALUE###') T_1,
(SELECT COUNT(*) FT_BILLED_TRANSACTION_PREPAID_EXIST FROM MON.SPARK_FT_BILLED_TRANSACTION_PREPAID WHERE TRANSACTION_DATE='###SLICE_VALUE###') T_2,
(SELECT COUNT(*) FT_CRA_GPRS_EXIST FROM MON.SPARK_FT_CRA_GPRS WHERE SESSION_DATE='###SLICE_VALUE###') T_3,
(SELECT COUNT(*) ft_subscription_EXIST FROM MON.spark_ft_subscription WHERE transaction_date='###SLICE_VALUE###') T_4,
(SELECT COUNT(*) FT_SITE_EXIST FROM MON.spark_ft_client_cell_traffic_hour WHERE EVENT_DATE='###SLICE_VALUE###') T_5
"""

flux.inline.exec-queries += "set hive.vectorized.execution.enabled=false"
flux.inline.exec-queries += "set hive.auto.convert.join=false"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.SPARK_TMP_MSISDN_SITE_CODE"

flux.inline.exec-queries += """
INSERT INTO TMP.SPARK_TMP_MSISDN_SITE_CODE
select
    msisdn
    , site_code
    , hour_period
from
(
    SELECT
        MSISDN,
        hour_period,
        last_ci location_ci
    FROM MON.spark_ft_client_cell_traffic_hour
    WHERE EVENT_DATE = '###SLICE_VALUE###'
) A
left JOIN
(
    SELECT
        NVL(B10.CI, B11.CI) CI,
        UPPER(NVL(B10.site_code, B11.site_code)) site_code
    FROM
    (
        SELECT
            cast(ci as int) CI
            , MAX(case when ci = '60233' then 'OCM0228' else site_code end) site_code
        FROM DIM.SPARK_DT_GSM_CELL_CODE
        GROUP BY cast(ci as int)
    ) B10
    FULL JOIN
    (
        SELECT
            cast(ci as int) CI
            , MAX(codesite) site_code
        FROM DIM.DT_CI_LAC_SITE_AMN
        GROUP BY cast(ci as int)
    ) B11
    ON B10.CI = B11.CI
) B on a.location_ci = b.ci
"""

flux.inline.exec-queries += """
INSERT INTO MON.SPARK_FT_SITE_360_WITH_SITE_CODE
SELECT
    SITE_CODE,
    LOC_SITE_NAME,
    LOC_TOWN_NAME,
    LOC_ADMINISTRATIVE_REGION,
    LOC_COMMERCIAL_REGION,
    LOC_ZONE_PMO,
    LOC_QUARTIER,
    LOC_ARRONDISSEMENT,
    LOC_DEPARTEMENT,
    LOC_SECTOR,
    CATEGORY_SITE,
    DATA_BYTES_RECEIVED,
    DATA_BYTES_SENT,
    TRAFIC_VOIX,
    TRAFIC_SMS,
    REVENU_VOIX_PYG,
    REVENU_SMS_PYG,
    REVENU_SUBS_VOIX,
    REVENU_SUBS_DATA,
    REVENU_SUBS_SMS,
    CURRENT_TIMESTAMP() INSERT_DATE,
    '###SLICE_VALUE###' EVENT_DATE
FROM
(
    SELECT
        nvl(A.site_code, nvl(b.site_code, u.site_code)) site_code,
        A.LOC_SITE_NAME,
        A.LOC_TOWN_NAME,
        A.LOC_ADMINISTRATIVE_REGION,
        A.LOC_COMMERCIAL_REGION,
        A.LOC_ZONE_PMO,
        A.LOC_QUARTIER,
        A.LOC_ARRONDISSEMENT,
        A.LOC_DEPARTEMENT,
        A.LOC_SECTOR,
        A.CATEGORY_SITE,
        B.DATA_BYTES_RECEIVED,
        B.DATA_BYTES_SENT,
        B.TRAFIC_VOIX,
        B.TRAFIC_SMS,
        B.REVENU_VOIX_PYG,
        B.REVENU_SMS_PYG,
        U.REVENU_SUBS_VOIX,
        U.REVENU_SUBS_DATA,
        U.REVENU_SUBS_SMS
    FROM
    (
        SELECT
            NVL(A0.site_code, A1.site_code) site_code,
            NVL(A0.LOC_SITE_NAME, A1.LOC_SITE_NAME) LOC_SITE_NAME,
            NVL(A0.LOC_ADMINISTRATIVE_REGION, A1.LOC_ADMINISTRATIVE_REGION) LOC_ADMINISTRATIVE_REGION,
            A0.LOC_COMMERCIAL_REGION,
            A0.LOC_ZONE_PMO,
            A0.LOC_QUARTIER,
            A0.LOC_ARRONDISSEMENT,
            A0.LOC_DEPARTEMENT,
            A0.LOC_SECTOR,
            A0.LOC_TOWN_NAME,
            NVL(A0.CATEGORY_SITE, A1.CATEGORY_SITE) CATEGORY_SITE
        FROM
        (
            SELECT
                upper(trim(site_code)) site_code
                , max(UPPER(SITE_NAME)) LOC_SITE_NAME
                , MAX(TOWNNAME) LOC_TOWN_NAME
                , MAX(REGION) LOC_ADMINISTRATIVE_REGION
                , MAX(COMMERCIAL_REGION) LOC_COMMERCIAL_REGION
                , MAX(ZONEPMO) LOC_ZONE_PMO
                , MAX(QUARTIER) LOC_QUARTIER
                , MAX(ARRONDISSEMENT) LOC_ARRONDISSEMENT
                , MAX(DEPARTEMENT) LOC_DEPARTEMENT
                , MAX(SECTEUR) LOC_SECTOR
                , MAX(CATEGORIE_SITE) CATEGORY_SITE
            FROM DIM.SPARK_DT_GSM_CELL_CODE
            GROUP BY upper(trim(site_code))
        ) A0
        FULL JOIN
        (
            SELECT
                upper(trim(codesite)) site_code
                , max(UPPER(SITE_NAME)) LOC_SITE_NAME
                , (
                    CASE
                        WHEN MAX(REGION) = 'ADM' THEN 'Adamaoua'
                        WHEN MAX(REGION) = 'EXN' THEN 'Extreme-Nord'
                        WHEN MAX(REGION) = 'NRD' THEN 'Nord'
                        WHEN MAX(REGION) = 'NRO' THEN 'Nord-Ouest'
                        WHEN MAX(REGION) = 'SUD' THEN 'Sud'
                        WHEN MAX(REGION) = 'CTR' THEN 'Centre'
                        WHEN MAX(REGION) = 'EST' THEN 'Est'
                        WHEN MAX(REGION) = 'LIT' THEN 'Littoral'
                        WHEN MAX(REGION) = 'OST' THEN 'Ouest'
                        ELSE MAX(REGION)
                    END
                ) LOC_ADMINISTRATIVE_REGION
                , 'AMN' CATEGORY_SITE
            FROM DIM.DT_CI_LAC_SITE_AMN
            GROUP BY upper(trim(codesite))
        ) A1 ON A0.site_code = A1.site_code
    ) A
    FULL JOIN
    (
        select
            site_code,
            sum(DATA_BYTES_RECEIVED) DATA_BYTES_RECEIVED,
            sum(DATA_BYTES_SENT) DATA_BYTES_SENT,
            sum(TRAFIC_VOIX) TRAFIC_VOIX,
            sum(TRAFIC_SMS) TRAFIC_SMS,
            sum(REVENU_VOIX_PYG) REVENU_VOIX_PYG,
            sum(REVENU_SMS_PYG) REVENU_SMS_PYG
        FROM
        (
            select
                CAST(CONV(LOCATION_CI, 16, 10) AS INT) LOCATION_CI,
                0 DATA_BYTES_SENT,
                0 DATA_BYTES_RECEIVED,
                SUM(
                    CASE 
                        WHEN 
                            (
                                CASE
                                WHEN SERVICE_CODE = 'SMS' THEN 'NVX_SMS'
                                WHEN SERVICE_CODE = 'TEL' THEN 'VOI_VOX'
                                WHEN SERVICE_CODE = 'USS' THEN 'NVX_USS'
                                WHEN SERVICE_CODE = 'GPR' THEN 'NVX_DAT_GPR'
                                WHEN SERVICE_CODE = 'DFX' THEN 'NVX_DFX'
                                WHEN SERVICE_CODE = 'DAT' THEN 'NVX_DAT'
                                WHEN SERVICE_CODE = 'VDT' THEN 'NVX_VDT'
                                WHEN SERVICE_CODE = 'WEB' THEN 'NVX_WEB'
                                WHEN UPPER(SERVICE_CODE) IN ('SMSMO','SMSRMG') THEN 'NVX_SMS'
                                WHEN UPPER(SERVICE_CODE) IN ('OC','OCFWD','OCRMG','TCRMG') THEN 'VOI_VOX'
                                WHEN UPPER(SERVICE_CODE) LIKE '%FNF%MODIFICATION%' THEN 'VOI_VOX'
                                WHEN UPPER(SERVICE_CODE) LIKE '%ACCOUNT%INTERRO%' THEN 'VOI_VOX'
                                ELSE 'AUT'
                                END
                            ) IN ('VOI_VOX') THEN CALL_PROCESS_TOTAL_DURATION
                    ELSE  0  END 
                ) TRAFIC_VOIX,
                SUM(
                    CASE 
                        WHEN 
                            (
                                CASE
                                WHEN SERVICE_CODE = 'SMS' THEN 'NVX_SMS'
                                WHEN SERVICE_CODE = 'TEL' THEN 'VOI_VOX'
                                WHEN SERVICE_CODE = 'USS' THEN 'NVX_USS'
                                WHEN SERVICE_CODE = 'GPR' THEN 'NVX_DAT_GPR'
                                WHEN SERVICE_CODE = 'DFX' THEN 'NVX_DFX'
                                WHEN SERVICE_CODE = 'DAT' THEN 'NVX_DAT'
                                WHEN SERVICE_CODE = 'VDT' THEN 'NVX_VDT'
                                WHEN SERVICE_CODE = 'WEB' THEN 'NVX_WEB'
                                WHEN UPPER(SERVICE_CODE) IN ('SMSMO','SMSRMG') THEN 'NVX_SMS'
                                WHEN UPPER(SERVICE_CODE) IN ('OC','OCFWD','OCRMG','TCRMG') THEN 'VOI_VOX'
                                WHEN UPPER(SERVICE_CODE) LIKE '%FNF%MODIFICATION%' THEN 'VOI_VOX'
                                WHEN UPPER(SERVICE_CODE) LIKE '%ACCOUNT%INTERRO%' THEN 'VOI_VOX'
                                ELSE 'AUT'
                                END
                            ) IN ('NVX_SMS') THEN 1
                    ELSE 0 END
                ) TRAFIC_SMS,
                SUM (
                    CASE 
                        WHEN 
                            (
                                CASE
                                WHEN SERVICE_CODE = 'SMS' THEN 'NVX_SMS'
                                WHEN SERVICE_CODE = 'TEL' THEN 'VOI_VOX'
                                WHEN SERVICE_CODE = 'USS' THEN 'NVX_USS'
                                WHEN SERVICE_CODE = 'GPR' THEN 'NVX_DAT_GPR'
                                WHEN SERVICE_CODE = 'DFX' THEN 'NVX_DFX'
                                WHEN SERVICE_CODE = 'DAT' THEN 'NVX_DAT'
                                WHEN SERVICE_CODE = 'VDT' THEN 'NVX_VDT'
                                WHEN SERVICE_CODE = 'WEB' THEN 'NVX_WEB'
                                WHEN UPPER(SERVICE_CODE) IN ('SMSMO','SMSRMG') THEN 'NVX_SMS'
                                WHEN UPPER(SERVICE_CODE) IN ('OC','OCFWD','OCRMG','TCRMG') THEN 'VOI_VOX'
                                WHEN UPPER(SERVICE_CODE) LIKE '%FNF%MODIFICATION%' THEN 'VOI_VOX'
                                WHEN UPPER(SERVICE_CODE) LIKE '%ACCOUNT%INTERRO%' THEN 'VOI_VOX'
                                ELSE 'AUT'
                                END
                            ) IN ('VOI_VOX') THEN MAIN_RATED_AMOUNT 
                        ELSE  0  END 
                ) REVENU_VOIX_PYG,
                SUM (
                    CASE 
                        WHEN 
                        (
                            CASE
                            WHEN SERVICE_CODE = 'SMS' THEN 'NVX_SMS'
                            WHEN SERVICE_CODE = 'TEL' THEN 'VOI_VOX'
                            WHEN SERVICE_CODE = 'USS' THEN 'NVX_USS'
                            WHEN SERVICE_CODE = 'GPR' THEN 'NVX_DAT_GPR'
                            WHEN SERVICE_CODE = 'DFX' THEN 'NVX_DFX'
                            WHEN SERVICE_CODE = 'DAT' THEN 'NVX_DAT'
                            WHEN SERVICE_CODE = 'VDT' THEN 'NVX_VDT'
                            WHEN SERVICE_CODE = 'WEB' THEN 'NVX_WEB'
                            WHEN UPPER(SERVICE_CODE) IN ('SMSMO','SMSRMG') THEN 'NVX_SMS'
                            WHEN UPPER(SERVICE_CODE) IN ('OC','OCFWD','OCRMG','TCRMG') THEN 'VOI_VOX'
                            WHEN UPPER(SERVICE_CODE) LIKE '%FNF%MODIFICATION%' THEN 'VOI_VOX'
                            WHEN UPPER(SERVICE_CODE) LIKE '%ACCOUNT%INTERRO%' THEN 'VOI_VOX'
                            ELSE 'AUT'
                            END
                        ) IN ('NVX_SMS') THEN MAIN_RATED_AMOUNT 
                    ELSE 0 END 
                ) REVENU_SMS_PYG 
            FROM MON.SPARK_FT_BILLED_TRANSACTION_PREPAID
            WHERE TRANSACTION_DATE = '###SLICE_VALUE###'
                AND MAIN_RATED_AMOUNT >= 0
                AND PROMO_RATED_AMOUNT >= 0
            group by CAST(CONV(LOCATION_CI, 16, 10) AS INT)
            union ALL
            SELECT
                CAST(LOCATION_CI AS INT) LOCATION_CI
                , SUM(NVL(BYTES_SENT, 0)) DATA_BYTES_SENT
                , SUM(NVL(BYTES_RECEIVED, 0)) DATA_BYTES_RECEIVED
                , 0 TRAFIC_VOIX
                , 0 TRAFIC_SMS
                , 0 REVENU_VOIX_PYG
                , 0 REVENU_SMS_PYG
            FROM MON.SPARK_FT_CRA_GPRS
            WHERE SESSION_DATE = '###SLICE_VALUE###' AND NVL(MAIN_COST, 0) >= 0
            GROUP BY CAST(LOCATION_CI AS INT)
        ) B0
        LEFT JOIN
        (
            SELECT
                NVL(B10.CI, B11.CI) CI,
                UPPER(NVL(B10.site_code, B11.site_code)) site_code
            FROM
            (
                SELECT
                    cast(ci as int) CI
                    , MAX(case when ci = '60233' then 'OCM0228' else site_code end) site_code
                FROM DIM.SPARK_DT_GSM_CELL_CODE
                GROUP BY cast(ci as int)
            ) B10
            FULL JOIN
            (
                SELECT
                    cast(ci as int) CI
                    , MAX(codesite) site_code
                FROM DIM.DT_CI_LAC_SITE_AMN
                GROUP BY cast(ci as int)
            ) B11
            ON B10.CI = B11.CI
        ) B1
        ON B0.LOCATION_CI = B1.CI
        GROUP BY B1.site_code
    ) B ON A.site_code = B.site_code
    FULL JOIN
    (
        SELECT
            site_code
            , BDLE_COST*(NVL(COEFF_DATA, 0) + NVL(COEFF_ROAMING_DATA, 0))/100 REVENU_SUBS_DATA
            , BDLE_COST*(NVL(COEFF_ONNET, 0) + NVL(COEFF_OFFNET, 0) + NVL(COEFF_INTER, 0) + NVL(COEFF_ROAMING_VOIX, 0))/100 REVENU_SUBS_VOIX
            , BDLE_COST*(NVL(COEF_SMS, 0) + NVL(COEFF_ROAMING_SMS, 0))/100 REVENU_SUBS_SMS
        FROM
        (
            SELECT
                SERVED_PARTY_MSISDN MSISDN,
                RATED_AMOUNT BDLE_COST,
                SUBSCRIPTION_SERVICE_DETAILS BDLE_NAME,
                substr(transaction_time, 1, 2) hour_period
            FROM MON.SPARK_FT_SUBSCRIPTION
            WHERE TRANSACTION_DATE = '###SLICE_VALUE###'
        ) U00
        LEFT JOIN DIM.DT_CBM_REF_SOUSCRIPTION_PRICE U01 ON UPPER(TRIM(U00.BDLE_NAME))= UPPER(TRIM(U01.BDLE_NAME))
        left join TMP.SPARK_TMP_MSISDN_SITE_CODE U02 on U00.msisdn = U02.msisdn and U00.hour_period = U02.hour_period
        group by site_code
    ) U ON A.site_code = U.site_code
) ZZ

"""
