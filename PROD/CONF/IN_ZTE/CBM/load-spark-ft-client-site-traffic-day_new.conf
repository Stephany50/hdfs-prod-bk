flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.spark.setup-var += {"key": "date_offset", "value": "32"}
flux.spark.setup-var += {"key": "table_type", "value": "FT"}
flux.spark.setup-var += {"key": "table_name", "value": "SPARK_FT_CLIENT_SITE_TRAFFIC_DAY"}
flux.spark.setup-var += {"key": "database_table_name", "value": "MON.SPARK_FT_CLIENT_SITE_TRAFFIC_DAY"}
flux.spark.setup-var += {"key": "table_partition", "value": "EVENT_DATE"}
flux.spark.setup-var += {"key": "voice_coeff", "value": "60"}
flux.spark.setup-var += {"key": "sms_coeff", "value": "30"}
flux.spark.setup-var += {"key": "data_coeff", "value": "10"}


flux.name = "LOAD_SPARK_FT_CLIENT_SITE_TRAFFIC_DAY_NEW"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -180
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select  if(count(*)=180,'OK','NOK')

from dim.dt_dates
where datecode between date_sub(current_date, 180) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from mon.spark_ft_client_site_traffic_day_new where event_date between date_sub(current_date, 180) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 180) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from mon.spark_ft_client_site_traffic_day_new where event_date between date_sub(current_date, 180) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true

flux.inline.pre-exec-queries += """
SELECT IF(A.FT_EXIST = 0 and B.msc_transaction_exist>0 and C.cra_gprs_exist>0 ,"OK","NOK") FROM
(SELECT COUNT(*) FT_EXIST FROM mon.spark_ft_client_site_traffic_day_new WHERE EVENT_DATE='###SLICE_VALUE###') A,
(SELECT COUNT(*) msc_transaction_exist FROM mon.spark_ft_msc_transaction WHERE TRANSACTION_DATE='###SLICE_VALUE###')B
,
(SELECT COUNT(*) cra_gprs_exist FROM mon.spark_ft_cra_gprs WHERE SESSION_DATE='###SLICE_VALUE###')C
"""

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.1.jar"
flux.inline.exec-queries += "DROP TEMPORARY  FUNCTION IF  EXISTS FN_GET_OPERATOR_CODE"
flux.inline.exec-queries += "create temporary function FN_GET_OPERATOR_CODE as 'cm.orange.bigdata.udf.GetOperatorCode'"
flux.inline.exec-queries += "set hive.vectorized.execution.enabled=true"
flux.inline.exec-queries += "set hive.vectorized.execution.reduce.enabled=true"
flux.inline.exec-queries += "set hive.exec.parallel=true"
flux.inline.exec-queries += "SET hive.exec.reducers.max=8"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.SPARK_TT_CLIENT_CELL_TRAFIC_DAY_NEW"


flux.inline.exec-queries += """
INSERT INTO TMP.spark_tt_client_cell_trafic_day_new
SELECT
    NVL(A.MSISDN, B.MSISDN) MSISDN,
    NVL(A.LOCATION_CI, B.LOCATION_CI) LOCATION_CI,
    NVL(A.LOCATION_LAC, B.LOCATION_LAC) LOCATION_LAC,
    SUM(NVL(A.DUREE_SORTANT, 0)) DUREE_SORTANT,
    SUM(NVL(A.NBRE_TEL_SORTANT, 0)) NBRE_TEL_SORTANT,
    SUM(NVL(A.DUREE_ENTRANT, 0)) DUREE_ENTRANT,
    SUM(NVL(A.NBRE_TEL_ENTRANT, 0)) NBRE_TEL_ENTRANT,
    SUM(NVL(A.NBRE_SMS_SORTANT, 0)) NBRE_SMS_SORTANT,
    SUM(NVL(A.NBRE_SMS_ENTRANT, 0)) NBRE_SMS_ENTRANT,
    SUM(NVL(B.NBRE_SESSION, 0)) NBRE_SESSION,
    SUM(NVL(B.TOTAL_DATA_UPLOAD, 0)) TOTAL_DATA_UPLOAD,
    SUM(NVL(B.TOTAL_DATA_DOWNLOAD, 0)) TOTAL_DATA_DOWNLOAD,
    NVL(A.OPERATOR_CODE, B.OPERATOR_CODE) OPERATOR_CODE,
    '###SLICE_VALUE###' EVENT_DATE
FROM
(
    SELECT
       served_msisdn  MSISDN,
       Substr(a.served_party_location, 14, 5)  AS LOCATION_CI,
       Sum (CASE
              WHEN a.transaction_direction = 'Sortant'
                   AND Substr (transaction_type, 1, 3) <> 'SMS' THEN
              transaction_duration
              ELSE 0
            END) DUREE_SORTANT,
       Sum (CASE
              WHEN a.transaction_direction = 'Sortant'
                   AND Substr (transaction_type, 1, 3) <> 'SMS' THEN 1
              ELSE 0
            END)  NBRE_TEL_SORTANT,
       Sum (CASE
              WHEN a.transaction_direction = 'Entrant'
                   AND Substr (transaction_type, 1, 3) <> 'SMS' THEN
              transaction_duration
              ELSE 0
            END)  DUREE_ENTRANT,
       Sum (CASE
              WHEN a.transaction_direction = 'Entrant'
                   AND Substr (transaction_type, 1, 3) <> 'SMS' THEN 1
              ELSE 0
            END)  NBRE_TEL_ENTRANT,
       Sum (CASE
              WHEN a.transaction_direction = 'Sortant'
                   AND Substr (transaction_type, 1, 3) = 'SMS' THEN 1
              ELSE 0
            END) NBRE_SMS_SORTANT,
       Sum (CASE
              WHEN a.transaction_direction = 'Entrant'
                   AND Substr (transaction_type, 1, 3) = 'SMS' THEN 1
              ELSE 0
            END)  NBRE_SMS_ENTRANT,
       served_party_location,
       Fn_get_operator_code(served_msisdn) operator_code,
       Substr(served_party_location, -11, 5)  location_lac,
       '###SLICE_VALUE###'   EVENT_DATE
    FROM   mon.spark_ft_msc_transaction a
    WHERE  a.transaction_date = To_date ('###SLICE_VALUE###')
       AND a.served_party_location LIKE '624-02-%'
    GROUP  BY served_msisdn,
          Substr(a.served_party_location, 14, 5),
          Substr(served_party_location, -11, 5) ,
          served_party_location,
          Fn_get_operator_code(served_msisdn)
) A
FULL JOIN
(
    SELECT
        served_party_msisdn MSISDN,
        SUM(bytes_sent) TOTAL_DATA_UPLOAD,
        SUM(bytes_received) TOTAL_DATA_DOWNLOAD,
        COUNT(*) NBRE_SESSION,
        (
            case when length(gpp_user_location_info) = 16 then lpad(conv(substring(gpp_user_location_info, -4, 4), 16, 10), 5, 0)
            when length(gpp_user_location_info) = 26 then conv(substring(gpp_user_location_info, -7, 7), 16, 10)
            else null
            end
        ) LOCATION_CI,
        LOCATION_LAC,
        Fn_get_operator_code(served_party_msisdn) operator_code
    FROM MON.SPARK_FT_CRA_GPRS
    WHERE SESSION_DATE='###SLICE_VALUE###'
    GROUP BY served_party_msisdn,
        LOCATION_LAC,
        (
            case when length(gpp_user_location_info) = 16 then lpad(conv(substring(gpp_user_location_info, -4, 4), 16, 10), 5, 0)
            when length(gpp_user_location_info) = 26 then conv(substring(gpp_user_location_info, -7, 7), 16, 10)
            else null
            end
        ),
        Fn_get_operator_code(served_party_msisdn)
) B
ON A.MSISDN=B.MSISDN 
    AND A.LOCATION_CI=B.LOCATION_CI
    AND A.LOCATION_LAC=B.LOCATION_LAC
GROUP BY A.MSISDN, 
    B.MSISDN,
    A.LOCATION_CI,
    B.LOCATION_CI,
    A.LOCATION_LAC,
    B.LOCATION_LAC,
    A.OPERATOR_CODE, 
    B.OPERATOR_CODE
"""
flux.inline.exec-queries += """
INSERT INTO mon.spark_ft_client_site_traffic_day_new
SELECT
    a.msisdn,
    b.site_name    SITE_NME,
    Sum (duree_sortant)    DUREE_SORTANT,
    Sum (nbre_tel_sortant)    NBRE_TEL_SORTANT,
    Sum (duree_entrant)    DUREE_ENTRANT,
    Sum (nbre_tel_entrant)    NBRE_TEL_ENTRANT,
    Sum (nbre_sms_sortant)    NBRE_SMS_SORTANT,
    Sum (nbre_sms_entrant)    NBRE_SMS_ENTRANT,
    SUM(NBRE_SESSION) NBRE_SESSION,
    SUM(TOTAL_DATA_UPLOAD) TOTAL_DATA_UPLOAD,
    SUM(TOTAL_DATA_DOWNLOAD) TOTAL_DATA_DOWNLOAD,
    current_timestamp    REFRESH_DATE,
    NULL    SITE_NAME_CORRECTED,
    b.townname,
    b.administrative_region,
    b.commercial_region,
    operator_code,
    b.ci location_ci,
    b.lac    location_lac,
    event_date
FROM   TMP.spark_tt_client_cell_trafic_day_new a
LEFT JOIN 
(
    SELECT 
        a.msisdn,
        a.location_ci ci,
        a.location_lac lac,
        b.site_name site_name,
        b.townname townname,
        b.administrative_region administrative_region,
        b.commercial_region commercial_region
    FROM   
    (
        SELECT
            DISTINCT b.msisdn   msisdn,
            First_value(b.location_ci) OVER ( partition BY b.msisdn  ORDER BY b.nbre DESC) LOCATION_CI,-- on prend d'abord le location ci ou il a le plus traffiqu√©
            First_value(b.location_lac) OVER ( partition BY b.msisdn  ORDER BY b.nbre DESC) LOCATION_LAC
        FROM   
        (
            SELECT
                msisdn,
                location_ci,
                location_lac,
                Sum(
                    (NVL(duree_sortant, 0) + NVL(duree_entrant, 0))/${hivevar:voice_coeff}
                    +
                    (NVL(nbre_sms_sortant, 0) + NVL(nbre_sms_entrant, 0))/${hivevar:sms_coeff}
                    +
                    (NVL(TOTAL_DATA_UPLOAD, 0) + NVL(TOTAL_DATA_DOWNLOAD, 0))/(${hivevar:data_coeff} * 1024 * 1024)   
                ) nbre
            FROM TMP.spark_tt_client_cell_trafic_day_new
            GROUP BY msisdn,
                location_ci,
                location_lac
        ) b
    ) a
    LEFT JOIN
    (
        SELECT 
            ci,
            lac,
            max(site_name) site_name,
            max(townname) townname,
            max(region) administrative_region,
            max(commercial_region) commercial_region
        FROM dim.spark_dt_gsm_cell_code_new
        group by ci,
            lac
    ) b
    ON a.location_ci = b.ci
        AND a.location_lac =b.lac
) b
ON a.msisdn = b.msisdn
GROUP  BY event_date,
          a.msisdn,
          b.site_name,
          b.townname,
          b.administrative_region,
          b.commercial_region,
          operator_code,
          b.ci,
          b.lac
"""


flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.SPARK_TT_CLIENT_CELL_TRAFIC_DAY_NEW"


