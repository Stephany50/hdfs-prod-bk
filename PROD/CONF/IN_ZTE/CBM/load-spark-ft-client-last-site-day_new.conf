flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.spark.setup-var += {"key": "date_offset", "value": "32"}
flux.spark.setup-var += {"key": "table_type", "value": "FT"}
flux.spark.setup-var += {"key": "table_name", "value": "SPARK_FT_CLIENT_LAST_SITE_DAY"}
flux.spark.setup-var += {"key": "database_table_name", "value": "MON.SPARK_FT_CLIENT_LAST_SITE_DAY"}
flux.spark.setup-var += {"key": "table_partition", "value": "EVENT_DATE"}
flux.spark.setup-var += {"key": "voice_coeff", "value": "60"}
flux.spark.setup-var += {"key": "sms_coeff", "value": "30"}
flux.spark.setup-var += {"key": "data_coeff", "value": "10"}

flux.name = "LOAD_SPARK_FT_CLIENT_LAST_SITE_DAY_NEW"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -300
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select  if(count(*)=300,'OK','NOK')

from dim.dt_dates
where datecode between date_sub(current_date, 300) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from mon.SPARK_FT_CLIENT_LAST_SITE_DAY_NEW where event_date between date_sub(current_date, 300) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 300) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from mon.SPARK_FT_CLIENT_LAST_SITE_DAY_NEW where event_date between date_sub(current_date, 300) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true

flux.inline.pre-exec-queries += """
SELECT IF(A.FT_EXIST = 0 and C.CLIENT_SITE_TRAFFIC_DAY_EXIST>0 AND B.FT_PREV_EXIST>0,"OK","NOK") FROM
(SELECT COUNT(*) FT_EXIST FROM MON.SPARK_FT_CLIENT_LAST_SITE_DAY_NEW WHERE EVENT_DATE='###SLICE_VALUE###') A,
(SELECT COUNT(*) FT_PREV_EXIST FROM MON.SPARK_FT_CLIENT_LAST_SITE_DAY_NEW WHERE EVENT_DATE=DATE_SUB('###SLICE_VALUE###',1)) B,
(SELECT COUNT(*) CLIENT_SITE_TRAFFIC_DAY_EXIST FROM MON.spark_FT_CLIENT_SITE_TRAFFIC_DAY_NEW WHERE EVENT_DATE='###SLICE_VALUE###')C
"""

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.1.jar"
flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS fn_format_msisdn_to_9digits"
flux.inline.exec-queries += "create temporary function fn_format_msisdn_to_9digits as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"
flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS FN_GET_OPERATOR_CODE"
flux.inline.exec-queries += "create temporary function FN_GET_OPERATOR_CODE as 'cm.orange.bigdata.udf.GetOperatorCode'"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.SPARK_TT_CLIENT_LAST_SITE_DAY_NEW"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.SPARK_TT_CLIENT_SITE_TRAFFIC_ON_90DAY_NEW"

flux.inline.exec-queries += """
INSERT INTO TMP.SPARK_TT_CLIENT_LAST_SITE_DAY_NEW
SELECT
    fn_format_msisdn_to_9digits(MSISDN) MSISDN,
    SITE_NAME,
    TOWNNAME,
    ADMINISTRATIVE_REGION,
    COMMERCIAL_REGION,
    LAST_LOCATION_DAY,
    OPERATOR_CODE,
    current_timestamp AS INSERT_DATE,
    '###SLICE_VALUE###' event_date,
    LOCATION_CI,
    location_lac
FROM
    (
        select
            a.msisdn,
            max(a.site_name)site_name,
            max(a.townname)townname,
            max(a.administrative_region)administrative_region,
            max(a.commercial_region)commercial_region,
            max(a.last_location_day) last_location_day,
            max(a.operator_code)operator_code,
            max(a.insert_date) insert_date,
            max(a.location_ci) location_ci,
            max(a.location_lac) location_lac,
            event_date
        from MON.SPARK_FT_CLIENT_LAST_SITE_DAY_NEW a
        WHERE EVENT_DATE = date_sub('###SLICE_VALUE###', 1) and location_ci is not null and location_lac is not null and site_name is not null 
        group by msisdn, event_date
) T
WHERE
    OPERATOR_CODE <> 'UNKNOWN_OPERATOR'
    OR  (OPERATOR_CODE = 'UNKNOWN_OPERATOR' AND LAST_LOCATION_DAY >  date_sub('###SLICE_VALUE###', 179))
"""
flux.inline.exec-queries += """
INSERT INTO TMP.SPARK_TT_CLIENT_SITE_TRAFFIC_ON_90DAY_NEW
SELECT
        a.MSISDN ,
        max(a.SITE_NAME)SITE_NAME,
        max(a.TOWNNAME)TOWNNAME,
        max(a.ADMINISTRATIVE_REGION)ADMINISTRATIVE_REGION,
        max(a.COMMERCIAL_REGION)COMMERCIAL_REGION,
        max(cast(b.LAST_LOCATION_DAY as date)) LAST_LOCATION_DAY,
        max(a.OPERATOR_CODE)OPERATOR_CODE,
        current_timestamp  INSERT_DATE,
        '###SLICE_VALUE###' as E_DATE,
        max(a.LOCATION_CI)LOCATION_CI ,
        max(a.LOCATION_LAC)LOCATION_LAC
    FROM
    (
        SELECT
            MSISDN,
            m.SITE_NAME,
            m.TOWNNAME,
            nvl(m.LOCATION_CI,ci) LOCATION_CI,
            nvl(m.LOCATION_LAC,lac) LOCATION_LAC,
            m.ADMINISTRATIVE_REGION,
            m.COMMERCIAL_REGION,
            m.OPERATOR_CODE
        FROM
        (
            SELECT
            fn_format_msisdn_to_9digits(MSISDN) MSISDN,
            SITE_NAME,
            TOWNNAME,
                location_ci,
                LOCATION_LAC,
            ADMINISTRATIVE_REGION,
            COMMERCIAL_REGION,
            OPERATOR_CODE,
            ROW_NUMBER() OVER (PARTITION BY fn_format_msisdn_to_9digits(MSISDN) ORDER BY Sum(
                (NVL(duree_sortant, 0) + NVL(duree_entrant, 0))/${hivevar:voice_coeff}
                +
                (NVL(nbre_sms_sortant, 0) + NVL(nbre_sms_entrant, 0))/${hivevar:sms_coeff}
                +
                (NVL(TOTAL_DATA_UPLOAD, 0) + NVL(TOTAL_DATA_DOWNLOAD, 0))/(${hivevar:data_coeff} * 1024 * 1024)   
            ) DESC) AS Rang
            FROM MON.SPARK_FT_CLIENT_SITE_TRAFFIC_DAY_NEW a
            WHERE EVENT_DATE BETWEEN date_sub('###SLICE_VALUE###', 89) AND  '###SLICE_VALUE###'
            GROUP BY
            fn_format_msisdn_to_9digits(MSISDN),
            SITE_NAME,
            TOWNNAME,
            LOCATION_CI,
            LOCATION_LAC,
            ADMINISTRATIVE_REGION,
            COMMERCIAL_REGION,
            OPERATOR_CODE
        ) m
        left join (select site_name , max(ci ) ci , max(lac) lac from DIM.spark_dt_gsm_cell_code_NEW group by site_name ) b on upper(trim(nvl(m.site_name,'ND'))) = upper(trim(nvl(b.site_name,'ND')))
        WHERE Rang = 1
    )a
    INNER JOIN
    (
        SELECT
        fn_format_msisdn_to_9digits(MSISDN) MSISDN,
        CAST(MAX(EVENT_DATE) AS VARCHAR(10) ) LAST_LOCATION_DAY
        FROM MON.SPARK_FT_CLIENT_SITE_TRAFFIC_DAY_NEW a
        WHERE EVENT_DATE BETWEEN date_sub('###SLICE_VALUE###', 89) AND  '###SLICE_VALUE###'
        GROUP BY fn_format_msisdn_to_9digits(MSISDN)
    ) b
    ON a.MSISDN = b.MSISDN
group by a.msisdn
"""
flux.inline.exec-queries += """
INSERT INTO MON.SPARK_FT_CLIENT_LAST_SITE_DAY_NEW
SELECT
 MSISDN
 , TRIM(SITE_NAME) AS SITE_NAME
 , TOWNNAME
 , ADMINISTRATIVE_REGION
 , COMMERCIAL_REGION
 , LAST_LOCATION_DAY
 , OPERATOR_CODE
 , INSERT_DATE
 , LOCATION_CI
 , LOCATION_LAC
 , EVENT_DATE
FROM (
    SELECT
        O.MSISDN MSISDN,
        nvl (N.SITE_NAME, O.SITE_NAME) SITE_NAME,
        nvl (N.TOWNNAME, O.TOWNNAME ) TOWNNAME,
        nvl (N.ADMINISTRATIVE_REGION, O.ADMINISTRATIVE_REGION ) ADMINISTRATIVE_REGION,
        nvl (N.COMMERCIAL_REGION, O.COMMERCIAL_REGION ) COMMERCIAL_REGION,
        nvl (N.LAST_LOCATION_DAY, O.LAST_LOCATION_DAY ) LAST_LOCATION_DAY,
        nvl (N.LOCATION_CI, O.LOCATION_CI ) LOCATION_CI,
        nvl (N.LOCATION_LAC, O.LOCATION_LAC ) LOCATION_LAC,
        O.OPERATOR_CODE OPERATOR_CODE,
        N.INSERT_DATE INSERT_DATE,
        N.EVENT_DATE EVENT_DATE
    FROM TMP.SPARK_TT_CLIENT_LAST_SITE_DAY_NEW O
    LEFT JOIN TMP.SPARK_TT_CLIENT_SITE_TRAFFIC_ON_90DAY_NEW N ON O.MSISDN=N.MSISDN
    WHERE N.MSISDN IS NOT NULL
    UNION
    SELECT
        N.MSISDN,
        N.SITE_NAME,
        N.TOWNNAME,
        N.ADMINISTRATIVE_REGION,
        N.COMMERCIAL_REGION,
        N.LAST_LOCATION_DAY,
        N.LOCATION_CI,
        N.LOCATION_LAC,
        N.OPERATOR_CODE,
        N.INSERT_DATE,
        TO_DATE(N.EVENT_DATE) EVENT_DATE
    FROM TMP.SPARK_TT_CLIENT_LAST_SITE_DAY_NEW N
    LEFT JOIN TMP.SPARK_TT_CLIENT_SITE_TRAFFIC_ON_90DAY_NEW O ON O.MSISDN=N.MSISDN
    WHERE O.MSISDN IS  NULL
    UNION
    SELECT
        O.MSISDN,
        O.SITE_NAME,
        O.TOWNNAME,
        O.ADMINISTRATIVE_REGION,
        O.COMMERCIAL_REGION,
        O.LAST_LOCATION_DAY,
        O.LOCATION_CI,
        O.LOCATION_LAC,
        O.OPERATOR_CODE,
        O.INSERT_DATE,
        TO_DATE(O.EVENT_DATE) EVENT_DATE
    FROM TMP.SPARK_TT_CLIENT_LAST_SITE_DAY_NEW N
    RIGHT JOIN TMP.SPARK_TT_CLIENT_SITE_TRAFFIC_ON_90DAY_NEW O ON O.MSISDN=N.MSISDN
    WHERE N.MSISDN IS  NULL
)T
"""

flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.SPARK_TT_CLIENT_LAST_SITE_DAY_NEW"
flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.SPARK_TT_CLIENT_SITE_TRAFFIC_ON_90DAY_NEW"

