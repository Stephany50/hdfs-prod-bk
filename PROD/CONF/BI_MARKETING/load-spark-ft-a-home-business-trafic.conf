flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.name = "LOAD_SPARK_FT_A_HOME_BUSINESS_CONNECTIVITY_TRAFIC"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -20
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    if(count(*)=20,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from AGG.SPARK_FT_A_HOME_BUSINESS_CONNECTIVTY_TRAFIC where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from AGG.SPARK_FT_A_HOME_BUSINESS_CONNECTIVTY_TRAFIC where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY  FUNCTION IF EXISTS GET_NNP_MSISDN_9DIGITS"
flux.inline.exec-queries += "create temporary function GET_NNP_MSISDN_9DIGITS as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"

flux.inline.pre-exec-queries += """
SELECT IF(
    T_1.ft_tab = 0
    AND T_2.ft_tab > 0
    , 'OK'
    , 'NOK'
)
FROM
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_TRAFIC WHERE processing_date='###SLICE_VALUE###') T_1,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_PARC WHERE processing_date='###SLICE_VALUE###') T_2,
"""


flux.inline.exec-queries += """
insert into AGG.SPARK_FT_A_HOME_BUSINESS_CONNECTIVTY_TRAFIC
select 
A.technologie,
A.profil,
A.type_device,
A.profil_sim,
A.subscription_sim,
A.site_name,
A.last_migration_date,
A.best_site,
A.segment_device,
A.type_parc,
period,
trafic_source,
sum(Trafic_data_mo) Trafic_data_mo,
sum(Trafic_voice_min) Trafic_voice_min,
count(distinct imei) kpi_value,
'###SLICE_VALUE###' processing_date
from
(
    select * from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_TRAFIC 
    where processing_date = '###SLICE_VALUE###' and type_parc is not null
) A
group by 
A.technologie,
A.profil,
A.type_device,
A.profil_sim,
A.subscription_sim,
A.site_name,
A.last_migration_date,
A.best_site,
A.segment_device,
A.type_parc,
period,
trafic_source
"""
