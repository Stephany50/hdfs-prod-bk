flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.name = "LOAD_SPARK_FT_HOME_BUSINESS_CONNECTIVITY_SNAPSHOT"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -20
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    if(count(*)=20,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_SNAPSHOT where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_SNAPSHOT where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY  FUNCTION IF EXISTS GET_NNP_MSISDN_9DIGITS"
flux.inline.exec-queries += "create temporary function GET_NNP_MSISDN_9DIGITS as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"

flux.pre-exec-queries += "/PROD/SCRIPTS/FT/IN_ZTE/prequery_spark_completude.hql"

flux.inline.pre-exec-queries += """
SELECT IF(
    T_1.ft_tab = 0
    AND T_2.ft_tab > 0
    AND T_3.ft_tab > 0
    AND T_4.ft_tab > 0
    , 'OK'
    , 'NOK'
)
FROM
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_SNAPSHOT WHERE processing_date='###SLICE_VALUE###') T_1,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY WHERE processing_date='###SLICE_VALUE###') T_2,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_SUBSCRIPTION WHERE transaction_date='###SLICE_VALUE###') T_3,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_SNAPSHOT WHERE processing_date=date_sub('###SLICE_VALUE###', 1)) T_4
"""


flux.inline.exec-queries += """
insert into MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_SNAPSHOT
select
A.msisdn, A.imei, A.technologie, A.profil, A.type_device, 

case when to_date(A.date_migration) is not null and to_date(A.date_migration) <> to_date('1000-01-01') then to_date(A.date_migration) 
else 
case when A.subscription_sim is not null then to_date(A.subscription_sim) 
when U.TRANSACTION_DATE is not null then to_date(U.TRANSACTION_DATE)
else to_date('1000-01-01') 
end 
end date_migration,

A.profil_sim,
to_date(A.subscription_sim) subscription_sim, 
A.site_name, 
to_date(A.last_date_activity) last_date_activity,

case when B.technologie <> D.technologie then to_date('###SLICE_VALUE###')
when D.last_migration_date is not null and to_date(D.last_migration_date) <> to_date('1000-01-01') then to_date(D.last_migration_date)
else 
case when A.subscription_sim is not null then to_date(A.subscription_sim) 
when U.TRANSACTION_DATE is not null then to_date(U.TRANSACTION_DATE)
else to_date('1000-01-01') 
end 
end last_migration_date,

case when A.subscription_sim is not null then to_date(A.subscription_sim) 
when U.TRANSACTION_DATE is not null then to_date(U.TRANSACTION_DATE)
else to_date('1000-01-01') end activation_date ,

T.best_site best_site,
case 
WHEN A.type_device = 'mbb-fix' then 'FLYBOX'
when A.type_device = 'mbb-mobile' then 
    case when T.best_site is null then 'ND'
    else 
        case when pourcentage_app >= 90 then 'MIFI_HOME'
        else 'MIFI' end
    end
else NULL end segment_device,
'###SLICE_VALUE###' processing_date
from
(
select 
msisdn, imei, technologie, profil, type_device, date_migration, profil_sim,
subscription_sim, site_name, last_date_migration,
case when processing_date is not null then processing_date 
else date_sub(date_sub('###SLICE_VALUE###', 119), 1) end last_date_activity
from
(
select msisdn, imei, technologie, profil, type_device, date_migration, profil_sim,
subscription_sim, site_name, processing_date,
max(date_migration) over(partition by imei) last_date_migration,
row_number() over(partition by imei order by processing_date desc) rg_last_update
from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY 
where processing_date between date_sub('###SLICE_VALUE###', 119) and '###SLICE_VALUE###'
) T
where rg_last_update <= 1

) A 
left join 
(

select *
from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY 
where processing_date = '###SLICE_VALUE###'

) B 
on A.msisdn = B.msisdn and A.imei = B.imei
left join
(

select * 
from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_SNAPSHOT
where processing_date = date_sub('###SLICE_VALUE###', 1)

) D
on A.msisdn = D.msisdn and A.imei = D.imei
left join 
(
SELECT 
SERVED_PARTY_MSISDN MSISDN,
max(TRANSACTION_DATE) TRANSACTION_DATE
FROM MON.SPARK_FT_SUBSCRIPTION
WHERE TRANSACTION_DATE between date_sub('###SLICE_VALUE###', 29) and '###SLICE_VALUE###' 
AND upper(SUBSCRIPTION_SERVICE) LIKE '%PPS%' 
group by SERVED_PARTY_MSISDN
) U 
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(U.msisdn)  

left join
(

select imei, site_name best_site, ( nvl(nbr_site, 0) / nvl(nbr_site_total, 0) ) * 100 pourcentage_app
from
(
select 
imei, site_name, nbr_site ,
row_number() over(partition by imei order by nbr_site desc) rang,
sum(nbr_site) over(partition by imei) nbr_site_total
from 
(
select imei, site_name, count(site_name) nbr_site
from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY 
where processing_date between date_sub('###SLICE_VALUE###', 119) and '###SLICE_VALUE###'
group by imei, site_name
) A
) B where rang <= 1

) T
on A.imei = T.imei
"""
