flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.spark.setup-var += {"key": "cdr_type","value": "ZTE_SUBSCRIPTION_CDR"}
flux.spark.setup-var += {"key": "it_table_name","value": "CDR.SPARK_IT_ZTE_SUBSCRIPTION"}
flux.spark.setup-var += {"key": "it_partition_column","value": "FILE_DATE"}
flux.spark.setup-var += {"key": "flux_type","value": "PREPAID"}
flux.spark.setup-var += {"key": "check_file_regex","value": "IN_ZTE_CHECK_FILELIST_2"}

flux.name = "LOAD_SPARK_FT_HOME_BUSINESS_CONNECTIVITY"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -20
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    if(count(*)=20,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY  FUNCTION IF EXISTS GET_NNP_MSISDN_9DIGITS"
flux.inline.exec-queries += "create temporary function GET_NNP_MSISDN_9DIGITS as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"

flux.pre-exec-queries += "/PROD/SCRIPTS/FT/IN_ZTE/prequery_spark_completude.hql"

flux.inline.pre-exec-queries += """
SELECT IF(
    T_1.ft_tab = 0
    AND T_11.ft_tab > 0
    AND T_2.ft_tab > 0
    AND T_3.ft_tab > 0
    AND T_4.ft_tab > 0
    AND T_5.ft_tab > 0
    AND T_6.ft_tab > 0
    AND T_7.ft_tab > 0
    , 'OK'
    , 'NOK'
)
FROM
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY WHERE processing_date='###SLICE_VALUE###') T_1,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY WHERE processing_date=date_sub('###SLICE_VALUE###', 1)) T_11,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_IMEI_ONLINE WHERE sdate='###SLICE_VALUE###') T_2,
(SELECT COUNT(*) ft_tab FROM CDR.SPARK_IT_ZTE_PRICE_PLAN_EXTRACT WHERE ORIGINAL_FILE_DATE='###SLICE_VALUE###') T_3,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_OTARIE_DATA_TRAFFIC_DAY WHERE transaction_date='###SLICE_VALUE###') T_4,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_CRA_GPRS where session_date='###SLICE_VALUE###') T_5,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_CRA_GPRS_post WHERE session_date='###SLICE_VALUE###') T_6,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_CONTRACT_SNAPSHOT where event_date = date_add('###SLICE_VALUE###', 1)) T_7
"""


flux.inline.exec-queries += """
insert into MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY
select
GET_NNP_MSISDN_9DIGITS(A.msisdn) msisdn,
A.imei,
A.technologie,
SEGMENTATION profil,
A.type_device,
A.date_migration,
A.profil_sim profil_sim,
A.subscription_sim,
case when trim(SEGMENTATION) = 'B2C' then E1.site_name 
when trim(SEGMENTATION) = 'B2B' then E2.site_name 
else null end site_name,
'###SLICE_VALUE###' processing_date
from
(
select 
nvl(A.msisdn, C.msisdn) msisdn, 
C.imei,
case when cast(A.price_plan_code as int) in (101268, 101267) then 'FDD' 
when cast(A.price_plan_code as int) in (101269, 5111832, 5111833, 5111834) then 'TDD'
else 'OTHER' end technologie,
--case when A.original_file_name not like '%in_postpaid%' then 'B2C' else 'B2B' end profil,
C.terminal_type type_device,
case when cast(subs_event_id as int) in (329) then nq_createddate else null end date_migration, 
nvl(PRICE_PLAN_NAME, C.profile) profil_sim,  
case when cast(subs_event_id as int) in (1) then nq_createddate else null end subscription_sim
from (
select 
acc_nbr msisdn, 
channel_id, 
subs_event_id,  
nq_createddate, 
event_cost,  
payment_number, 
transactionsn, 
old_subs_state, 
new_subs_state, 
price_plan_code, 
old_price_plan_code, 
original_file_name
from cdr.spark_it_zte_subscription
where createddate = '###SLICE_VALUE###' 
and cast(trim(subs_event_id) as int) in (1, 329) 
and cast(trim(price_plan_code) as int) in (101269, 5111832, 5111833, 5111834, 101268, 101267) 
group by 
acc_nbr, 
channel_id, 
subs_event_id, 
nq_createddate, 
event_cost, 
payment_number, 
transactionsn, 
old_subs_state, 
new_subs_state, 
price_plan_code, 
old_price_plan_code, 
original_file_name
) A 
left join 
(
SELECT 
NVL(PRICE_PLAN_CODE, 'UNKNOWN') PRICE_PLAN_CODE , 
MIN(PRICE_PLAN_NAME) PRICE_PLAN_NAME
FROM CDR.SPARK_IT_ZTE_PRICE_PLAN_EXTRACT
WHERE ORIGINAL_FILE_DATE = '###SLICE_VALUE###'
GROUP BY NVL(PRICE_PLAN_CODE, 'UNKNOWN') 
) B
on upper(trim(A.price_plan_code))=upper(trim(B.PRICE_PLAN_CODE))
full join 
(
select distinct B.imei imei, B.msisdn msisdn, terminal_type, profile
from 
(


select distinct T1.msisdn msisdn, T2.imei imei, T3.profile profile, T2.terminal_type terminal_type
from
(

select distinct GET_NNP_MSISDN_9DIGITS(msisdn) msisdn from MON.SPARK_FT_OTARIE_DATA_TRAFFIC_DAY 
where transaction_date ='###SLICE_VALUE###' and trim(terminal_type) like '%mbb%' 

union

select 
distinct GET_NNP_MSISDN_9DIGITS(acc_nbr) msisdn
from cdr.spark_it_zte_subscription
where createddate = '###SLICE_VALUE###' 
and cast(trim(subs_event_id) as int) in (1, 329) 
and cast(trim(price_plan_code) as int) in (101269, 5111832, 5111833, 5111834, 101268, 101267)

) T1
left join 
(
select distinct msisdn, imei, terminal_type from MON.SPARK_FT_OTARIE_DATA_TRAFFIC_DAY 
where transaction_date ='###SLICE_VALUE###'
) T2
on GET_NNP_MSISDN_9DIGITS(T1.msisdn)=GET_NNP_MSISDN_9DIGITS(T2.msisdn) 
left join 
(
select access_key, max(profile) profile 
from MON.SPARK_FT_CONTRACT_SNAPSHOT where event_date = date_add('###SLICE_VALUE###', 1) group by access_key
) T3
on GET_NNP_MSISDN_9DIGITS(T1.msisdn) = GET_NNP_MSISDN_9DIGITS(T3.access_key)



) A
left join 
(
select distinct substr(imei, 1, 14) imei, msisdn
from MON.SPARK_FT_IMEI_ONLINE
where sdate = '###SLICE_VALUE###' and trim(IMEI) rlike '^\\d{14,16}$' and upper(trim(SRC_TABLE)) not like '%OTARIE%' 
) B
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(B.msisdn) and upper(trim(B.imei)) like concat(upper(trim(A.imei)),'%')
) C
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(C.msisdn)  


) A 
left join
(

select distinct msisdn, site_name
from
(
select msisdn, location_lac, location_ci
from
(
select msisdn, location_lac, location_ci, 
row_number() over(partition by msisdn order by vol desc) rang
from
(

select served_party_msisdn msisdn, location_lac, location_ci,
sum(bytes_sent)+sum(bytes_received) vol
from MON.SPARK_FT_CRA_GPRS where session_date = '###SLICE_VALUE###'
group by served_party_msisdn, location_lac, location_ci

) K 
) I where rang <= 1
) J
left join 
(
SELECT
CI,
lac,
max(SITE_NAME) SITE_NAME
FROM DIM.SPARK_DT_GSM_CELL_CODE
GROUP BY ci, lac 
) RE on lpad(trim(location_ci), 5, 0) = lpad(trim(ci), 5, 0) and lpad(trim(location_lac), 5, 0)=lpad(trim(lac), 5, 0)

) E1 on GET_NNP_MSISDN_9DIGITS(A.msisdn) = GET_NNP_MSISDN_9DIGITS(E1.msisdn)
left join
(

select distinct msisdn, site_name
from
(
select msisdn, location_lac, location_ci
from
(
select msisdn, location_lac, location_ci, 
row_number() over(partition by msisdn order by vol desc) rang
from
(
select served_party_msisdn msisdn, location_lac, location_ci,
sum(bytes_sent)+sum(bytes_received) vol
from MON.SPARK_FT_CRA_GPRS_post where session_date = '###SLICE_VALUE###'
group by served_party_msisdn, location_lac, location_ci

) K 
) I where rang <= 1
) J
left join 
(
SELECT
CI,
lac,
max(SITE_NAME) SITE_NAME
FROM DIM.SPARK_DT_GSM_CELL_CODE
GROUP BY ci, lac 
) RE on lpad(trim(location_ci), 5, 0) = lpad(trim(ci), 5, 0) and lpad(trim(location_lac), 5, 0)=lpad(trim(lac), 5, 0)

) E2 on GET_NNP_MSISDN_9DIGITS(A.msisdn) = GET_NNP_MSISDN_9DIGITS(E2.msisdn)
left join
(
    SELECT distinct PROFILE_CODE, UPPER(SEGMENTATION) SEGMENTATION FROM DIM.DT_OFFER_PROFILES 
) Z 
on upper(trim(PROFILE_CODE)) = upper(trim(profil_sim))
"""
