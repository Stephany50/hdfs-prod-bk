flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.name = "LOAD_SPARK_FT_HOME_BUSINESS_CONNECTIVITY_TRAFIC"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -20
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    if(count(*)=20,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_TRAFIC where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 20) and date_sub(current_date, 1)
    and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_TRAFIC where processing_date between date_sub(current_date, 20) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY  FUNCTION IF EXISTS GET_NNP_MSISDN_9DIGITS"
flux.inline.exec-queries += "create temporary function GET_NNP_MSISDN_9DIGITS as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"


flux.inline.pre-exec-queries += """
SELECT IF(
    T_1.ft_tab = 0
    AND T_2.ft_tab > 0
    and T_3.ft_tab > 0
    and T_4.ft_tab > 0
    and T_5.ft_tab > 0
    and T_6.ft_tab > 0
    and T_7.ft_tab > 0
    , 'OK'
    , 'NOK'
)
FROM
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_TRAFIC WHERE processing_date='###SLICE_VALUE###') T_1,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_PARC WHERE processing_date='###SLICE_VALUE###') T_2,
(select count(*) ft_tab from MON.SPARK_FT_OTARIE_DATA_TRAFFIC_DAY where transaction_date = '###SLICE_VALUE###') T_3,
(select count(*) ft_tab from MON.SPARK_FT_CRA_GPRS where session_date = '###SLICE_VALUE###' ) T_4,
(select count(*) ft_tab from MON.SPARK_FT_CRA_GPRS_post where session_date = '###SLICE_VALUE###') T_5,
(select count(*) ft_tab FROM MON.SPARK_FT_BILLED_TRANSACTION_PREPAID WHERE TRANSACTION_DATE = '###SLICE_VALUE###') T_6,
(select count(*) ft_tab FROM MON.SPARK_FT_BILLED_TRANSACTION_POSTPAID WHERE TRANSACTION_DATE = '###SLICE_VALUE###') T_7
"""


flux.inline.exec-queries += """
insert into MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_TRAFIC
select 
A.msisdn,
A.imei,
A.technologie,
A.profil,
A.type_device,
A.date_migration,
A.profil_sim,
A.subscription_sim,
A.site_name,
A.last_date_activity,
A.last_migration_date,
A.activation_date,
A.best_site,
A.segment_device,
A.type_parc,
period,
case when period = lpad(nvl(B.hour_period, 0), 2, 0) then 'OTARIE' 
    when period = lpad(nvl(C.hour_period, 0), 2, 0) then 'DATA'
    when period = lpad(nvl(D.hour_period, 0), 2, 0) then 'DATA_POST'
    when period = lpad(nvl(E.hour_period, 0), 2, 0) then 'VOICE'
    when period = lpad(nvl(F.hour_period, 0), 2, 0) then 'VOICE_POST'
else null end trafic_source,
case when period = lpad(nvl(B.hour_period, 0), 2, 0) then B.vol_data 
    when period = lpad(nvl(C.hour_period, 0), 2, 0) then C.vol_data 
    when period = lpad(nvl(D.hour_period, 0), 2, 0) then D.vol_data 
else null end Trafic_data_mo,
case when period = lpad(nvl(E.hour_period, 0), 2, 0) then E.VOICE_TRAFIC 
    when period = lpad(nvl(F.hour_period, 0), 2, 0) then F.VOICE_TRAFIC 
else null end Trafic_voice_min,
'###SLICE_VALUE###' processing_date
from
(
    select '00' as period
    union
    select '01' as period
    union
    select '02' as period
    union
    select '03' as period
    union
    select '04' as period
    union
    select '05' as period
    union
    select '06' as period
    union
    select '07' as period
    union
    select '08' as period
    union
    select '09' as period
    union
    select '10' as period
    union
    select '11' as period
    union
    select '12' as period
    union
    select '13' as period
    union
    select '14' as period
    union
    select '15' as period
    union
    select '16' as period
    union
    select '17' as period
    union
    select '18' as period
    union
    select '19' as period
    union
    select '20' as period
    union
    select '21' as period
    union
    select '22' as period
    union
    select '23' as period
) R
cross join
(
select distinct *
from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY_PARC
where processing_date = '###SLICE_VALUE###'
) A 
left join
(
select msisdn, imei, sum(nbytest)/1024/1024/1024 vol_data , '00' hour_period
from MON.SPARK_FT_OTARIE_DATA_TRAFFIC_DAY 
where transaction_date ='###SLICE_VALUE###' 
group by msisdn, imei
) B
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(B.msisdn) and upper(trim(B.imei)) like concat(upper(trim(A.imei)),'%')
left join
(
select served_party_msisdn, SERVED_PARTY_IMEI,substr(SESSION_TIME, 1, 2) hour_period, 
sum(bytes_sent)/1024/1024/1024 + sum(bytes_received)/1024/1024/1024 vol_data
from MON.SPARK_FT_CRA_GPRS where session_date = '###SLICE_VALUE###'
group by served_party_msisdn, substr(SESSION_TIME, 1, 2), SERVED_PARTY_IMEI
) C
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(C.served_party_msisdn) and substr(upper(trim(A.imei)), 1, 14) = substr(upper(trim(C.SERVED_PARTY_IMEI)), 1, 14)
left join
(
select served_party_msisdn, SERVED_PARTY_IMEI,substr(SESSION_TIME, 1, 2) hour_period, 
sum(bytes_sent)/1024/1024/1024 + sum(bytes_received)/1024/1024/1024 vol_data
from MON.SPARK_FT_CRA_GPRS_post where session_date = '###SLICE_VALUE###'
group by served_party_msisdn, substr(SESSION_TIME, 1, 2), SERVED_PARTY_IMEI
) D
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(D.served_party_msisdn) and substr(upper(trim(A.imei)), 1, 14) = substr(upper(trim(D.SERVED_PARTY_IMEI)), 1, 14)
left join
(
    SELECT 
    served_party , served_party_imei, substr(transaction_time, 1, 2) hour_period,
    SUM(CASE 
    WHEN
        UPPER(SERVICE_CODE) IN ('TEL','OC','OCFWD','OCRMG','TCRMG') 
        OR UPPER(SERVICE_CODE) LIKE '%FNF%MODIFICATION%'
        OR UPPER(SERVICE_CODE) LIKE '%ACCOUNT%INTERRO%' THEN CALL_PROCESS_TOTAL_DURATION
    ELSE 0 END)/60 VOICE_TRAFIC
    FROM MON.SPARK_FT_BILLED_TRANSACTION_PREPAID
    WHERE TRANSACTION_DATE = '###SLICE_VALUE###'
    group by served_party, served_party_imei, substr(transaction_time, 1, 2) 
) E
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(E.served_party) and substr(upper(trim(A.imei)), 1, 14) = substr(upper(trim(E.served_party_imei)), 1, 14)
left join
(
    SELECT 
    served_party , served_party_imei, substr(transaction_time, 1, 2) hour_period,
    SUM(CASE 
    WHEN
        UPPER(SERVICE_CODE) IN ('TEL','OC','OCFWD','OCRMG','TCRMG') 
        OR UPPER(SERVICE_CODE) LIKE '%FNF%MODIFICATION%'
        OR UPPER(SERVICE_CODE) LIKE '%ACCOUNT%INTERRO%' THEN CALL_PROCESS_TOTAL_DURATION
    ELSE 0 END)/60 VOICE_TRAFIC
    FROM MON.SPARK_FT_BILLED_TRANSACTION_POSTPAID
    WHERE TRANSACTION_DATE = '###SLICE_VALUE###'
    group by served_party, served_party_imei, substr(transaction_time, 1, 2) 
) F
on GET_NNP_MSISDN_9DIGITS(A.msisdn)=GET_NNP_MSISDN_9DIGITS(F.served_party) and substr(upper(trim(A.imei)), 1, 14) = substr(upper(trim(F.served_party_imei)), 1, 14)

"""
