flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.name = "LOAD_SPARK_FT_MULTI_SIM"

flux.has-date-processing = false

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -1
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=false
flux.slice-state-query="""
select  if(count(*)=1,'OK','NOK')

from dim.dt_dates
where datecode between date_sub(current_date, 7) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from MON.SPARK_FT_MULTISIM where event_date between date_sub(current_date, 14) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = false
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 7) and date_sub(current_date, 1)
    and datecode in (select distinct event_date from MON.SPARK_FT_MULTISIM where event_date between date_sub(current_date, 14) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = true


flux.inline.exec-queries += "SET hive.exec.dynamic.partition=true"
flux.inline.exec-queries += "SET hive.exec.dynamic.partition.mode=nonstrict"
flux.inline.exec-queries += "SET hive.enforce.bucketing=false"
flux.inline.exec-queries += "SET hive.enforce.sorting=false"


flux.pre-exec-queries += "/PROD/SCRIPTS/FT/MULTI_SIM/prequery_spark_ft_multi_sim.hql"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.TT_SPARK_FT_CLIENT_LAST_CALLED_90_DAYS"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.TT_SPARK_FT_CLIENT_LAST_CALLED_90_DAYS_FILTERED"
flux.inline.exec-queries += "TRUNCATE TABLE TMP.TT_SPARK_FT_MULTI_SIM"
flux.inline.exec-queries += "add jar hdfs:///DATALAB/UDF/hive-udf-1.0.1.jar"
flux.inline.exec-queries += "DROP  TEMPORARY FUNCTION IF EXISTS FN_NNP_SIMPLE_DESTINATION"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION FN_NNP_SIMPLE_DESTINATION as 'cm.orange.bigdata.udf.GetNnpSimpleDestn'"
flux.inline.exec-queries += "DROP  TEMPORARY FUNCTION IF EXISTS FN_MULTISIM_SCORE"
flux.inline.exec-queries += "CREATE OR REPLACE TEMPORARY FUNCTION FN_MULTISIM_SCORE as 'cm.orange.bigdata.udf.MultiSimScore'"
flux.exec-queries += "/PROD/SCRIPTS/FT/MULTI_SIM/compute_and_insert_Into_tt_spark_ft_client_last_called_90_days.hql"
flux.exec-queries += "/PROD/SCRIPTS/FT/MULTI_SIM/compute_and_insert_Into_tt_spark_ft_client_last_called_90_days_filtered.hql"
flux.exec-queries += "/PROD/SCRIPTS/FT/MULTI_SIM/compute_and_insert_into_tt_spark_ft_multi_sim.hql"
flux.exec-queries += "/PROD/SCRIPTS/FT/MULTI_SIM/compute_and_insert_into_spark_ft_multi_sim.hql"
flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.TT_SPARK_FT_CLIENT_LAST_CALLED_90_DAYS"
flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.TT_SPARK_FT_CLIENT_LAST_CALLED_90_DAYS_FILTERED"
flux.inline.post-exec-queries += "TRUNCATE TABLE TMP.TT_SPARK_FT_MULTI_SIM"

