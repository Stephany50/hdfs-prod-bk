flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []
flux.setup-conf = []
flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.parser.quotedRegexColumnNames","value": "true"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.name = "LOAD_SPARK_IT_KYC_BDI_FULL"
flux.has-date-processing = true
flux.slice-value-type = "DAILY"
flux.slice-begin-value = -15
flux.slice-end-value = 0
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select
    if(count(*)=8,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 15) and date_sub(current_date, 0)
    and datecode in (select distinct original_file_date from CDR.SPARK_IT_KYC_BDI_FULL where original_file_date between date_sub(current_date, 15) and date_sub(current_date, 0))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 15) and date_sub(current_date, 0)
    and datecode in (select distinct original_file_date from CDR.SPARK_IT_KYC_BDI_FULL where original_file_date between date_sub(current_date, 15) and date_sub(current_date, 0))
"""
flux.slice-date-format = "yyyy-MM-dd"
flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false


flux.inline.exec-queries += "set hive.vectorized.execution.enabled=true"
flux.inline.exec-queries += "set hive.vectorized.execution.reduce.enabled=true"
flux.inline.exec-queries += "set hive.exec.parallel=true"
flux.inline.exec-queries += "SET hive.exec.dynamic.partition=true"
flux.inline.exec-queries += "SET hive.exec.dynamic.partition.mode=nonstrict"
flux.inline.exec-queries += "SET hive.enforce.bucketing=false"
flux.inline.exec-queries += "set spark.sql.parser.quotedRegexColumnNames=true"

flux.pre-exec-queries += "/PROD/SCRIPTS/IT/BDI/IT_BDI_FULL/prequery_it_bdi_kyc_full.hql"

flux.inline.exec-queries +="truncate table TMP.TT_KYC_BDI_FULL_ST1"
flux.inline.exec-queries +="truncate table TMP.TT_KYC_BDI_FULL_ST2"
flux.inline.exec-queries +="truncate table TMP.TT_KYC_BDI_FULL_ST3"
flux.inline.exec-queries +="truncate table TMP.TT_KYC_BDI_FULL_ST4"
flux.inline.exec-queries +="truncate table TMP.TT_KYC_BDI_FULL_ST5"

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY FUNCTION IF EXISTS fn_format_msisdn_to_9digits"
flux.inline.exec-queries += "CREATE TEMPORARY FUNCTION fn_format_msisdn_to_9digits as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"

flux.exec-queries += "/PROD/SCRIPTS/IT/BDI/IT_BDI_FULL/insert_into_bdi_full_step1.hql"
flux.exec-queries += "/PROD/SCRIPTS/IT/BDI/IT_BDI_FULL/insert_into_bdi_full_step2.hql"
flux.exec-queries += "/PROD/SCRIPTS/IT/BDI/IT_BDI_FULL/insert_into_bdi_full_step3.hql"
flux.exec-queries += "/PROD/SCRIPTS/IT/BDI/IT_BDI_FULL/insert_into_bdi_full_step4.hql"
flux.exec-queries += "/PROD/SCRIPTS/IT/BDI/IT_BDI_FULL/insert_into_bdi_full_step5.hql"
flux.exec-queries += "/PROD/SCRIPTS/IT/BDI/IT_BDI_FULL/insert_into_bdi_kyc_full.hql"