flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}
flux.spark.setup-conf += {"key": "spark.debug.maxToStringFields","value": "true"} 

flux.spark.setup-var += {"key": "cdr_type","value": "ZTE_SUBSCRIPTION_CDR"}
flux.spark.setup-var += {"key": "it_table_name","value": "CDR.SPARK_IT_ZTE_SUBSCRIPTION"}
flux.spark.setup-var += {"key": "it_partition_column","value": "FILE_DATE"}
flux.spark.setup-var += {"key": "flux_type","value": "PREPAID"}
flux.spark.setup-var += {"key": "check_file_regex","value": "IN_ZTE_CHECK_FILELIST_2"}

flux.name = "LOAD_SPARK_FT_DATA_USERS_LOCALISATION"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -7
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=false
flux.slice-state-query="""
select
if(count(*)=44,'OK','NOK')
from dim.dt_dates
where datecode between date_sub(current_date, 44) and date_sub(current_date, 1)
and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY where processing_date between date_sub(current_date, 44) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = false
flux.slice-filter-query = """
select
date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 44) and date_sub(current_date, 1)
and datecode in (select distinct processing_date from MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY where processing_date between date_sub(current_date, 44) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = false
flux.has-exec-queries = true
flux.has-post-queries = false

flux.inline.exec-queries += "add jar hdfs:///PROD/UDF/hive-udf-1.0.jar"
flux.inline.exec-queries += "DROP TEMPORARY  FUNCTION IF EXISTS GET_NNP_MSISDN_9DIGITS"
flux.inline.exec-queries += "create temporary function GET_NNP_MSISDN_9DIGITS as 'cm.orange.bigdata.udf.GetNnpMsisdn9Digits'"

flux.pre-exec-queries += "/PROD/SCRIPTS/FT/IN_ZTE/prequery_spark_completude.hql"

flux.inline.pre-exec-queries += """
SELECT IF(
T_1.ft_tab = 0
AND T_11.ft_tab > 0
AND T_2.ft_tab > 0
AND T_3.ft_tab > 0
AND T_4.ft_tab > 0
AND T_5.ft_tab > 0
AND T_6.ft_tab > 0
AND T_7.ft_tab > 0
, 'OK'
, 'NOK'
)
FROM
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY WHERE processing_date='###SLICE_VALUE###') T_1,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_HOME_BUSINESS_CONNECTIVTY WHERE processing_date=date_sub('###SLICE_VALUE###', 1)) T_11,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_IMEI_ONLINE WHERE sdate='###SLICE_VALUE###') T_2,
(SELECT COUNT(*) ft_tab FROM CDR.SPARK_IT_ZTE_PRICE_PLAN_EXTRACT WHERE ORIGINAL_FILE_DATE='###SLICE_VALUE###') T_3,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_OTARIE_DATA_TRAFFIC_DAY WHERE transaction_date='###SLICE_VALUE###') T_4,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_CRA_GPRS where session_date='###SLICE_VALUE###') T_5,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_CRA_GPRS_post WHERE session_date='###SLICE_VALUE###') T_6,
(SELECT COUNT(*) ft_tab FROM MON.SPARK_FT_CONTRACT_SNAPSHOT where event_date = date_add('###SLICE_VALUE###', 1)) T_7
"""


flux.inline.exec-queries += """
INSERT INTO MON.SPARK_FT_LOCALISATION_DATA_USERS
SELECT 
DISTINCT msisdn, typedezone,
CASE WHEN UPPER(TRIM(townname)) = 'YAOUNDE' THEN "a. YAOUNDE"
WHEN UPPER(TRIM(townname)) = 'DOUALA' THEN "e. DOUALA" 
WHEN UPPER(TRIM(administrative_region)) = 'EST' THEN "d. EST"
WHEN UPPER(TRIM(administrative_region)) = 'CENTRE' THEN "b. CENTRE"
WHEN UPPER(TRIM(administrative_region)) = 'SUD' THEN "c. SUD"
WHEN UPPER(TRIM(administrative_region)) = 'LITTORAL' THEN "f. LITTORAL"
WHEN UPPER(TRIM(administrative_region)) = 'SUD-OUEST' THEN "g. SUD-OUEST"
WHEN UPPER(TRIM(administrative_region)) = 'EXTREME-NORD' THEN "h. EXTREME-NORD"
WHEN UPPER(TRIM(administrative_region)) = 'NORD' THEN "i. NORD"
WHEN UPPER(TRIM(administrative_region)) = 'ADAMAOUA' THEN "j. ADAMAOUA"
WHEN UPPER(TRIM(administrative_region)) = 'OUEST' THEN "k. OUEST"
WHEN UPPER(TRIM(administrative_region)) = 'NORD-OUEST' THEN "l. NORD-OUEST"
ELSE "z. Non localise" END AS region,
CASE WHEN UPPER(TRIM(townname)) IN ('YAOUNDE', 'DOUALA') THEN "a. Dla/Yde"
WHEN UPPER(TRIM(administrative_region)) IN ('NORD','EXTREME-NORD','ADAMAOUA') THEN "b. Grand Nord"
WHEN UPPER(TRIM(administrative_region)) IN ('NORD-OUEST','SUD-OUEST') THEN "c. NOSO"
WHEN UPPER(TRIM(administrative_region)) = "" THEN "z. Non localise"
ELSE "d. Grand Marche" END AS region_v2,
CASE WHEN TRIM(typedezone) = "Semi-urbain" THEN "Semi-Urbain"
WHEN typedezone IN ('','0') AND UPPER(TRIM(administrative_region)) IS NOT NULL THEN "Urbain"
WHEN typedezone IN ('','0') AND UPPER(TRIM(administrative_region)) IS NULL THEN "Inconnu"
ELSE typedezone END AS type_zone2,
event_date
FROM 
(
SELECT 
msisdn,
A1.site_name,
A2.townname,
A2.administrative_region,
A2.commercial_region,
A2.zone_pmo zone_pmo,
A2.category_site category_site,
A2.region_business region_business,
A2.typedezone typedezone,
A1.event_date
FROM MON.SPARK_FT_CLIENT_LAST_SITE_DAY A1
LEFT JOIN
(
SELECT
UPPER(TRIM(site_name)) site_name
, MAX(townname) townname
, MAX(region) administrative_region
, MAX(commercial_region) commercial_region
, MAX(zonepmo) zone_pmo
, MAX(technosite) category_site
, MAX(typedezone) typedezone
, MAX(region_bus) region_business
FROM DIM.SPARK_DT_GSM_CELL_CODE
GROUP BY UPPER(TRIM(site_name))
) A2 
ON UPPER(A1.site_name) = A2.site_name
WHERE EVENT_DATE= "###SLICE_VALUE###" AND LENGTH(msisdn) = 9 AND A2.site_name IS NOT NULL
) A
"""
