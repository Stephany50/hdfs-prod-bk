flux.yarn.queue = "compute"
flux.log-level = "ERROR"

flux.input-type = "HIVE"
flux.output-type = "HIVE"

flux.spark.setup-conf = []

flux.setup-conf = []

flux.spark.setup-conf += {"key": "spark.sql.crossJoin.enabled", "value": "true"}
flux.spark.setup-conf += {"key": "hive.exec.dynamic.partition.mode","value": "nonstrict"}
flux.spark.setup-conf += {"key": "spark.sql.files.ignoreCorruptFiles","value": "true"}

flux.name = "LOAD_SPARK_FT_UNIVERS_DEVICE"

flux.has-date-processing = true

flux.slice-value-type = "DAILY"
flux.slice-begin-value = -7
flux.slice-end-value = -1
flux.slice-step-value = 1
flux.slice-begin-value-offset = 0
flux.slice-end-value-offset = 0
flux.slice-has-state-query=true
flux.slice-state-query="""
select  if(count(*)=7,'OK','NOK')

from dim.dt_dates
where datecode between date_sub(current_date, 7) and date_sub(current_date, 1)
    and datecode in (select distinct transaction_date from mon.spark_ft_univers_device where transaction_date between date_sub(current_date, 7) and date_sub(current_date, 1))
"""
flux.slice-has-filter-query = true
flux.slice-filter-query = """
select
    date_format(datecode,'yyyy-MM-dd')
from dim.dt_dates
where datecode between date_sub(current_date, 7) and date_sub(current_date, 1)
    and datecode in (select distinct transaction_date from mon.spark_ft_univers_device where transaction_date between date_sub(current_date, 7) and date_sub(current_date, 1))
"""
flux.slice-date-format = "yyyy-MM-dd"

flux.has-pre-queries = true
flux.has-exec-queries = true
flux.has-post-queries = false


flux.pre-exec-queries += "/PROD/SCRIPTS/FT/FT_A_CREDIT_TRANSFER_SENDER/prequery_spark_ft_a_credit_transfer_sender.hql"

flux.exec-queries += "/PROD/SCRIPTS/FT/FT_A_CREDIT_TRANSFER_SENDER/compute_and_insert_into_spark_ft_a_credit_transfer_sender.hql"
flux.inline.exec-queries += """

select
	imei,
	msisdn,
	terminal_type,
	site_name
	data,
	commercial_offer,
	activation_date,
	transaction_date 
from
(
	select 
		B.imei imei,
		A.msisdn msisdn ,
		terminal_type   ,
		lac,
		ci,
		nbytest data,
		commercial_offer,
		c.activation_date,
		transaction_date 
	from
	(
		select * 
		from MON.SPARK_FT_OTARIE_DATA_TRAFFIC_DAY 
		where transaction_date ='###SLICE_VALUE###' 
	) A 
	left join 
	(
		select 
			msisdn, 
			max(imei) imei
		from MON.SPARK_FT_IMEI_ONLINE
		where sdate = '###SLICE_VALUE###' --and trim(IMEI) rlike '^\\d{7,16}$'
		group by msisdn
	) B 
	on A.msisdn = B.msisdn
	LEFT JOIN
	(
		SELECT 
			ACCESS_KEY AS MSISDN, 
			activation_date
		FROM MON.SPARK_FT_CONTRACT_SNAPSHOT
		WHERE EVENT_DATE = '###SLICE_VALUE###'
	) c
	ON a.MSISDN = c.MSISDN
	left join
	(
		select
			msisdn,
			lac,
			ci
		from
		(
			select
				msisdn,
				lac,
				ci,
				row_number() over(partition by msisdn, lac, ci order by data desc) rang
			from
			(
				select
					served_party_msisdn msisdn,
					location_lac lac,
					location_ci ci,
					sum(bytes_sent)+sum(bytes_received) data
				from mon.spark_ft_cra_gprs
				where session_date = '###SLICE_VALUE###' 
				group by served_party_msisdn, location_lac, location_ci
			) t
		) u
		where rang <= 1
	) d
	on a.MSISDN = d.MSISDN
) e 
left join 
(
	select 
		lac, 
		ci, 
		max(site_name) site_name 
	from dim.spark_dt_gsm_cell_code
	group by 
        lac, 
        ci
) f
on lpad(e.lac, 5, 0)=lpad(f.lac, 5, 0) and lpad(e.ci, 5, 0)=lpad(f.ci, 5, 0)
"""