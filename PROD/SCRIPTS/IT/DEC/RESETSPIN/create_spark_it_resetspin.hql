
DROP TABLE TT.RESETSPIN;
-- TT.RESETSPIN
CREATE EXTERNAL TABLE TT.RESETSPIN (
ORIGINAL_FILE_NAME VARCHAR(200),
ORIGINAL_FILE_SIZE INT,
ORIGINAL_FILE_LINE_COUNT INT,   
ID VARCHAR(200),   
MSISDN VARCHAR(200),   
BALANCE VARCHAR(200), 
CHECK_B2W VARCHAR(200), 
CHECK_IDENTIFICATION VARCHAR(200), 
CHECK_CHANSIM VARCHAR(200), 
STATUS VARCHAR(800), 
CHANGE_PIN_TXN_ID VARCHAR(200), 
CHANGE_PIN_TXN_STATUS VARCHAR(200), 
UNBAR_TXN_ID VARCHAR(200), 
UNBAR_TXN_STATUS VARCHAR(200), 
MESSAGE VARCHAR(1000),
CREATED_AT VARCHAR(200),
RESET_PIN_AT VARCHAR(200),
CHANGE_PIN_AT VARCHAR(200),
RESET_PIN_TXN_ID VARCHAR(200),
RESET_PIN_TXN_STATUS VARCHAR(200)
)
COMMENT 'external tables-TT'
ROW FORMAT DELIMITED FIELDS TERMINATED BY ';'
LOCATION '/PROD/TT/RESETSPIN'
TBLPROPERTIES ('serialization.null.format'='');



-- CDR.SPARK_IT_RESETSPIN
CREATE TABLE CDR.SPARK_IT_RESETSPIN_NEW (
ID VARCHAR(200),   
MSISDN VARCHAR(200),   
BALANCE DECIMAL(19, 5), 
CHECK_B2W VARCHAR(200), 
CHECK_IDENTIFICATION VARCHAR(200), 
CHECK_CHANSIM VARCHAR(200), 
STATUS VARCHAR(800), 
CHANGE_PIN_TXN_ID VARCHAR(200), 
CHANGE_PIN_TXN_STATUS VARCHAR(200), 
UNBAR_TXN_ID VARCHAR(200), 
UNBAR_TXN_STATUS VARCHAR(200), 
MESSAGE VARCHAR(1000),
CREATED_AT TIMESTAMP,
RESET_PIN_AT TIMESTAMP,
CHANGE_PIN_AT TIMESTAMP,
RESET_PIN_TXN_ID VARCHAR(200),
RESET_PIN_TXN_STATUS VARCHAR(200),
ORIGINAL_FILE_NAME VARCHAR(200),
ORIGINAL_FILE_SIZE INT,
ORIGINAL_FILE_LINE_COUNT INT,
INSERTED_DATE TIMESTAMP,
ORIGINAL_FILE_DATE DATE
)COMMENT 'CDR_SPARK_IT_RESETSPIN'
PARTITIONED BY (DATE_CHANGE_PIN_AT DATE,FILE_DATE DATE)
STORED AS PARQUET TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
