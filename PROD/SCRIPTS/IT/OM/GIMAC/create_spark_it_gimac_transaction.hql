CREATE EXTERNAL TABLE CDR.SPARK_TT_GIMAC_TRANSACTION (
    ORIGINAL_FILE_NAME VARCHAR(200),
    ORIGINAL_FILE_SIZE INT,
    ORIGINAL_FILE_LINE_COUNT INT,
    T_ID VARCHAR(250),
    T_CODE VARCHAR(250),
    T_NAME VARCHAR(250),
    T_INTENT VARCHAR(250),
    T_WALLET_SOURCE VARCHAR(250),
    T_WALLET_DESTINATION VARCHAR(250),
    T_DESCRIPTION VARCHAR(250),
    T_AMOUNT VARCHAR(250),
    T_CURRENCY VARCHAR(250),
    T_ISSUER_TRX_REF VARCHAR(250),
    T_ACQUIRER_TRX_REF VARCHAR(250),
    T_TO_MEMBER VARCHAR(250),
    T_FROM_MEMBER VARCHAR(250),
    T_VOUCHER_CODE VARCHAR(250),
    T_STATE VARCHAR(250),
    T_CREATED_AT VARCHAR(250),
    T_TYPE VARCHAR(250),
    T_VALIDITY_DURATION VARCHAR(250),
    T_EXPIRY_TIME VARCHAR(250),
    T_UPDATE_TIME VARCHAR(250),
    T_CREATE_TIME VARCHAR(250),
    T_TXNSTATUS VARCHAR(250),
    T_BANK VARCHAR(250),
    T_ATM VARCHAR(250),
    T_TXNID VARCHAR(250),
    T_ACCOUNT_NUMBER VARCHAR(250),
    T_CANAL VARCHAR(250),
    T_SYNC_MODE VARCHAR(250),
    T_NB_PAYMENT_ATTEMPTS VARCHAR(250),
    T_FROM_MNO_ID VARCHAR(250),
    T_TO_MNO_ID VARCHAR(250),
    T_TO_BANK_ID VARCHAR(250)
)
COMMENT 'external tables-TT'
ROW FORMAT DELIMITED FIELDS TERMINATED BY ';'
LOCATION '/PROD/TT/GIMAC'
TBLPROPERTIES ('serialization.null.format'='')
;


CREATE TABLE CDR.SPARK_IT_GIMAC_TRANSACTION
(
    T_ID VARCHAR(250),
    T_CODE VARCHAR(250),
    T_NAME VARCHAR(250),
    T_INTENT VARCHAR(250),
    T_WALLET_SOURCE VARCHAR(250),
    T_WALLET_DESTINATION VARCHAR(250),
    T_DESCRIPTION VARCHAR(250),
    T_AMOUNT VARCHAR(250),
    T_CURRENCY VARCHAR(250),
    T_ISSUER_TRX_REF VARCHAR(250),
    T_ACQUIRER_TRX_REF VARCHAR(250),
    T_TO_MEMBER VARCHAR(250),
    T_FROM_MEMBER VARCHAR(250),
    T_VOUCHER_CODE VARCHAR(250),
    T_STATE VARCHAR(250),
    T_CREATED_AT TIMESTAMP,
    T_TYPE VARCHAR(250),
    T_VALIDITY_DURATION VARCHAR(250),
    T_EXPIRY_TIME VARCHAR(250),
    T_UPDATE_TIME VARCHAR(250),
    T_CREATE_TIME VARCHAR(250),
    T_TXNSTATUS VARCHAR(250),
    T_BANK VARCHAR(250),
    T_ATM VARCHAR(250),
    T_TXNID VARCHAR(250),
    T_ACCOUNT_NUMBER VARCHAR(250),
    T_CANAL VARCHAR(250),
    T_SYNC_MODE VARCHAR(250),
    T_NB_PAYMENT_ATTEMPTS VARCHAR(250),
    T_FROM_MNO_ID VARCHAR(250),
    T_TO_MNO_ID VARCHAR(250),
    T_TO_BANK_ID VARCHAR(250),
    ORIGINAL_FILE_NAME  VARCHAR(50),
    ORIGINAL_FILE_SIZE  INT,
    ORIGINAL_FILE_LINE_COUNT INT,
    INSERT_DATE TIMESTAMP
   )
  PARTITIONED BY (ORIGINAL_FILE_DATE DATE)
  STORED AS PARQUET
  TBLPROPERTIES ("parquet.compress"="SNAPPY");

    --Staging table in DWH
CREATE TABLE MON.SQ_IT_GIMAC_TRANSACTION (
    T_ID VARCHAR(250),
    T_CODE VARCHAR(250),
    T_NAME VARCHAR(250),
    T_INTENT VARCHAR(250),
    T_WALLET_SOURCE VARCHAR(250),
    T_WALLET_DESTINATION VARCHAR(250),
    T_DESCRIPTION VARCHAR(250),
    T_AMOUNT VARCHAR(250),
    T_CURRENCY VARCHAR(250),
    T_ISSUER_TRX_REF VARCHAR(250),
    T_ACQUIRER_TRX_REF VARCHAR(250),
    T_TO_MEMBER VARCHAR(250),
    T_FROM_MEMBER VARCHAR(250),
    T_VOUCHER_CODE VARCHAR(250),
    T_STATE VARCHAR(250),
    T_CREATED_AT DATE,
    T_TYPE VARCHAR(250),
    T_VALIDITY_DURATION VARCHAR(250),
    T_EXPIRY_TIME VARCHAR(250),
    T_UPDATE_TIME VARCHAR(250),
    T_CREATE_TIME VARCHAR(250),
    T_TXNSTATUS VARCHAR(250),
    T_BANK VARCHAR(250),
    T_ATM VARCHAR(250),
    T_TXNID VARCHAR(250),
    T_ACCOUNT_NUMBER VARCHAR(250),
    T_CANAL VARCHAR(250),
    T_SYNC_MODE VARCHAR(250),
    T_NB_PAYMENT_ATTEMPTS VARCHAR(250),
    T_FROM_MNO_ID VARCHAR(250),
    T_TO_MNO_ID VARCHAR(250),
    T_TO_BANK_ID VARCHAR(250),
    EVENT_DATE DATE
);





---Staging table in data lake
CREATE TABLE TMP.SQ_IT_GIMAC_TRANSACTION (
    T_ID VARCHAR(250),
    T_CODE VARCHAR(250),
    T_NAME VARCHAR(250),
    T_INTENT VARCHAR(250),
    T_WALLET_SOURCE VARCHAR(250),
    T_WALLET_DESTINATION VARCHAR(250),
    T_DESCRIPTION VARCHAR(250),
    T_AMOUNT VARCHAR(250),
    T_CURRENCY VARCHAR(250),
    T_ISSUER_TRX_REF VARCHAR(250),
    T_ACQUIRER_TRX_REF VARCHAR(250),
    T_TO_MEMBER VARCHAR(250),
    T_FROM_MEMBER VARCHAR(250),
    T_VOUCHER_CODE VARCHAR(250),
    T_STATE VARCHAR(250),
    T_CREATED_AT TIMESTAMP,
    T_TYPE VARCHAR(250),
    T_VALIDITY_DURATION VARCHAR(250),
    T_EXPIRY_TIME VARCHAR(250),
    T_UPDATE_TIME VARCHAR(250),
    T_CREATE_TIME VARCHAR(250),
    T_TXNSTATUS VARCHAR(250),
    T_BANK VARCHAR(250),
    T_ATM VARCHAR(250),
    T_TXNID VARCHAR(250),
    T_ACCOUNT_NUMBER VARCHAR(250),
    T_CANAL VARCHAR(250),
    T_SYNC_MODE VARCHAR(250),
    T_NB_PAYMENT_ATTEMPTS VARCHAR(250),
    T_FROM_MNO_ID VARCHAR(250),
    T_TO_MNO_ID VARCHAR(250),
    T_TO_BANK_ID VARCHAR(250),
    EVENT_DATE DATE
);


DECLARE 
  SAMPLE_TABLE VARCHAR2(200); MIN_DATE_PARTITION VARCHAR2(200); MAX_DATE_PARTITION VARCHAR2(200);  KEY_COLUMN_PART_NAME VARCHAR2(200);
  KEY_COLUMN_PART_TYPE VARCHAR2(200);   PART_OWNER VARCHAR2(200);  PART_TABLE_NAME VARCHAR2(200);  PART_PARTITION_NAME VARCHAR2(200);
  PART_TYPE_PERIODE VARCHAR2(200);  PART_RETENTION NUMBER;  PART_TBS_CIBLE VARCHAR2(200);  PART_GARDER_01_DU_MOIS VARCHAR2(200);
PART_PCT_FREE NUMBER;   PART_COMPRESSION VARCHAR2(200);  PART_ROTATION_ACTIVE VARCHAR2(200);  PART_FORMAT VARCHAR2(200);
BEGIN 
  SAMPLE_TABLE := 'MON.SQ_IT_GIMAC_TRANSACTION';
  MIN_DATE_PARTITION := '20230101';
  MAX_DATE_PARTITION := '20260101';
  KEY_COLUMN_PART_NAME := 'EVENT_DATE';
  KEY_COLUMN_PART_TYPE := 'JOUR';
  PART_OWNER := 'MON';
  PART_TABLE_NAME := 'IT_GIMAC_TRANSACTION';
  PART_PARTITION_NAME := 'IT_GIMAC_TRANSACTION_';
  PART_TYPE_PERIODE := 'JOUR';
  PART_RETENTION := 1000;
  PART_TBS_CIBLE :=  'TAB_P_MON_J25_256M';
  PART_GARDER_01_DU_MOIS := 'NON';
  PART_PCT_FREE := 0;
  PART_COMPRESSION := 'COMPRESS';
  PART_ROTATION_ACTIVE := 'OUI';
  PART_FORMAT := 'yyyymmdd';
  MON.CREATE_PARTITIONED_TABLE ( SAMPLE_TABLE, MIN_DATE_PARTITION, MAX_DATE_PARTITION, KEY_COLUMN_PART_NAME, KEY_COLUMN_PART_TYPE, PART_OWNER, PART_TABLE_NAME, PART_PARTITION_NAME, PART_TYPE_PERIODE, PART_RETENTION, PART_TBS_CIBLE, PART_GARDER_01_DU_MOIS, PART_PCT_FREE, PART_COMPRESSION, PART_ROTATION_ACTIVE, PART_FORMAT );
  COMMIT; 
END;
