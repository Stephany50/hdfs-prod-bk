INSERT INTO DIM.SPARK_STK_HIERACHY
SELECT
    C.MSISDN MSISDN,
    C.CATEGORY_CODE CATEGORY_CODE,
    C.CATEGORY_NAME CATEGORY_NAME,
    C.GEOGRAPHICAL_DOMAIN_CODE GEOGRAPHICAL_DOMAIN_CODE,
    C.GEOGRAPHICAL_DOMAIN_NAME GEOGRAPHICAL_DOMAIN_NAME,
    C.CHANNEL_USER_NAME CHANNEL_USER_NAME,
    C.PARENT PARENT,
    C.GRDPARENT GRDPARENT,
    C.ACTIV_BEGIN_DATE ACTIV_BEGIN_DATE,
    NULL ACTIV_END_DATE,
    C.STATUS STATUE,
    C.LAST_UPDATE LAST_UPDATE,
    C.TMP_STATUS TMP_STATUS,
    C.LAST_EVENT_DATE LAST_EVENT_DATE,
    NULL PARTNER_NAME,
    C.TDW TDW,
    C.TDW_COCI TDW_COCI,
    C.COMMENTAIRE COMMENTAIRE,
    NULL ACTIV_END_TMP
FROM
(
    SELECT
        A.MSISDN MSISDN,
        A.CATEGORY_CODE CATEGORY_CODE,
        A.CATEGORY_NAME CATEGORY_NAME,
        A.GEOGRAPHICAL_DOMAIN_CODE GEOGRAPHICAL_DOMAIN_CODE,
        A.GEOGRAPHICAL_DOMAIN_NAME GEOGRAPHICAL_DOMAIN_NAME,
        A.CHANNEL_USER_NAME CHANNEL_USER_NAME,
        A.PARENT PARENT,
        A.GRDPARENT GRDPARENT,
        A.ACTIV_BEGIN_DATE ACTIV_BEGIN_DATE,
        A.ACTIV_END_DATE ACTIV_END_DATE,
        A.STATUS STATUS,
        A.LAST_UPDATE LAST_UPDATE,
        A.TMP_STATUS TMP_STATUS,
        A.LAST_EVENT_DATE LAST_EVENT_DATE,
        (
            CASE
            WHEN A.ACTIV_BEGIN_DATE < NVL( B.ACTIV_END_DATE, CURRENT_DATE()) THEN B.PARTNER_NAME
            ELSE  A.PARTNER_NAME
            END
        )  PARTNER_NAME,
        A.TDW TDW,
        A.TDW_COCI TDW_COCI,
        A.COMMENTAIRE COMMENTAIRE,
        (
            CASE
            WHEN A.ACTIV_BEGIN_DATE < NVL( B.ACTIV_END_DATE, CURRENT_DATE()) THEN NVL(A.ACTIV_END_DATE, B.ACTIV_END_DATE)
            ELSE  A.ACTIV_END_TMP
            END
        ) ACTIV_END_TMP
    FROM TMP.TT_DIM_STK_HIERACHY A
    LEFT JOIN
    (
        SELECT
            MSISDN,
            CATEGORY_CODE,
            PARENT,
            GRDPARENT,
            PARTNER_NAME,
            ACTIV_BEGIN_DATE,
            ACTIV_END_DATE
        FROM TMP.TT_DIM_STK_HIERACHY
        WHERE CATEGORY_CODE = 'ORNGPTNR'
        AND NVL(STATUS, 'OK') = 'OK'
    ) B
    ON A.GRDPARENT = B.MSISDN
       AND A.ACTIV_BEGIN_DATE >= B.ACTIV_BEGIN_DATE
) C
WHERE C.ACTIV_END_TMP IS NOT NULL
    AND NVL(C.ACTIV_END_DATE, CURRENT_DATE()) <> NVL(C.ACTIV_END_TMP, CURRENT_DATE())

UNION ALL

SELECT
    C.MSISDN MSISDN,
    C.CATEGORY_CODE CATEGORY_CODE,
    C.CATEGORY_NAME CATEGORY_NAME,
    C.GEOGRAPHICAL_DOMAIN_CODE GEOGRAPHICAL_DOMAIN_CODE,
    C.GEOGRAPHICAL_DOMAIN_NAME GEOGRAPHICAL_DOMAIN_NAME,
    C.CHANNEL_USER_NAME CHANNEL_USER_NAME,
    C.PARENT PARENT,
    C.GRDPARENT GRDPARENT,
    C.ACTIV_BEGIN_DATE ACTIV_BEGIN_DATE,
    (
        CASE
        WHEN NVL(ACTIV_END_TMP, CURRENT_DATE()) <> NVL(ACTIV_END_DATE, CURRENT_DATE()) THEN C.ACTIV_END_TMP
        ELSE  C.ACTIV_END_DATE
        END
    ) ACTIV_END_DATE,
    (
        CASE
        WHEN NVL(ACTIV_END_TMP, CURRENT_DATE()) <> NVL(ACTIV_END_DATE, CURRENT_DATE()) THEN 'Clos'
        ELSE  C.STATUS
        END
    ) STATUS,
    C.LAST_UPDATE LAST_UPDATE,
    C.TMP_STATUS TMP_STATUS,
    C.LAST_EVENT_DATE LAST_EVENT_DATE,
    C.PARTNER_NAME PARTNER_NAME,
    C.TDW TDW,
    C.TDW_COCI TDW_COCI,
    C.COMMENTAIRE COMMENTAIRE,
    C.ACTIV_END_TMP ACTIV_END_TMP
FROM
(
    SELECT
        A.MSISDN MSISDN,
        A.CATEGORY_CODE CATEGORY_CODE,
        A.CATEGORY_NAME CATEGORY_NAME,
        A.GEOGRAPHICAL_DOMAIN_CODE GEOGRAPHICAL_DOMAIN_CODE,
        A.GEOGRAPHICAL_DOMAIN_NAME GEOGRAPHICAL_DOMAIN_NAME,
        A.CHANNEL_USER_NAME CHANNEL_USER_NAME,
        A.PARENT PARENT,
        A.GRDPARENT GRDPARENT,
        A.ACTIV_BEGIN_DATE ACTIV_BEGIN_DATE,
        A.ACTIV_END_DATE ACTIV_END_DATE,
        A.STATUS STATUS,
        A.LAST_UPDATE LAST_UPDATE,
        A.TMP_STATUS TMP_STATUS,
        A.LAST_EVENT_DATE LAST_EVENT_DATE,
        (
            CASE
            WHEN A.ACTIV_BEGIN_DATE < NVL( B.ACTIV_END_DATE, CURRENT_DATE()) THEN B.PARTNER_NAME
            ELSE  A.PARTNER_NAME
            END
        )  PARTNER_NAME,
        A.TDW TDW,
        A.TDW_COCI TDW_COCI,
        A.COMMENTAIRE COMMENTAIRE,
        (
            CASE
            WHEN A.ACTIV_BEGIN_DATE < NVL( B.ACTIV_END_DATE, CURRENT_DATE()) THEN NVL(A.ACTIV_END_DATE, B.ACTIV_END_DATE)
            ELSE  A.ACTIV_END_TMP
            END
        ) ACTIV_END_TMP
    FROM TMP.TT_DIM_STK_HIERACHY A
    LEFT JOIN
    (
        SELECT
            MSISDN,
            CATEGORY_CODE,
            PARENT,
            GRDPARENT,
            PARTNER_NAME,
            ACTIV_BEGIN_DATE,
            ACTIV_END_DATE
        FROM TMP.TT_DIM_STK_HIERACHY
        WHERE CATEGORY_CODE = 'ORNGPTNR'
        AND NVL(STATUS, 'OK') = 'OK'
    ) B
    ON A.GRDPARENT = B.MSISDN
       AND A.ACTIV_BEGIN_DATE >= B.ACTIV_BEGIN_DATE
) C
WHERE ACTIV_END_TMP IS NOT NULL