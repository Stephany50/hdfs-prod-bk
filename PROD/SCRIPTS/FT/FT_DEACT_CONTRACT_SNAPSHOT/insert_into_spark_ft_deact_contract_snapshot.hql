INSERT INTO MON.SPARK_FT_DEACT_CONTRACT_SNAPSHOT
SELECT
a.DEACTIVATION_DATE, a.EVENT_DATE, CONTRACT_ID, CUSTOMER_ID, a.ACCESS_KEY, ACCOUNT_ID, ACTIVATION_DATE
, INACTIVITY_BEGIN_DATE, BLOCKED, EXHAUSTED, PERIODIC_FEE, SCRATCH_RELOAD_SUSP, COMMERCIAL_OFFER_ASSIGN_DATE
, COMMERCIAL_OFFER, CURRENT_STATUS, STATUS_DATE, LOGIN, LANG, LOCATION, MAIN_IMSI, MSID_TYPE, PROFILE
, BAD_RELOAD_ATTEMPTS, LAST_TOPUP_DATE, LAST_CREDIT_UPDATE_DATE, BAD_PIN_ATTEMPTS, BAD_PWD_ATTEMPTS, OSP_ACCOUNT_TYPE
, INACTIVITY_CREDIT_LOSS, DEALER_ID, PROVISIONING_DATE, MAIN_CREDIT, PROMO_CREDIT, SMS_CREDIT, DATA_CREDIT
, USED_CREDIT_MONTH, USED_CREDIT_LIFE, BUNDLE_LIST, BUNDLE_UNIT_LIST, PROMO_AND_DISCOUNT_LIST, INSERT_DATE, SRC_TABLE
, OSP_STATUS, BSCS_COMM_OFFER_ID, BSCS_COMM_OFFER, INITIAL_SELECTION_DONE, NOMORE_CREDIT, PWD_BLOCKED, FIRST_EVENT_DONE
, CUST_EXT_ID, CUST_GROUP, CUST_CATEGORY, CUST_BILLCYCLE, CUST_SEGMENT
FROM (select * from MON.SPARK_FT_CONTRACT_SNAPSHOT WHERE EVENT_DATE = '###SLICE_VALUE###') a
-- filtrer sur les msisdn non present sur une plage d'un mois
INNER JOIN  (
SELECT ACCESS_KEY, DEACTIVATION_DATE FROM MON.SPARK_FT_CONTRACT_SNAPSHOT WHERE EVENT_DATE = '###SLICE_VALUE###' AND DEACTIVATION_DATE BETWEEN  DATE_SUB('###SLICE_VALUE###',120) AND DATE_ADD('###SLICE_VALUE###',1)
AND
CASE NVL(OSP_STATUS, CURRENT_STATUS)
WHEN 'ACTIVE' THEN 'ACTIVE'
WHEN  'a' THEN  'ACTIF'
WHEN 'd' THEN 'DEACT'
WHEN 's' THEN 'INACT'
WHEN 'DEACTIVATED' THEN 'DEACT'
WHEN 'INACTIVE' THEN 'INACT'
WHEN 'VALID' THEN 'VALIDE' ELSE  NVL(OSP_STATUS, CURRENT_STATUS) END = 'DEACT'
MINUS
SELECT ACCESS_KEY, DEACTIVATION_DATE FROM MON.SPARK_FT_DEACT_CONTRACT_SNAPSHOT
WHERE
-- verification sur une plage de 4 mois
DEACTIVATION_DATE BETWEEN DATE_SUB('###SLICE_VALUE###',120) AND DATE_ADD('###SLICE_VALUE###',1)
) b
ON (a.ACCESS_KEY = b.ACCESS_KEY AND a.DEACTIVATION_DATE = b.DEACTIVATION_DATE)