
--Gross Adss:
UNION ALL
SELECT  DATECODE, 'RA_GROSS_ADDS', 'FT_A_SUBSCRIBER_SUMMARY', sum(TOTAL_ACTIVATION) GROSS_ADDS, SYSDATE
from   AGG.SPARK_FT_A_SUBSCRIBER_SUMMARY
WHERE DATECODE IN ( SELECT datecode
FROM (SELECT DISTINCT datecode FROM DIM.DT_DATES
         WHERE datecode BETWEEN TRUNC(SYSDATE-dashboard_kpi_day_from) AND TRUNC(SYSDATE- dashboard_kpi_day_bef))
       MINUS
  SELECT DISTINCT TRANSACTION_DATE FROM FT_BUSINESS_ACTIVITY
        WHERE USAGE_CODE='RA_GROSS_ADDS'
        AND TRANSACTION_DATE BETWEEN trunc(sysdate-dashboard_kpi_day_from) and trunc(sysdate-dashboard_kpi_day_bef))
and ACCOUNT_STATUS = 'ACTIF'
group by datecode;

COMMIT;


-- Reconnexions
UNION ALL
SELECT a.EVENT_DATE
  ,'RA_RECON' USAGE_CODE
  , 'FT_ACCOUNT_ACTIVITY' SOURCE_TABLE
 , COUNT(a.MSISDN) RECONNEXION
 , SYSDATE INSERT_DATE
FROM
    (SELECT *
    FROM MON.SPARK_FT_ACCOUNT_ACTIVITY
    WHERE EVENT_DATE =''
          AND GP_STATUS = 'ACTIF'
     ) a
JOIN
    (SELECT *
    FROM FT_ACCOUNT_ACTIVITY
    WHERE EVENT_DATE =''
          AND GP_STATUS = 'INACT') b
ON a.MSISDN = b.MSISDN
GROUP BY a.EVENT_DATE;

COMMIT;


-- CHURN
UNION ALL
select a.EVENT_DATE
    ,'RA_CHURN' USAGE_CODE
    ,'FT_ACCOUNT_ACTIVITY' SOURCE_TABLE
    ,count(a.msisdn) churn
    ,SYSDATE INSERT_DATE
from
(SELECT *
    FROM SPARK_FT_ACCOUNT_ACTIVITY
    WHERE EVENT_DATE =''
          AND GP_STATUS = 'INACT'
     ) a
JOIN
    (SELECT *
    FROM SPARK_FT_ACCOUNT_ACTIVITY
    WHERE EVENT_DATE =''
          AND GP_STATUS = 'ACTIF') b
ON a.MSISDN = b.MSISDN
GROUP BY a.EVENT_DATE;

COMMIT;


-- decconexion 30 jours


-- Daily active 1jour
UNION ALL
SELECT EVENT_DATE,'RA_DAILY_ACT_1' USAGE_CODE, 'FT_GROUP_USER_BASE' SOURCE_TABLE, SUM(DAILYBASE) DAILY_ACTIVE_DAY, SYSDATE INSERT_DATE
FROM
FT_GROUP_USER_BASE
WHERE EVENT_DATE =''
GROUP BY EVENT_DATE;

COMMIT;


-- Daily Active 30 jours
UNION ALL
SELECT EVENT_DATE,'RA_DAILY_ACT_30' USAGE_CODE, 'FT_GROUP_USER_BASE' SOURCE_TABLE, SUM(ALL30DAYSBASE) DAILY_ACTIVE_30DAYS, SYSDATE INSERT_DATE
FROM
FT_GROUP_USER_BASE
WHERE EVENT_DATE =''
GROUP BY EVENT_DATE;

COMMIT;


-- Parc Groupe
UNION ALL
SELECT event_date -1 event_date,  'RA_PARC_GP' Usage_code, 'FT_GROUP_SUBSCRIBER_SUMMARY', effectif, sysdate
FROM
(
    select event_date
        , sum(effectif) Effectif
    from  FT_GROUP_SUBSCRIBER_SUMMARY
    ,   VW_DT_OFFER_PROFILES
    where profile = profile_code
    and profile_name not in ('EMPLOYE POSTPAID', 'EMPLOYE PREPAID', 'SET MINUTE', 'SET SECONDE', 'SET TRANSFERT')
    and event_date =''
    group by event_date
);

COMMIT;


-- Parc ART
UNION ALL
SELECT DATECODE, 'RA_PARC_ART', 'FT_COMMERCIAL_SUBSCRIB_SUMMARY',  SUM(TOTAL_COUNT), SYSDATE
FROM FT_COMMERCIAL_SUBSCRIB_SUMMARY
WHERE DATECODE =''
AND ACCOUNT_STATUS = 'ACTIF'
AND PROFILE_NAME NOT IN ('EMPLOYE POSTPAID', 'EMPLOYE PREPAID')
GROUP BY DATECODE;

COMMIT;


-- ACTIVE RATE DAILY
UNION ALL
select transaction_date, 'RA_ACT_RATE_DAILY', 'FT_BUSINESS_ACTIVITY', sum(ACTIV_DAILY_1) / max(PARC_GROUP)  ACTIV_RATE_DAILY, sysdate
from(
select transaction_date
     , ( case when usage_code = 'RA_PARC_GP' then KPI else 0 end ) PARC_GROUP
    , ( case when usage_code = 'RA_DAILY_ACT_1' then KPI else 0 end ) ACTIV_DAILY_1
from FT_BUSINESS_ACTIVITY
where  transaction_date =''
and usage_code in ('RA_PARC_GP', 'RA_DAILY_ACT_1')
)
group by  transaction_date;


commit;


-- ACTIVE RATE 30DAYS
UNION ALL
select transaction_date, 'RA_ACT_RATE_30', 'FT_BUSINESS_ACTIVITY', sum(ACTIV_DAILY_30) / max(PARC_GROUP)  ACTIV_RATE_DAILY, sysdate
from(
select transaction_date
     , ( case when usage_code = 'RA_PARC_GP' then KPI else 0 end ) PARC_GROUP
    , ( case when usage_code = 'RA_DAILY_ACT_30' then KPI else 0 end ) ACTIV_DAILY_30
from FT_BUSINESS_ACTIVITY
where  transaction_date =''
and usage_code in ('RA_PARC_GP', 'RA_DAILY_ACT_30')
)
group by  transaction_date;

commit;


-- Recharge C2S
UNION ALL
SELECT
    REFILL_DATE TRANSACTION_DATE,
    'RA_REFILL_C2S' USAGE_CODE,
    'FT_REFILL' SOURCE_TABLE,
    SUM(REFILL_AMOUNT)  KPI,
    SYSDATE INSERT_DATE
FROM MON.SPARK_FT_REFILL
WHERE REFILL_DATE =''
AND REFILL_MEAN = 'C2S'
AND SENDER_MSISDN <> '695200088' -- Exclu OM
AND TERMINATION_IND = '200'
GROUP BY REFILL_DATE;

COMMIT;


-- Recharge P2P
UNION ALL
SELECT
    REFILL_DATE TRANSACTION_DATE,
    'RA_REFILL_P2P' USAGE_CODE,
    'FT_CREDIT_TRANSFER' SOURCE_TABLE,
    SUM(TRANSFER_AMT + TRANSFER_FEES)  KPI,
    SYSDATE INSERT_DATE
FROM FT_CREDIT_TRANSFER
WHERE REFILL_DATE =''
AND TRANSFER_MEAN = 'P2P'
AND TERMINATION_IND = '000'
GROUP BY REFILL_DATE;

COMMIT;


-- Recharge OM
UNION ALL
SELECT
    REFILL_DATE TRANSACTION_DATE,
    'RA_REFILL_OM' USAGE_CODE,
    'FT_REFILL' SOURCE_TABLE,
    SUM(REFILL_AMOUNT)  KPI,
    SYSDATE INSERT_DATE
FROM MON.SPARK_FT_REFILL
WHERE REFILL_DATE =''
AND REFILL_MEAN = 'C2S'
AND SENDER_MSISDN = '695200088' -- OM Uniquement
AND TERMINATION_IND = '200'
GROUP BY REFILL_DATE;

COMMIT;

-- Total Recharge
UNION ALL
select transaction_date, 'RA_REFILL_TOTAL', 'FT_BUSINESS_ACTIVITY', sum(REFILL_C2S+REFILL_P2P+REFILL_OM) TOTAL_REFILL, sysdate
from(
select transaction_date
     , ( case when usage_code = 'RA_REFILL_C2S' then KPI else 0 end ) REFILL_C2S
    , ( case when usage_code = 'RA_REFILL_P2P' then KPI else 0 end ) REFILL_P2P
    , ( case when usage_code = 'RA_REFILL_OM' then KPI else 0 end ) REFILL_OM
from FT_BUSINESS_ACTIVITY
where  transaction_date IN (
    SELECT datecode
    FROM ((SELECT DISTINCT datecode FROM DIM.DT_DATES
             WHERE datecode BETWEEN TRUNC(SYSDATE-dashboard_kpi_day_from) AND TRUNC(SYSDATE- dashboard_kpi_day_bef))
           MINUS
      SELECT DISTINCT TRANSACTION_DATE FROM FT_BUSINESS_ACTIVITY
            WHERE USAGE_CODE='RA_REFILL_TOTAL'
            AND TRANSACTION_DATE BETWEEN trunc(sysdate-dashboard_kpi_day_from) and trunc(sysdate-dashboard_kpi_day_bef))
    INTERSECT
    ( SELECT TRANSACTION_DATE FROM FT_BUSINESS_ACTIVITY
            WHERE USAGE_CODE in ( 'RA_REFILL_C2S', 'RA_REFILL_P2P','RA_REFILL_OM')
            AND TRANSACTION_DATE BETWEEN trunc(sysdate-dashboard_kpi_day_from) and trunc(sysdate-dashboard_kpi_day_bef)
                        GROUP BY TRANSACTION_DATE
            HAVING COUNT(*) = 3)
    )
and usage_code in ( 'RA_REFILL_C2S', 'RA_REFILL_P2P','RA_REFILL_OM')
)
group by  transaction_date;

commit;



-- MA total balance
UNION ALL
SELECT
    DATECODE TRANSACTION_DATE,
    'RA_MA_TOTAL_BAL' USAGE_CODE,
    'FT_A_SUBSCRIBER_SUMMARY' SOURCE_TABLE,
    SUM(TOTAL_MAIN_CREDIT)  KPI,
    SYSDATE INSERT_DATE
FROM FT_A_SUBSCRIBER_SUMMARY
WHERE DATECODE IN ( SELECT DATECODE
FROM (SELECT DISTINCT DATECODE FROM DIM.DT_DATES
         WHERE DATECODE BETWEEN TRUNC(SYSDATE-dashboard_kpi_day_from) AND TRUNC(SYSDATE-dashboard_kpi_day_bef))
       MINUS
  SELECT DISTINCT TRANSACTION_DATE FROM FT_BUSINESS_ACTIVITY
        WHERE USAGE_CODE='RA_MA_TOTAL_BAL'
        AND TRANSACTION_DATE BETWEEN TRUNC(SYSDATE-dashboard_kpi_day_from) AND TRUNC(SYSDATE-dashboard_kpi_day_bef))
GROUP BY DATECODE;

COMMIT;

-- POS actif 1jr
UNION ALL
SELECT
    REFILL_DATE TRANSACTION_DATE,
    'RA_POS_ACT_1' USAGE_CODE,
    'FT_REFILL' SOURCE_TABLE,
    COUNT(DISTINCT SENDER_MSISDN)  KPI,
    SYSDATE INSERT_DATE
FROM MON.SPARK_FT_REFILL
WHERE REFILL_DATE IN ( SELECT DATECODE
FROM (SELECT DISTINCT DATECODE FROM DIM.DT_DATES
         WHERE DATECODE BETWEEN TRUNC(SYSDATE-dashboard_kpi_day_from) AND TRUNC(SYSDATE-dashboard_kpi_day_bef))
       MINUS
  SELECT DISTINCT TRANSACTION_DATE FROM FT_BUSINESS_ACTIVITY
        WHERE USAGE_CODE='RA_POS_ACT_1'
        AND TRANSACTION_DATE BETWEEN TRUNC(SYSDATE-dashboard_kpi_day_from) AND TRUNC(SYSDATE-dashboard_kpi_day_bef))
AND REFILL_MEAN = 'C2S'
AND TERMINATION_IND = '200'
GROUP BY REFILL_DATE;

COMMIT;


-- POS actif 30jr
UNION ALL
SELECT
    REFILL_DATE TRANSACTION_DATE,
    'RA_POS_ACT_30' USAGE_CODE,
    'FT_REFILL' SOURCE_TABLE,
    (
        SELECT COUNT(DISTINCT SENDER_MSISDN)
        FROM MON.SPARK_FT_REFILL
        WHERE REFILL_DATE BETWEEN TO_DATE('20171110', 'YYYYMMDD') - 30 AND TO_DATE('20171110', 'YYYYMMDD')
        AND REFILL_MEAN = 'C2S'
        AND TERMINATION_IND = '200'
    )  KPI,
   SYSDATE INSERT_DATE
FROM MON.SPARK_FT_REFILL
WHERE REFILL_DATE = TO_DATE('20171110', 'YYYYMMDD')
AND REFILL_MEAN = 'C2S'
AND TERMINATION_IND = '200'
GROUP BY REFILL_DATE;

COMMIT;

END;
