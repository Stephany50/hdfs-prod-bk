---
insert into TMP.TT_KYC_BDI_PP_ST2
SELECT
trim(A.MSISDN) AS MSISDN,
trim(A.TYPE_PIECE)  AS TYPE_PIECE,
trim(A.NUMERO_PIECE) AS NUMERO_PIECE,
trim(A.NOM_PRENOM) AS NOM_PRENOM,
trim(A.NOM) AS NOM,
trim(A.PRENOM) AS PRENOM,
A.DATE_NAISSANCE AS DATE_NAISSANCE,
A.DATE_EXPIRATION AS DATE_EXPIRATION,
trim(A.ADRESSE)  AS ADRESSE,
trim(A.NUMERO_PIECE_TUTEUR)  AS NUMERO_PIECE_TUTEUR,
trim(A.NOM_PARENT)  AS NOM_PARENT,
cast(A.DATE_NAISSANCE_TUTEUR as DATE) AS DATE_NAISSANCE_TUTEUR,
trim(A.NOM_STRUCTURE) AS   NOM_STRUCTURE,
trim(A.NUMERO_REGISTRE_COMMERCE)  AS NUMERO_REGISTRE_COMMERCE,
trim(A.NUMERO_PIECE_REP_LEGAL)  AS NUMERO_PIECE_REP_LEGAL,
A.DATE_ACTIVATION AS DATE_ACTIVATION,
A.DATE_CHANGEMENT_STATUT AS DATE_CHANGEMENT_STATUT,
trim(A.STATUT)   AS STATUT,
trim(A.ODBINCOMINGCALLS)  AS ODBINCOMINGCALLS,
trim(A.ODBOUTGOINGCALLS) AS ODBOUTGOINGCALLS,
trim(A.IMEI) AS IMEI,
trim(A.STATUT_DEROGATION) AS STATUT_DEROGATION,
trim(A.REGION_ADMINISTRATIVE) AS REGION_ADMINISTRATIVE,
trim(A.REGION_COMMERCIALE) AS REGION_COMMERCIALE,
trim(A.SITE_NAME) AS SITE_NAME,
trim(A.VILLE) AS VILLE,
trim(A.LONGITUDE)  AS  LONGITUDE,
trim(A.LATITUDE)  AS LATITUDE,
trim(A.OFFRE_COMMERCIALE)  AS OFFRE_COMMERCIALE,
trim(A.TYPE_CONTRAT)  AS TYPE_CONTRAT,
trim(A.SEGMENTATION)   AS  SEGMENTATION,
A.REV_M_3  AS REV_M_3,
A.REV_M_2  AS REV_M_2,
A.REV_M_1 AS REV_M_1,
A.REV_MOY As REV_MOY,
trim(A.STATUT_IN) AS STATUT_IN,
trim(A.NUMERO_PIECE_ABSENT)  AS  NUMERO_PIECE_ABSENT,
trim(A.NUMERO_PIECE_TUT_ABSENT)  As NUMERO_PIECE_TUT_ABSENT,
trim(A.NUMERO_PIECE_INF_4)  AS NUMERO_PIECE_INF_4,
trim(A.NUMERO_PIECE_TUT_INF_4)  AS  NUMERO_PIECE_TUT_INF_4,
trim(A.NUMERO_PIECE_NON_AUTHORISE)  AS NUMERO_PIECE_NON_AUTHORISE,
trim(A.NUMERO_PIECE_TUT_NON_AUTH)  AS NUMERO_PIECE_TUT_NON_AUTH,
trim(A.NUMERO_PIECE_EGALE_MSISDN)  AS NUMERO_PIECE_EGALE_MSISDN,
trim(A.NUMERO_PIECE_TUT_EGALE_MSISDN)  AS NUMERO_PIECE_TUT_EGALE_MSISDN,
trim(A.NUMERO_PIECE_A_CARACT_NON_AUTH)  AS NUMERO_PIECE_A_CARACT_NON_AUTH,
trim(A.NUMERO_PIECE_TUT_CARAC_NON_A)  AS NUMERO_PIECE_TUT_CARAC_NON_A,
trim(A.NUMERO_PIECE_UNIQUEMENT_LETTRE)  AS NUMERO_PIECE_UNIQUEMENT_LETTRE,
trim(A.NUMERO_PIECE_TUT_UNIQ_LETTRE)  AS NUMERO_PIECE_TUT_UNIQ_LETTRE,
trim(A.NOM_PRENOM_ABSENT)  AS NOM_PRENOM_ABSENT,
trim(A.NOM_PARENT_ABSENT)  AS NOM_PARENT_ABSENT,
trim(A.NOM_PRENOM_DOUTEUX)  As NOM_PRENOM_DOUTEUX,
trim(A.NOM_PARENT_DOUTEUX)  AS NOM_PARENT_DOUTEUX,
trim(A.DATE_NAISSANCE_ABSENT) AS DATE_NAISSANCE_ABSENT,
trim(A.DATE_NAISSANCE_TUT_ABSENT)  AS DATE_NAISSANCE_TUT_ABSENT,
trim(A.DATE_EXPIRATION_ABSENT)  AS  DATE_EXPIRATION_ABSENT,
trim(A.ADRESSE_ABSENT)  AS ADRESSE_ABSENT,
trim(A.ADRESSE_DOUTEUSE)  AS  ADRESSE_DOUTEUSE,
trim(A.TYPE_PERSONNE_INCONNU)  AS  TYPE_PERSONNE_INCONNU,
trim(A.MINEUR_MAL_IDENTIFIE)  AS MINEUR_MAL_IDENTIFIE,
trim(A.EST_PREMIUM)  AS EST_PREMIUM,
trim(A.TYPE_PIECE_TUTEUR)  AS TYPE_PIECE_TUTEUR,
trim(A.ADRESSE_TUTEUR)  As ADRESSE_TUTEUR,
trim(A.ACCEPTATION_CGV)  As ACCEPTATION_CGV,
trim(A.CONTRAT_SOUCRIPTION)  As CONTRAT_SOUCRIPTION,
trim(A.DISPONIBILITE_SCAN)  AS DISPONIBILITE_SCAN,
trim(A.PLAN_LOCALISATION)  As PLAN_LOCALISATION,
trim(A.TYPE_PERSONNE_I)  AS  TYPE_PERSONNE_I,
(CASE
WHEN UPPER(A.TYPE_PERSONNE_I) = 'PM' THEN
(
CASE
WHEN UPPER(A.OFFRE_COMMERCIALE) IN ('POSTPAID DATALIVE', 'POSTPAID GPRSTRACKING', 'POSTPAID SMARTRACK', 'PREPAID DATALIVE') THEN 'MACHINE_2_MACHINE'
ELSE 'PERSONNE_MORALE' END
)
WHEN UPPER(A.TYPE_PERSONNE_I) = 'PP' AND A.DATE_NAISSANCE IS NOT NULL AND A.DATE_NAISSANCE > add_months(A.EVENT_DATE,-18*12) THEN 'MINEUR'
WHEN UPPER(A.TYPE_PERSONNE_I) = 'PP' AND A.DATE_NAISSANCE IS NOT NULL AND A.DATE_NAISSANCE <= add_months(A.EVENT_DATE,-18*12) THEN 'MAJEUR'
ELSE UPPER(A.TYPE_PERSONNE_I) END) TYPE_PERSONNE,
(CASE WHEN H.MSISDN IS NOT NULL AND trim(H.MSISDN) <> '' THEN H.EVENT_DATE ELSE A.EVENT_DATE END) DATE_ACQUISITION,
(CASE WHEN A.DATE_NAISSANCE > A.EVENT_DATE THEN 'OUI' ELSE 'NON' END) DATE_NAISSANCE_DOUTEUX,
(CASE WHEN A.DATE_NAISSANCE_TUTEUR > A.EVENT_DATE OR  cast((date_format(A.EVENT_DATE,'yyyy') - date_format(A
.DATE_NAISSANCE_TUTEUR,'yyyy')) as int)  < 21
THEN 'OUI' ELSE 'NON' END) DATE_NAISSANCE_TUT_DOUTEUX,
(CASE WHEN  A.DATE_EXPIRATION >= add_months(A.EVENT_DATE,120) THEN 'OUI' ELSE 'NON' END)
DATE_EXPIRATION_DOUTEUSE,
(CASE WHEN A.DATE_EXPIRATION IS NULL OR  A.DATE_EXPIRATION < A.EVENT_DATE THEN 'OUI' ELSE 'NON' END) CNI_EXPIRE,
(CASE WHEN F.NUMERO_PIECE IS NOT NULL AND trim(F.NUMERO_PIECE) <> '' AND A.TYPE_PERSONNE_I='PP' THEN 'OUI' ELSE
'NON' END) MULTI_SIM,
(CASE WHEN I.MSISDN IS NULL OR trim(I.MSISDN) = '' THEN 'NON' ELSE 'OUI' END) EST_PRESENT_OM,
(CASE WHEN D.MSISDN IS NULL OR trim(D.MSISDN) = '' THEN 'NON' ELSE 'OUI' END) EST_PRESENT_ZEB,
IF(trim(C.MSISDN) is not null and trim(C.MSISDN) <> ''
,IF(trim(A.OFFRE_COMMERCIALE) like 'POST%'
,'OUI'
,case when trim(C.COMGP_STATUS) = 'ACTIF' then 'OUI'
when trim(C.COMGP_STATUS) = 'INACT' then 'NON'
else 'UNKNOWN'
end
)
,'NON'
) AS EST_PRESENT_ART,
IF(trim(C.MSISDN) is not null and trim(C.MSISDN) <> ''
,IF(trim(A.OFFRE_COMMERCIALE) like 'POST%'
,'OUI'
,case when trim(C.GP_STATUS) = 'ACTIF' then 'OUI'
when trim(C.GP_STATUS) = 'INACT' then 'NON'
else 'UNKNOWN'
end
)
,'NON'
) AS EST_PRESENT_GP,
(CASE WHEN trim(A.STATUT_IN) IN ('ACTIVE', 'INACTIVE') THEN 'OUI' ELSE 'NON' END) EST_PRESENT_OCM,
(case when datediff(to_date('###SLICE_VALUE###'),E.DATE_DERNIERE_ACTIVITE_OM) <= 90 THEN 'OUI' ELSE 'NON' END) AS EST_ACTIF_OM,
(CASE WHEN G.MSISDN IS NULL OR trim(G.MSISDN) = '' THEN 'NON' ELSE 'OUI' END) EST_CLIENT_VIP,
NVL(E.REV_OM_M_3, 0)  REV_OM_M_3,
NVL(E.REV_OM_M_2, 0)  REV_OM_M_2,
(Case when E.MSISDN is not null and trim(E.MSISDN) <> '' then NVL(E.REV_OM_M_1, 0) else -1 end) REV_OM_M_1,
(CASE WHEN datediff(to_date('###SLICE_VALUE###'),B.LAST_ACTIVE_DAY) <= 90 THEN 'OUI' ELSE 'NON' END) EST_ACTIF_DATA,
NVL(B.TRAF_M_3, 0)   TRAFFIC_DATA_M_3,
NVL(B.TRAF_M_2, 0)  TRAFFIC_DATA_M_2,
(Case when B.MSISDN IS NULL OR trim(B.MSISDN) = '' then NVL(B.TRAF_M_1, 0) else -1 end) TRAFFIC_DATA_M_1,
A.DATE_VALIDATION_BO  AS DATE_VALIDATION_BO,
A.STATUT_VALIDATION_BO  AS STATUT_VALIDATION_BO,
A.MOTIF_REJET_BO AS MOTIF_REJET_BO,
current_timestamp() AS insert_date,
A.EVENT_DATE AS EVENT_DATE
FROM TMP.TT_KYC_BDI_PP_ST1 A
LEFT JOIN
(SELECT MSISDN,
MAX(LAST_ACTIVE_DAY) LAST_ACTIVE_DAY,
SUM(CASE WHEN EVENT_MONTH = substr(add_months(to_date('###SLICE_VALUE###'),-3),1,7) THEN BYTES_RECEIVED + BYTES_SENT ELSE 0 END) TRAF_M_3,
SUM(CASE WHEN EVENT_MONTH = substr(add_months(to_date('###SLICE_VALUE###'),-2),1,7) THEN BYTES_RECEIVED + BYTES_SENT ELSE 0 END) TRAF_M_2,
SUM(CASE WHEN EVENT_MONTH = substr(add_months(to_date('###SLICE_VALUE###'),-1),1,7) THEN BYTES_RECEIVED + BYTES_SENT ELSE 0 END) TRAF_M_1
FROM MON.SPARK_FT_DATA_CONSO_MSISDN_MONTH
WHERE EVENT_MONTH IN (substr(add_months(to_date('###SLICE_VALUE###'),-3),1,7), substr(add_months(to_date('###SLICE_VALUE###'),-2),1,7), substr(add_months(to_date('###SLICE_VALUE###'),-1),1,7))
GROUP BY MSISDN) B ON trim(A.MSISDN) = FN_FORMAT_MSISDN_TO_9DIGITS(trim(B.MSISDN))
LEFT JOIN
(
SELECT DISTINCT MSISDN, COMGP_STATUS, GP_STATUS
FROM MON.SPARK_FT_ACCOUNT_ACTIVITY
WHERE EVENT_DATE =to_date('###SLICE_VALUE###')
) C ON trim(A.MSISDN) = FN_FORMAT_MSISDN_TO_9DIGITS(trim(C.MSISDN))
LEFT JOIN
(SELECT DISTINCT PRIMARY_MSISDN MSISDN FROM CDR.SPARK_IT_ZEBRA_MASTER WHERE transaction_date = '###SLICE_VALUE###') D ON trim(A.MSISDN) = FN_FORMAT_MSISDN_TO_9DIGITS(trim(D.MSISDN))
LEFT JOIN(SELECT MSISDN,
MAX(DATE_DERNIERE_ACTIVITE_OM) DATE_DERNIERE_ACTIVITE_OM,
MAX(CASE WHEN MOIS = substr(add_months(to_date('###SLICE_VALUE###'),-3),1,7) THEN ARPU_OM ELSE 0 END) REV_OM_M_3,
MAX(CASE WHEN MOIS = substr(add_months(to_date('###SLICE_VALUE###'),-2),1,7) THEN ARPU_OM ELSE 0 END) REV_OM_M_2,
MAX(CASE WHEN MOIS = substr(add_months(to_date('###SLICE_VALUE###'),-1),1,7) THEN ARPU_OM ELSE 0 END) REV_OM_M_1
FROM MON.SPARK_FT_DATAMART_OM_MONTH
WHERE MOIS IN (substr(add_months(to_date('###SLICE_VALUE###'),-3),1,7), substr(add_months(to_date('###SLICE_VALUE###'),-2),1,7), substr(add_months(to_date('###SLICE_VALUE###'),-1),1,7))
GROUP BY MSISDN
) E ON trim(A.MSISDN) = FN_FORMAT_MSISDN_TO_9DIGITS(trim(E.MSISDN))
LEFT JOIN(
SELECT NUMERO_PIECE,count(*)
FROM (select xx.*,
     (case when trim(xx.ODBOUTGOINGCALLS) is null OR trim(xx.ODBINCOMINGCALLS)  is null then 'U'
         WHEN trim(xx.ODBOUTGOINGCALLS) = '1'
         then case when trim(xx.ODBINCOMINGCALLS) = '1' then  'OUI'
                   else 'NON'
               end
         WHEN trim(xx.ODBINCOMINGCALLS) = '1'
         then case when trim(xx.ODBOUTGOINGCALLS) <> '1' then  'NON'
               end
         else 'NON'
     end) as  EST_SUSPENDU
     from TMP.TT_KYC_BDI_PP_ST1 xx) A
WHERE trim(EST_SUSPENDU)='NON'  and statut_derogation = 'NON'
GROUP BY NUMERO_PIECE
HAVING COUNT(*) > 3
) F ON upper(trim(A.NUMERO_PIECE)) = upper(trim(F.NUMERO_PIECE))
LEFT JOIN (SELECT DISTINCT MSISDN FROM DIM.SPARK_DT_BDI_VIP) G ON trim(A.MSISDN) = FN_FORMAT_MSISDN_TO_9DIGITS(trim(G.MSISDN))
LEFT JOIN (SELECT DISTINCT MSISDN, DATE_ACTIVATION AS EVENT_DATE FROM MON.SPARK_FT_KYC_BDI_PP WHERE EVENT_DATE =
DATE_SUB(to_date('###SLICE_VALUE###'),1)) H ON trim(A.MSISDN) = FN_FORMAT_MSISDN_TO_9DIGITS(trim(H.MSISDN))
LEFT JOIN (select distinct msisdn
from mon.spark_ft_omny_account_snapshot_new
where event_date = '###SLICE_VALUE###') I ON trim(A.MSISDN) = FN_FORMAT_MSISDN_TO_9DIGITS(trim(I.MSISDN))