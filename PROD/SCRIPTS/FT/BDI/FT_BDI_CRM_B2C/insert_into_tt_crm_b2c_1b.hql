insert into TMP.tt_crm_b2c_1B
select
nvl(b.msisdn,a.msisdn) as msisdn,
(case when b.type_personne is null or trim(b.type_personne) = '' then a.type_personne else b.type_personne end) as type_personne,
(case when b.nom_prenom is null or trim(b.nom_prenom) = '' then a.nom_prenom else b.nom_prenom end) as nom_prenom,
(case when b.id_type_piece is null or trim(b.id_type_piece) = '' then a.id_type_piece else b.id_type_piece end) as id_type_piece,
(case when b.type_piece is null or trim(b.type_piece) = '' then a.type_piece else b.type_piece end) as type_piece,
(case when b.numero_piece is null or trim(b.numero_piece) = '' then a.numero_piece else b.numero_piece end) as numero_piece,
(case when b.date_expiration is null  then a.date_expiration else b.date_expiration end) as date_expiration,
(case when b.date_naissance is null  then a.date_naissance else b.date_naissance end) as date_naissance,
(case when b.date_activation is null  then a.date_activation else b.date_activation end) as date_activation,
(case when b.adresse is null or trim(b.adresse) = '' then a.adresse else b.adresse end) as adresse,
(case when b.quartier is null or trim(b.quartier) = '' then a.quartier else b.quartier end) as quartier,
(case when b.ville is null or trim(b.ville) = '' then a.ville else b.ville end) as ville,
(case when b.statut is null or trim(b.statut) = '' then a.statut else b.statut end) as statut,
(case when b.statut_validation_bo is null or trim(b.statut_validation_bo) = '' then a.statut_validation_bo else b.statut_validation_bo end) as statut_validation_bo,
(case when b.motif_rejet_bo is null or trim(b.motif_rejet_bo) = '' then a.motif_rejet_bo else b.motif_rejet_bo end) as motif_rejet_bo,
(case when b.date_validation_bo is null  then a.date_validation_bo else b.date_validation_bo end) as date_validation_bo,
(case when b.login_validateur_bo is null or trim(b.login_validateur_bo) = '' then a.login_validateur_bo else b.login_validateur_bo end) as login_validateur_bo,
(case when b.canal_validateur_bo is null or trim(b.canal_validateur_bo) = '' then a.canal_validateur_bo else b.canal_validateur_bo end) as canal_validateur_bo,
(case when b.type_abonnement is null or trim(b.type_abonnement) = '' then a.type_abonnement else b.type_abonnement end) as type_abonnement,
(case when b.csmoddate is null  then a.csmoddate else b.csmoddate end) as csmoddate,
(case when b.ccmoddate is null  then a.ccmoddate else b.ccmoddate end) as ccmoddate,
(case when b.compte_client_structure is null or trim(b.compte_client_structure) = '' then a.compte_client_structure else b.compte_client_structure end) as compte_client_structure,
(case when b.nom_structure is null or trim(b.nom_structure) = '' then a.nom_structure else b.nom_structure end) as nom_structure,
(case when b.numero_registre_commerce is null or trim(b.numero_registre_commerce) = '' then a.numero_registre_commerce else b.numero_registre_commerce end) as numero_registre_commerce,
(case when b.numero_piece_representant_legal is null or trim(b.numero_piece_representant_legal) = '' then a.numero_piece_representant_legal else b.numero_piece_representant_legal end) as numero_piece_representant_legal,
(case when b.imei is null or trim(b.imei) = '' then a.imei else b.imei end) as imei,
(case when b.statut_derogation is null or trim(b.statut_derogation) = '' then a.statut_derogation else b.statut_derogation end) as statut_derogation,
(case when b.region_administrative is null or trim(b.region_administrative) = '' then a.region_administrative else b.region_administrative end) as region_administrative,
(case when b.region_commerciale is null or trim(b.region_commerciale) = '' then a.region_commerciale else b.region_commerciale end) as region_commerciale,
(case when b.site_name is null or trim(b.site_name) = '' then a.site_name else b.site_name end) as site_name,
(case when b.ville_site is null or trim(b.ville_site) = '' then a.ville_site else b.ville_site end) as ville_site,
(case when b.offre_commerciale is null or trim(b.offre_commerciale) = '' then a.offre_commerciale else b.offre_commerciale end) as offre_commerciale,
(case when b.type_contrat is null or trim(b.type_contrat) = '' then a.type_contrat else b.type_contrat end) as type_contrat,
(case when b.segmentation is null or trim(b.segmentation) = '' then a.segmentation else b.segmentation end) as segmentation,
(case when b.date_souscription is null  then a.date_souscription else b.date_souscription end) as date_souscription,
(case when b.date_changement_statut is null  then a.date_changement_statut else b.date_changement_statut end) as date_changement_statut,
(case when b.ville_structure is null or trim(b.ville_structure) = '' then a.ville_structure else b.ville_structure end) as ville_structure,
(case when b.quartier_structure is null or trim(b.quartier_structure) = '' then a.quartier_structure else b.quartier_structure end) as quartier_structure,
(case when b.raison_statut is null or trim(b.raison_statut) = '' then a.raison_statut else b.raison_statut end) as raison_statut,
(case when b.prenom is null or trim(b.prenom) = '' then a.prenom else b.prenom end) as prenom,
(case when b.nom is null or trim(b.nom) = '' then a.nom else b.nom end) as nom,
(case when b.customer_id is null or trim(b.customer_id) = '' then a.customer_id else b.customer_id end) as customer_id,
(case when b.contract_id is null or trim(b.contract_id) = '' then a.contract_id else b.contract_id end) as contract_id,
(case when b.compte_client is null or trim(b.compte_client) = '' then a.compte_client else b.compte_client end) as compte_client,
(case when b.plan_localisation is null or trim(b.plan_localisation) = '' then a.plan_localisation else b.plan_localisation end) as plan_localisation,
(case when b.contrat_soucription is null or trim(b.contrat_soucription) = '' then a.contrat_soucription else b.contrat_soucription end) as contrat_soucription,
(case when b.acceptation_cgv is null or trim(b.acceptation_cgv) = '' then a.acceptation_cgv else b.acceptation_cgv end) as acceptation_cgv,
(case when b.disponibilite_scan is null or trim(b.disponibilite_scan) = '' then a.disponibilite_scan else b.disponibilite_scan end) as disponibilite_scan,
(case when b.nom_tuteur is null or trim(b.nom_tuteur) = '' then a.nom_tuteur else b.nom_tuteur end) as nom_tuteur,
(case when b.prenom_tuteur is null or trim(b.prenom_tuteur) = '' then a.prenom_tuteur else b.prenom_tuteur end) as prenom_tuteur,
(case when b.date_naissance_tuteur is null  then a.date_naissance_tuteur else b.date_naissance_tuteur end) as date_naissance_tuteur,
(case when b.numero_piece_tuteur is null or trim(b.numero_piece_tuteur) = '' then a.numero_piece_tuteur else b.numero_piece_tuteur end) as numero_piece_tuteur,
(case when b.date_expiration_tuteur is null  then a.date_expiration_tuteur else b.date_expiration_tuteur end) as date_expiration_tuteur,
(case when b.id_type_piece_tuteur is null or trim(b.id_type_piece_tuteur) = '' then a.id_type_piece_tuteur else b.id_type_piece_tuteur end) as id_type_piece_tuteur,
(case when b.type_piece_tuteur is null or trim(b.type_piece_tuteur) = '' then a.type_piece_tuteur else b.type_piece_tuteur end) as type_piece_tuteur,
(case when b.adresse_tuteur is null or trim(b.adresse_tuteur) = '' then a.adresse_tuteur else b.adresse_tuteur end) as adresse_tuteur,
(case when b.identificateur is null or trim(b.identificateur) = '' then a.identificateur else b.identificateur end) as identificateur,
(case when b.localisation_identificateur is null or trim(b.localisation_identificateur) = '' then a.localisation_identificateur else b.localisation_identificateur end) as localisation_identificateur,
(case when b.profession is null or trim(b.profession) = '' then a.profession else b.profession end) as profession
from (select *
from MON.SPARK_FT_BDI_CRM_B2C
where event_date = date_sub('###SLICE_VALUE###',1)) a
full outer join TMP.tt_crm_b2c_1A b
on trim(a.msisdn) = trim(b.msisdn)