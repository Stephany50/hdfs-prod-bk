 INSERT INTO MON.SPARK_FT_SUBSCRIPTION_MSISDN_MONTH
 SELECT
 A.MSISDN
 ,MAX(NVL(B.FORMULE, A.CUSTOMER_PROFILE)) CUSTOMER_PROFILE
 , MAX(NVL(A.CONTRACT_TYPE
 , B.CONTRACT_TYPE)) CONTRACT_TYPE
 , SUM(TOTAL_SUBS_COUNT) TOTAL_SUBS_COUNT
 , SUM(TOTAL_SUBS_AMOUNT) TOTAL_SUBS_AMOUNT
 , SUM(VOICE_BUNDLE_COUNT) VOICE_BUNDLE_COUNT
 , SUM(VOICE_BUNDLE_MINUTES) VOICE_BUNDLE_MINUTES
 , SUM(VOICE_BUNDLE_AMOUNT) VOICE_BUNDLE_AMOUNT
 , SUM(SMS_BUNDLE_COUNT) SMS_BUNDLE_COUNT
 , SUM(SMS_BUNDLE_VOLUME) SMS_BUNDLE_VOLUME
 , SUM(SMS_BUNDLE_AMOUNT) SMS_BUNDLE_AMOUNT
 , SUM(DATA_BUNDLE_COUNT) DATA_BUNDLE_COUNT
 , SUM(DATA_BUNDLE_BYTES) DATA_BUNDLE_BYTES
 , SUM(DATA_BUNDLE_AMOUNT) DATA_BUNDLE_AMOUNT
 , SUM(VOI_DAT_SMS_BUN_COUNT) VOI_DAT_SMS_BUN_COUNT
 , SUM(VOI_DAT_SMS_BUN_AMOUNT) VOI_DAT_SMS_BUN_AMOUNT
 , SUM(VOI_SMS_BUN_COUNT) VOI_SMS_BUN_COUNT
 , SUM(VOI_SMS_BUN_AMOUNT) VOI_SMS_BUN_AMOUNT
 , SUM(VOI_DAT_BUN_COUNT) VOI_DAT_BUN_COUNT
 , SUM(VOI_DAT_BUN_AMOUNT) VOI_DAT_BUN_AMOUNT
 , SUM(DAT_SMS_BUN_COUNT) DAT_SMS_BUN_COUNT
 , SUM(DAT_SMS_BUN_AMOUNT) DAT_SMS_BUN_AMOUNT
 , SUM(OTHER_SUBS_COUNT) OTHER_SUBS_COUNT
 , SUM(OTHER_SUBS_AMOUNT) OTHER_SUBS_AMOUNT
 , 'FT_SUBSCRIPTION_MSISDN_DAY' SRC_TABLE
 , MAX(OPERATOR_CODE) OPERATOR_CODE
 , CURRENT_DATE
 , COUNT(DISTINCT A.EVENT_DATE) ACTIVE_DAYS_COUNT
 , MIN(A.EVENT_DATE) FIRST_ACTIVE_DAY
 , MAX(A.EVENT_DATE) LAST_ACTIVE_DAY
 , '###SLICE_VALUE###' EVENT_MONTH
 FROM MON.SPARK_FT_SUBSCRIPTION_MSISDN_DAY A
 LEFT JOIN (
 SELECT A.ACCESS_KEY MSISDN
 , UPPER (    NVL  (A.OSP_CUSTOMER_FORMULE,  SUBSTR(A.BSCS_COMM_OFFER, INSTR(A.BSCS_COMM_OFFER,'|')+1)) ) FORMULE
 , A.OSP_CONTRACT_TYPE CONTRACT_TYPE
 FROM MON.SPARK_FT_CONTRACT_SNAPSHOT A
 WHERE A.EVENT_DATE = ADD_MONTHS (TO_DATE ('###SLICE_VALUE###' || '-01'), 1)
 AND (CASE NVL(A.OSP_STATUS, A.CURRENT_STATUS)
                    WHEN 'ACTIVE' THEN 'ACTIVE'
                    WHEN 'A' THEN 'ACTIVE'
                    WHEN 'D' THEN 'DEACT'
                    WHEN 'S' THEN 'INACTIVE'
                    WHEN 'DEACTIVATED' THEN 'DEACT'
                    WHEN 'INACTIVE' THEN 'INACTIVE'
                    WHEN 'VALID' THEN 'VALID'
                    ELSE 'NVL(A.OSP_STATUS, A.CURRENT_STATUS)'
                    END) <> 'TERMINATED') B
 ON A.MSISDN = B.MSISDN WHERE EVENT_DATE BETWEEN TO_DATE ('###SLICE_VALUE###' || '-01') AND DATE_SUB(ADD_MONTHS (TO_DATE ('###SLICE_VALUE###' || '-01'), 1), 1)
 GROUP BY A.MSISDN