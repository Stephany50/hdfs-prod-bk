create table junk.TT_FT_BDI4 as
SELECT
    '2019-09-22' EVENT_DATE,
    SUBSTR(A.MSISDN, -9, 9) MSISDN,
    A.TYPE_PIECE,
    A.NUMERO_PIECE,
    UPPER(A.NOM) NOM,
    (CASE
        WHEN A.DATE_NAISSANCE IS NULL THEN NULL
        WHEN A.DATE_NAISSANCE LIKE '%-%'  THEN to_date(A.DATE_NAISSANCE)
        ELSE NULL END) DATE_NAISSANCE,
    (CASE
        WHEN A.DATE_EXPIRATION IS NULL THEN NULL
        WHEN A.DATE_EXPIRATION LIKE '%-%'  THEN to_date(A.DATE_EXPIRATION)
        ELSE NULL END) DATE_EXPIRATION,
    UPPER(A.ADDRESSE) ADDRESSE,
    A.NUMERO_PIECE_TUTEUR,
    A.NOM_PARENT,
    (CASE
        WHEN A.DATE_NAISSANCE_TUTEUR IS NULL THEN NULL
        WHEN A.DATE_NAISSANCE_TUTEUR LIKE '%-%'  THEN to_date(A.DATE_NAISSANCE_TUTEUR)
        ELSE NULL END) DATE_NAISSANCE_TUTEUR,
    A.NOM_STRUCTURE,
    A.NUMERO_REGISTRE_COMMERCE,
    A.NUMERO_PIECE_REP_LEGAL,
     DATE_ACTIVATION,
   (CASE
        WHEN A.DATE_CHANGEMENT_STATUT IS NULL THEN NULL
        WHEN A.DATE_CHANGEMENT_STATUT LIKE '%-%' THEN to_date(SUBSTR(A.DATE_CHANGEMENT_STATUT, 0, 19))
        ELSE NULL END) DATE_CHANGEMENT_STATUT,
    UPPER(A.STATUT_BSCS) STATUT_BSCS,
    A.ODBINCOMINGCALLS,
    A.ODBOUTGOINGCALLS,
    A.IMEI, --AA.IMEI
    (CASE WHEN F.MSISDN IS NULL THEN 'NON' ELSE 'OUI' END) STATUT_DEROGATION,
    B.ADMINISTRATIVE_REGION REGION_ADMINISTRATIVE,
    B.COMMERCIAL_REGION REGION_COMMERCIALE,
    B.SITE_NAME SITE_NAME,
    B.TOWNNAME VILLE,
    B.LONGITUDE,
    B.LATITUDE,
    (Case when 1=1 THEN C.COMMERCIAL_OFFER  ELSE 'N/A'END) OFFRE_COMMERCIALE,
    ( Case when 1 =1 THEN UPPER(NVL(C.OSP_CONTRACT_TYPE, C.OSP_ACCOUNT_TYPE)) ELSE'N/A'END) TYPE_CONTRAT,
    (Case when 1 =1 THEN C.SEGMENTATION ELSE 'N/A' END) SEGMENTATION,
    (Case when 1 =1 THEN C.OSP_STATUS  ELSE 'N/A' END) STATUT_IN,
    (CASE WHEN A.NUMERO_PIECE = '' OR A.NUMERO_PIECE IS NULL THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_ABSENT,
    (CASE WHEN A.NUMERO_PIECE_TUTEUR = '' OR A.NUMERO_PIECE_TUTEUR IS NULL THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_TUT_ABSENT,
    (CASE WHEN LENGTH(A.NUMERO_PIECE) < 4 THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_INF_4,
    (CASE WHEN LENGTH(A.NUMERO_PIECE_TUTEUR) < 4 THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_TUT_INF_4,
    (
        CASE WHEN TRIM(A.NUMERO_PIECE) IN ('000000000', '111111111', '222222222', '333333333',
        '444444444', '555555555', '666666666', '777777777', '888888888', '999999999',
        '012345678','122222222', '123456789', '100010001', '1122334455') OR LENGTH(A.NUMERO_PIECE) > 21 OR TRIM(A.NUMERO_PIECE) LIKE '112233445%' THEN 'OUI' ELSE 'NON' END
    ) NUMERO_PIECE_NON_AUTHORISE,
    (
        CASE WHEN TRIM(A.NUMERO_PIECE_TUTEUR) IN ('000000000', '111111111', '222222222', '333333333',
        '444444444', '555555555', '666666666', '777777777', '888888888', '999999999',
        '012345678','122222222', '123456789', '100010001', '1122334455') OR LENGTH(A.NUMERO_PIECE) > 21 OR A.NUMERO_PIECE = A.NUMERO_PIECE_TUTEUR OR TRIM(A.NUMERO_PIECE) LIKE '112233445%' THEN 'OUI' ELSE 'NON' END
    ) NUMERO_PIECE_TUT_NON_AUTH,
    (CASE WHEN SUBSTR(A.MSISDN, -9, 9) = A.NUMERO_PIECE THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_EGALE_MSISDN,
    (CASE WHEN SUBSTR(A.MSISDN, -9, 9) = A.NUMERO_PIECE_TUTEUR THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_TUT_EGALE_MSISDN,
    (CASE WHEN LENGTH(TRIM(TRANSLATE(LOWER(A.NUMERO_PIECE), 'abcdefghijklmnopqrstuvwxyz1234567890-/',''))) > 0 THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_A_CARACT_NON_AUTH,
    (CASE WHEN LENGTH(TRIM(TRANSLATE(LOWER(A.NUMERO_PIECE_TUTEUR), 'abcdefghijklmnopqrstuvwxyz1234567890-/',''))) > 0 THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_TUT_CARAC_NON_A,
    (CASE WHEN LENGTH(TRIM(TRANSLATE(LOWER(A.NUMERO_PIECE), 'abcdefghijklmnopqrstuvwxyz-',''))) = 0 THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_UNIQUEMENT_LETTRE,
    (CASE WHEN LENGTH(TRIM(TRANSLATE(LOWER(A.NUMERO_PIECE_TUTEUR), 'abcdefghijklmnopqrstuvwxyz-',''))) = 0 THEN 'OUI' ELSE 'NON' END) NUMERO_PIECE_TUT_UNIQ_LETTRE,
    (CASE WHEN A.NOM = '' OR A.NOM IS NULL THEN 'OUI' ELSE 'NON' END) NOM_ABSENT,
    (CASE WHEN A.NOM_PARENT = '' OR A.NOM_PARENT IS NULL THEN 'OUI' ELSE 'NON' END) NOM_PARENT_ABSENT,
    (CASE WHEN LENGTH(TRIM(TRANSLATE(LOWER(A.NOM),'aeiou',' ')))= 0
        OR LENGTH(TRIM(TRANSLATE(LOWER(A.NOM),'bcdfghjklmnpqrstvwxz',' ')))= 0
        OR LENGTH(TRIM(TRANSLATE(A.NOM,'1234567890.',' '))) = 0
        OR LENGTH(A.NOM) <= 1
        --OR NOT(isConsecutiveCharNormal(A.NOM,2))
        OR LOWER(TRIM(A.NOM)) IN ('orange', 'vendeur', 'madame', 'monsieur', 'delta', 'phone', 'inconnu', 'inconnue', 'anonyme', 'unknown')
        OR LENGTH(TRIM(TRANSLATE(LOWER(A.NOM),'asdfghjklqwertyuiopzxcvbnm1234567890çéèàäëüïöîôûâê-.''',' ')))> 0 THEN 'OUI' ELSE 'NON' END) NOM_DOUTEUX,
    (CASE WHEN LENGTH(TRIM(TRANSLATE(LOWER(A.NOM_PARENT),'aeiou',' ')))= 0
        OR LENGTH(TRIM(TRANSLATE(LOWER(A.NOM_PARENT),'bcdfghjklmnpqrstvwxz',' ')))= 0
        OR LENGTH(TRIM(TRANSLATE(A.NOM_PARENT,'1234567890.',' '))) = 0
        OR LENGTH(A.NOM_PARENT) <= 1
        --OR NOT(isConsecutiveCharNormal(A.NOM,2))
        OR LOWER(TRIM(A.NOM_PARENT)) IN ('orange', 'vendeur', 'madame', 'monsieur', 'delta', 'phone', 'inconnu', 'inconnue', 'anonyme', 'unknown')
        OR LENGTH(TRIM(TRANSLATE(LOWER(A.NOM_PARENT),'asdfghjklqwertyuiopzxcvbnm1234567890çéèàäëüïöîôûâê-.''',' ')))> 0 THEN 'OUI' ELSE 'NON' END) NOM_PARENT_DOUTEUX,
    (CASE WHEN A.DATE_NAISSANCE = '' OR A.DATE_NAISSANCE IS NULL THEN 'OUI' ELSE 'NON' END) DATE_NAISSANCE_ABSENT,
    (CASE WHEN A.DATE_NAISSANCE_TUTEUR = '' OR A.DATE_NAISSANCE_TUTEUR IS NULL THEN 'OUI' ELSE 'NON' END) DATE_NAISSANCE_TUT_ABSENT,
    (CASE WHEN A.DATE_EXPIRATION = '' OR A.DATE_EXPIRATION IS NULL THEN 'OUI' ELSE 'NON' END) DATE_EXPIRATION_ABSENT,
    (CASE WHEN A.ADDRESSE = '' OR A.ADDRESSE IS NULL THEN 'OUI' ELSE 'NON' END) ADDRESSE_ABSENT,
    (CASE WHEN LENGTH(TRIM(TRANSLATE(LOWER(A.ADDRESSE), 'abcdefghijklmnopqrstuvwxyz1234567890çéèàäëüïöîôûâê-./'':',''))) > 0
    OR LENGTH(TRIM(TRANSLATE(A.ADDRESSE, '1234567890-./'':',''))) = 0
    OR LENGTH(TRIM(TRANSLATE(LOWER(A.ADDRESSE), 'bcdfghjklmnpqrstvwxzç-./'':',''))) = 0
    OR LENGTH(TRIM(TRANSLATE(LOWER(A.ADDRESSE), 'aeiouéèàäëüïöîôûâê-./'':',''))) = 0
    OR LENGTH(TRIM(A.ADDRESSE)) < 2
    --OR NOT(isConsecutiveCharNormal(i.ADDRESSE,5))
    OR TRIM(LOWER(A.ADDRESSE)) IN ('n/a', 'nan', 'unknown', 'inconnue', 'sans adresse','sans','non renseignée') THEN 'OUI' ELSE 'NON' END) ADDRESSE_DOUTEUSE,
    (CASE WHEN A.TYPE_PERSONNE = '' OR A.TYPE_PERSONNE IS NULL THEN 'OUI' ELSE 'NON' END) TYPE_PERSONNE_INCONNU,
    (CASE WHEN
        NOT(A.DATE_NAISSANCE = '' OR A.DATE_NAISSANCE IS NULL ) -- date de naissance non nulle
        AND A.DATE_NAISSANCE LIKE '%-%' --AND LENGTH(A.DATE_NAISSANCE)=10
        AND if(A.DATE_NAISSANCE is NULL, CURRENT_TIMESTAMP, A.DATE_NAISSANCE) > ADD_MONTHS(CURRENT_DATE, -18 * 12) -- age < 21 au moment de la construction de la bdi
        AND (
            A.NUMERO_PIECE_TUTEUR IS NULL -- sans identité du tuteur
            OR A.NUMERO_PIECE_TUTEUR = '' -- sans identité du tuteur
            OR A.NUMERO_PIECE = A.NUMERO_PIECE_TUTEUR -- numero pièce égal numéro tuteur
            OR A.DATE_NAISSANCE_TUTEUR IS NULL -- sans date de naissance du tuteur
            OR A.DATE_NAISSANCE_TUTEUR = '' -- sans date de naissance du tuteur
            OR A.DATE_NAISSANCE_TUTEUR NOT LIKE '%-%' --OR LENGTH(A.DATE_NAISSANCE_TUTEUR)<10
            OR if (A.DATE_NAISSANCE_TUTEUR is  NULL, CURRENT_TIMESTAMP, A.DATE_NAISSANCE_TUTEUR) > ADD_MONTHS(CURRENT_DATE, -18 * 12) -- tuteur mineur
        ) THEN 'OUI' ELSE 'NON' END) MINEUR_MAL_IDENTIFIE,
        CURRENT_TIMESTAMP INSERT_DATE,
        (CASE WHEN A.ADDRESSE IS NULL THEN 'OUI' ELSE 'NON' END) ADRESSE_ABSENT,
        (CASE WHEN G.MSISDN IS NOT NULL THEN 'OUI' ELSE 'NON' END) EST_PREMIUM,
        A.TYPE_PIECE_TUTEUR,
        A.ADRESSE_TUTEUR,
        A.ACCEPTATION_CGV,
        A.CONTRAT_SOUCRIPTION,
        A.DISPONIBILITE_SCAN,
        A.PLAN_LOCALISATION,
        A.TYPE_PERSONNE TYPE_PERSONNE_I,
        A.DATE_VALIDATION_BO        ,
        A.STATUT_VALIDATION_BO      ,
        A.MOTIF_REJET_BO
FROM (
    SELECT *
    FROM
    (
        SELECT
            MSISDN,
            MAX(NUMERO_PIECE) NUMERO_PIECE,
            MAX(TYPE_PIECE) TYPE_PIECE,
            MAX(NOM) NOM,
            MAX(DATE_NAISSANCE) DATE_NAISSANCE,
            MAX(DATE_EXPIRATION) DATE_EXPIRATION,
            MAX(ADDRESSE) ADDRESSE,
            MAX(NUMERO_PIECE_TUTEUR) NUMERO_PIECE_TUTEUR,
            MAX(NOM_PARENT) NOM_PARENT,
            MAX(DATE_NAISSANCE_TUTEUR) DATE_NAISSANCE_TUTEUR,
            MAX(NOM_STRUCTURE) NOM_STRUCTURE,
            MAX(NUMERO_REGISTRE_COMMERCE) NUMERO_REGISTRE_COMMERCE,
            MAX(NUMERO_PIECE_REP_LEGAL) NUMERO_PIECE_REP_LEGAL,
            MAX(TYPE_PERSONNE) TYPE_PERSONNE,
            MAX(DATE_ACTIVATION) DATE_ACTIVATION,
            MAX(DATE_CHANGEMENT_STATUT) DATE_CHANGEMENT_STATUT,
            MAX(STATUT_BSCS) STATUT_BSCS,
            MAX(ODBINCOMINGCALLS) ODBINCOMINGCALLS,
            MAX(ODBOUTGOINGCALLS) ODBOUTGOINGCALLS,
            MAX(IMEI) IMEI,
            MAX(ADRESSE_TUTEUR) ADRESSE_TUTEUR,
            MAX(ACCEPTATION_CGV) ACCEPTATION_CGV,
            MAX(CONTRAT_SOUCRIPTION) CONTRAT_SOUCRIPTION,
            MAX(DISPONIBILITE_SCAN) DISPONIBILITE_SCAN,
            MAX(PLAN_LOCALISATION) PLAN_LOCALISATION,
            MAX(TYPE_PIECE_TUTEUR) TYPE_PIECE_TUTEUR,
            MAX(DATE_VALIDATION_BO) DATE_VALIDATION_BO,
            MAX(STATUT_VALIDATION_BO) STATUT_VALIDATION_BO,
            MAX(MOTIF_REJET_BO) MOTIF_REJET_BO,
            MAX(ORIGINAL_FILE_NAME) ORIGINAL_FILE_NAME,
            MAX(ORIGINAL_FILE_SIZE) ORIGINAL_FILE_SIZE,
            MAX(ORIGINAL_FILE_LINE_COUNT) ORIGINAL_FILE_LINE_COUNT,
            MAX(INSERT_DATE) INSERT_DATE,
            MAX(ORIGINAL_FILE_DATE) ORIGINAL_FILE_DATE
        FROM tmp.IT_BDI A
        WHERE ORIGINAL_FILE_DATE =DATE_ADD('2019-09-22' ,1)
        GROUP BY MSISDN
        --AND (MSISDN IS NOT NULL  OR LENGTH(MSISDN) <> 9)
    )a
) A
LEFT JOIN
(
    SELECT AA.*, BB.LONGITUDE, BB.LATITUDE
    FROM
    (

        SELECT
            *
        FROM (
                SELECT a.*, ROW_NUMBER() OVER (PARTITION  BY msisdn ORDER BY LAST_LOCATION_DAY DESC, insert_date desc) RN
                FROM tmp.FT_CLIENT_LAST_SITE_DAY a
                WHERE EVENT_DATE ='2019-09-22' -- (SELECT MAX(EVENT_DATE) FROM FT_CLIENT_LAST_SITE_DAY WHERE EVENT_DATE >= TRUNC(SYSDATE)-10)
            )s WHERE RN=1
    ) AA
    LEFT JOIN
    (
        SELECT *
        FROM
        (
            SELECT DISTINCT
                SITE_NAME,
                LONGITUDE,
                LATITUDE,
                ROW_NUMBER() OVER (PARTITION BY SITE_NAME ORDER BY SITE_NAME DESC) AS RANG
            FROM DIM.DT_GSM_CELL_CODE
        )a WHERE RANG = 1
        ) BB ON AA.SITE_NAME = BB.SITE_NAME
) B ON A.MSISDN = B.MSISDN
LEFT JOIN (SELECT COMMERCIAL_OFFER,OSP_CONTRACT_TYPE,OSP_ACCOUNT_TYPE,SEGMENTATION,OSP_STATUS,ACCESS_KEY FROM (SELECT * FROM MON.SPARK_FT_CONTRACT_SNAPSHOT WHERE EVENT_DATE = '2019-09-22') A LEFT JOIN DIM.DT_OFFER_PROFILES B ON A.COMMERCIAL_OFFER=B.PROFILE_CODE) C ON SUBSTR(A.MSISDN, -9, 9) = C.ACCESS_KEY
LEFT JOIN (SELECT DISTINCT MSISDN FROM DIM.DT_BDI_DEROGATION) F ON SUBSTR(A.MSISDN, -9, 9) = F.MSISDN
LEFT JOIN (SELECT DISTINCT MSISDN FROM DIM.DT_REF_SEGMENTATION_CLIENT) G ON A.MSISDN = G.MSISDN
