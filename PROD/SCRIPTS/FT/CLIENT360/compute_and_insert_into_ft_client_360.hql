add jar hdfs:///PROD/UDF/hive-udf-1.0.1.jar;
create temporary function FN_NNP_SIMPLE_DESTINATION as 'cm.orange.bigdata.udf.GetNnpSimpleDestn';
CREATE TEMPORARY FUNCTION FN_GET_OPERATOR_CODE as 'cm.orange.bigdata.udf.GetOperatorCode';
CREATE TEMPORARY FUNCTION FN_GET_NNP_MSISDN_SIMPLE_DESTN as 'cm.orange.bigdata.udf.GetNnpMsisdnSimpleDestn';
CREATE TABLE tmp.msisdn_vue_360_tmp as
SELECT
    a.MSISDN MSISDN,
    CONTRACT_TYPE,
    COMMERCIAL_OFFER,
    ACTIVATION_DATE,
    DEACTIVATION_DATE,
    LANG,
    OSP_STATUS,
    IMSI,
    GRP_LAST_OG_CALL,
    GRP_LAST_IC_CALL,
    GRP_REMAIN_CREDIT_MAIN,
    GRP_REMAIN_CREDIT_PROMO,
    GRP_GP_STATUS,
    DIR_FIRST_NAME,
    DIR_LAST_NAME,
    DIR_BIRTH_DATE,
    DIR_IDENTIFICATION_TOWN,
    DIR_IDENTIFICATION_DATE,
    EST_PRESENT_DANS_ACCOUNT_ACTIVITY,
    EST_PRESENT_DANS_DT_BASE_IDENTIF,
    EST_PRESENT_DANS_MSC,

    -- DATA
    NVL(DATA_MAIN_RATED_AMOUNT, 0) + NVL(DATA_PROMO_RATED_AMOUNT, 0) AS TOTAL_DATA_REVENUE,
    NVL(DATA_ROAM_MAIN_RATED_AMOUNT, 0) + NVL(DATA_ROAM_PROMO_RATED_AMOUNT, 0) AS ROAM_DATA_REVENUE,
    DATA_MAIN_RATED_AMOUNT,
    DATA_GOS_MAIN_RATED_AMOUNT,
    DATA_PROMO_RATED_AMOUNT,
    DATA_ROAM_MAIN_RATED_AMOUNT,
    DATA_ROAM_PROMO_RATED_AMOUNT,
    DATA_BYTES_RECEIVED,
    DATA_BYTES_SENT,
    DATA_BYTES_USED_IN_BUNDLE,
    DATA_BYTES_USED_PAYGO,
    DATA_BYTES_USED_IN_BUNDLE_ROAM,
    DATA_BYTE_USED_OUT_BUNDLE_ROAM,
    DATA_MMS_USED,
    DATA_MMS_USED_IN_BUNDLE,

    -- VOIX SMS
    NVL(TOTAL_VOICE_REVENUE, 0) + NVL(TOTAL_SMS_REVENUE, 0) + NVL(TOTAL_SUBS_REVENUE, 0) + NVL(DATA_MAIN_RATED_AMOUNT, 0) + NVL(DATA_PROMO_RATED_AMOUNT, 0) AS TOTAL_REVENUE,
    TOTAL_VOICE_REVENUE,
    TOTAL_SMS_REVENUE,
    ROAM_IN_VOICE_REVENUE,
    ROAM_OUT_VOICE_REVENUE,
    ROAM_IN_SMS_REVENUE,
    ROAM_OUT_SMS_REVENUE,
    OG_CALL_TOTAL_COUNT,
    OG_CALL_OCM_COUNT,
    OG_CALL_MTN_COUNT,
    OG_CALL_NEXTTEL_COUNT,
    OG_CALL_CAMTEL_COUNT,
    OG_CALL_SET_COUNT,
    OG_CALL_ROAM_IN_COUNT,
    OG_CALL_ROAM_OUT_COUNT,
    OG_CALL_SVA_COUNT,
    OG_CALL_INTERNATIONAL_COUNT,
    OG_RATED_CALL_DURATION,
    OG_TOTAL_CALL_DURATION,
    RATED_TEL_OCM_DURATION,
    RATED_TEL_MTN_DURATION,
    RATED_TEL_NEXTTEL_DURATION,
    RATED_TEL_CAMTEL_DURATION,
    RATED_TEL_SET_DURATION,
    RATED_TEL_ROAM_IN_DURATION,
    RATED_TEL_ROAM_OUT_DURATION,
    RATED_TEL_SVA_DURATION,
    RATED_TEL_INT_DURATION,
    MAIN_RATED_TEL_AMOUNT,
    PROMO_RATED_TEL_AMOUNT,
    OG_TOTAL_RATED_CALL_AMOUNT,
    MAIN_RATED_TEL_OCM_AMOUNT,
    MAIN_RATED_TEL_MTN_AMOUNT,
    MAIN_RATED_TEL_NEXTTEL_AMOUNT,
    MAIN_RATED_TEL_CAMTEL_AMOUNT,
    MAIN_RATED_TEL_SET_AMOUNT,
    MAIN_RATED_TEL_ROAM_IN_AMOUNT,
    MAIN_RATED_TEL_ROAM_OUT_AMOUNT,
    MAIN_RATED_TEL_SVA_AMOUNT,
    MAIN_RATED_TEL_INT_AMOUNT,
    PROMO_RATED_TEL_OCM_AMOUNT,
    PROMO_RATED_TEL_MTN_AMOUNT,
    PROMO_RATED_TEL_NEXTTEL_AMOUNT,
    PROMO_RATED_TEL_CAMTEL_AMOUNT,
    PROMO_RATED_TEL_SET_AMOUNT,
    PROMO_RATED_TEL_ROAMIN_AMOUNT,
    PROMO_RATED_TEL_ROAMOUT_AMOUNT,
    PROMO_RATED_TEL_INT_AMOUNT,
    OG_SMS_TOTAL_COUNT,
    OG_SMS_OCM_COUNT,
    OG_SMS_MTN_COUNT,
    OG_SMS_NEXTTEL_COUNT,
    OG_SMS_CAMTEL_COUNT,
    OG_SMS_SET_COUNT,
    OG_SMS_ROAM_IN_COUNT,
    OG_SMS_ROAM_OUT_COUNT,
    OG_SMS_SVA_COUNT,
    OG_SMS_INTERNATIONAL_COUNT,
    MAIN_RATED_SMS_AMOUNT,
    MAIN_RATED_SMS_OCM_AMOUNT,
    MAIN_RATED_SMS_MTN_AMOUNT,
    MAIN_RATED_SMS_NEXTTEL_AMOUNT,
    MAIN_RATED_SMS_CAMTEL_AMOUNT,
    MAIN_RATED_SMS_SET_AMOUNT,
    MAIN_RATED_SMS_ROAM_IN_AMOUNT,
    MAIN_RATED_SMS_ROAM_OUT_AMOUNT,
    MAIN_RATED_SMS_SVA_AMOUNT,
    MAIN_RATED_SMS_INT_AMOUNT,

    --LOCALISATION
    LOC_SITE_NAME,
    LOC_TOWN_NAME,
    LOC_ADMINTRATIVE_REGION,
    LOC_COMMERCIAL_REGION,

    --RECHARGE P2P
    C2S_REFILL_COUNT,
    C2S_MAIN_REFILL_AMOUNT,
    C2S_PROMO_REFILL_AMOUNT,
    P2P_REFILL_COUNT,
    P2P_REFILL_AMOUNT,
    SCRATCH_REFILL_COUNT,
    SCRATCH_MAIN_REFILL_AMOUNT,
    SCRATCH_PROMO_REFILL_AMOUNT,
    P2P_REFILL_FEES,

    --SOS CREDIT
    SOS_REIMBURSEMENT_AMOUNT,
    SOS_REIMBURSEMENT_COUNT,
    SOS_LOAN_AMOUNT,
    SOS_LOAN_COUNT,
    SOS_FEES,

    --SUBSCRIPTION
    TOTAL_SUBS_REVENUE,
    SUBS_AUTRES_COUNT,
    SUBS_AUTRES_AMOUNT,
    SUBS_VOICE_COUNT,
    SUBS_SMS_COUNT,
    SUBS_DATA_COUNT,
    SUBS_VOICE_AMOUNT,
    SUBS_SMS_AMOUNT,
    SUBS_DATA_AMOUNT,

    --INFOS SUB
    0 AS SUBS_BUNDLE_PLENTY_COUNT,
    0 AS SUBS_ORANGE_BONUS_COUNT,
    0 AS SUBS_FNF_MODIFY_COUNT,
    0 AS SUBS_DATA_2G_COUNT,
    0 AS SUBS_DATA_3G_JOUR_COUNT,
    0 AS SUBS_DATA_3G_SEMAINE_COUNT,
    0 AS SUBS_DATA_3G_MOIS_COUNT,
    0 AS SUBS_MAXI_BONUS_COUNT,
    0 AS SUBS_PRO_COUNT,
    0 AS SUBS_INTERN_JOUR_COUNT,
    0 AS SUBS_INTERN_SEMAINE_COUNT,
    0 AS SUBS_INTERN_MOIS_COUNT,
    0 AS SUBS_PACK_SMS_JOUR_COUNT,
    0 AS SUBS_PACK_SMS_SEMAINE_COUNT,
    0 AS SUBS_PACK_SMS_MOIS_COUNT,
    0 AS SUBS_WS_COUNT,
    0 AS SUBS_OBONUS_ILLIMITE_COUNT,
    0 AS SUBS_ORANGE_PHENIX_COUNT,
    0 AS SUBS_RECHARGE_PLENTY_COUNT,
    0 AS SUBS_DATA_FLYBOX_COUNT,
    0 AS SUBS_DATA_AUTRES_COUNT,
    0 AS SUBS_ROAMING_COUNT,
    0 AS SUBS_SMS_AUTRES_COUNT,
    0 AS SUBS_BUNDLE_PLENTY_AMOUNT,
    0 AS SUBS_ORANGE_BONUS_AMOUNT,
    0 AS SUBS_FNF_MODIFY_AMOUNT,
    0 AS SUBS_DATA_2G_AMOUNT,
    0 AS SUBS_DATA_3G_JOUR_AMOUNT,
    0 AS SUBS_DATA_3G_SEMAINE_AMOUNT,
    0 AS SUBS_DATA_3G_MOIS_AMOUNT,
    0 AS SUBS_MAXI_BONUS_AMOUNT,
    0 AS SUBS_PRO_AMOUNT,
    0 AS SUBS_INTERN_JOUR_AMOUNT,
    0 AS SUBS_INTERN_SEMAINE_AMOUNT,
    0 AS SUBS_INTERN_MOIS_AMOUNT,
    0 AS SUBS_PACK_SMS_JOUR_AMOUNT,
    0 AS SUBS_PACK_SMS_SEMAINE_AMOUNT,
    0 AS SUBS_PACK_SMS_MOIS_AMOUNT,
    0 AS SUBS_WS_AMOUNT,
    0 AS SUBS_OBONUS_ILLIMITE_AMOUNT,
    0 AS SUBS_ORANGE_PHENIX_AMOUNT,
    0 AS SUBS_RECHARGE_PLENTY_AMOUNT,
    0 AS SUBS_DATA_FLYBOX_AMOUNT,
    0 AS SUBS_DATA_AUTRES_AMOUNT,
    0 AS SUBS_ROAMING_AMOUNT,
    0 AS SUBS_SMS_AUTRES_AMOUNT,
    '' TER_TAC_CODE,
    '' TER_IMEI,
    '' TER_CONSTRUCTOR,
    '' TER_MODEL,
    '' TER_2G_3G_4G_COMPATIBILITY,
    '' TER_2G_COMPATIBILITY,
    '' TER_3G_COMPATIBILITY,
    '' TER_4G_COMPATIBILITY,
    '' REVENU_MOYEN,
    '' PREMIUM,
    '' CONSO_MOY_DATA,
    '' RECHARGE_MOY,
    '' PREMIUM_PLUS
FROM (
        SELECT
        NVL(a.MSISDN, b.MSISDN) AS MSISDN,
        CONTRACT_TYPE,
        COMMERCIAL_OFFER,
        ACTIVATION_DATE,
        DEACTIVATION_DATE,
        LANG,
        OSP_STATUS,
        IMSI,
        GRP_LAST_OG_CALL,
        GRP_LAST_IC_CALL,
        GRP_REMAIN_CREDIT_MAIN,
        GRP_REMAIN_CREDIT_PROMO,
        GRP_GP_STATUS,
        DIR_FIRST_NAME,
        DIR_LAST_NAME,
        DIR_BIRTH_DATE,
        DIR_IDENTIFICATION_TOWN,
        DIR_IDENTIFICATION_DATE,
        NVL(EST_PRESENT_DANS_ACCOUNT_ACTIVITY,'NON') EST_PRESENT_DANS_ACCOUNT_ACTIVITY,
        NVL(EST_PRESENT_DANS_DT_BASE_IDENTIF,'NON') EST_PRESENT_DANS_DT_BASE_IDENTIF,
        NVL(EST_PRESENT_DANS_MSC,'NON') EST_PRESENT_DANS_MSC
    FROM
    (
        SELECT
            NVL(a.MSISDN, b.MSISDN) AS MSISDN,
            CONTRACT_TYPE,
            COMMERCIAL_OFFER,
            ACTIVATION_DATE,
            DEACTIVATION_DATE,
            LANG,
            OSP_STATUS,
            IMSI,
            GRP_LAST_OG_CALL,
            GRP_LAST_IC_CALL,
            GRP_REMAIN_CREDIT_MAIN,
            GRP_REMAIN_CREDIT_PROMO,
            GRP_GP_STATUS,
            EST_PRESENT_DANS_ACCOUNT_ACTIVITY
        FROM
        (
            -- infos generales
            SELECT ACCESS_KEY MSISDN,
                OSP_CONTRACT_TYPE CONTRACT_TYPE,
                COMMERCIAL_OFFER,
                ACTIVATION_DATE,
                DEACTIVATION_DATE,
                LANG,
                OSP_STATUS,
                MAIN_IMSI IMSI
            FROM MON.FT_CONTRACT_SNAPSHOT
            WHERE EVENT_DATE = DATE_ADD('2019-10-04',1)
                AND OSP_STATUS IN ('ACTIVE', 'INACTIVE')
        ) a
        FULL JOIN
        (
            -- infos groupe
            SELECT
                MSISDN,
                OG_CALL GRP_LAST_OG_CALL,
                IC_CALL_4 GRP_LAST_IC_CALL,
                REMAIN_CREDIT_MAIN GRP_REMAIN_CREDIT_MAIN,
                REMAIN_CREDIT_PROMO GRP_REMAIN_CREDIT_PROMO,
                GP_STATUS GRP_GP_STATUS,
                'OUI' EST_PRESENT_DANS_ACCOUNT_ACTIVITY
            FROM MON.FT_ACCOUNT_ACTIVITY
            WHERE EVENT_DATE = DATE_ADD('2019-10-04',1)
        ) b  ON a.MSISDN = b.MSISDN
    ) a
    FULL JOIN (
        SELECT
             NVL(a.MSISDN,b.MSISDN) MSISDN,
             DIR_FIRST_NAME,
             DIR_LAST_NAME,
             DIR_BIRTH_DATE,
             DIR_IDENTIFICATION_TOWN,
             DIR_IDENTIFICATION_DATE,
             EST_PRESENT_DANS_DT_BASE_IDENTIF,
             EST_PRESENT_DANS_MSC
        FROM
        (
            SELECT
                MSISDN,
                PRENOM AS DIR_FIRST_NAME,
                NOM AS DIR_LAST_NAME,
                NEE_LE AS DIR_BIRTH_DATE,
                VILLE_VILLAGE AS DIR_IDENTIFICATION_TOWN,
                TO_DATE(DATE_IDENTIFICATION) AS DIR_IDENTIFICATION_DATE,
                'OUI' EST_PRESENT_DANS_DT_BASE_IDENTIF
            FROM MON.BACKUP_DT_BASE_IDENTIFICATION WHERE PROCESSING_DATE='2019-10-04'
        )a
        FULL JOIN (
            SELECT
                MSISDN,
                'OUI' EST_PRESENT_DANS_MSC
            FROM MON.FT_OG_IC_CALL_SNAPSHOT
            WHERE EVENT_DATE='2019-10-04' AND FN_NNP_SIMPLE_DESTINATION (MSISDN)='OCM'
        )b on a.MSISDN = b.MSISDN
    )b on a.MSISDN = b.MSISDN
    WHERE  NVL(a.MSISDN, b.MSISDN) IS NOT NULL
)a
LEFT JOIN  (
    SELECT
        MSISDN,
        NVL(MAIN_RATED_AMOUNT, 0) AS DATA_MAIN_RATED_AMOUNT,
        NVL(GOS_DEBIT_AMOUNT, 0) AS DATA_GOS_MAIN_RATED_AMOUNT,
        NVL(PROMO_RATED_AMOUNT, 0) AS DATA_PROMO_RATED_AMOUNT,
        NVL(MAIN_RATED_AMOUNT_ROAMING, 0) AS DATA_ROAM_MAIN_RATED_AMOUNT,
        NVL(PROMO_RATED_AMOUNT_ROAMING, 0) AS DATA_ROAM_PROMO_RATED_AMOUNT,
        NVL(BYTES_RECEIVED, 0) AS DATA_BYTES_RECEIVED,
        NVL(BYTES_SENT, 0) AS DATA_BYTES_SENT,
        NVL(BYTES_USED_IN_BUNDLE, 0) AS DATA_BYTES_USED_IN_BUNDLE,
        NVL(BYTES_USED_OUT_BUNDLE, 0) AS DATA_BYTES_USED_PAYGO,
        NVL(BYTES_USED_IN_BUNDLE_ROAMING, 0) AS DATA_BYTES_USED_IN_BUNDLE_ROAM,
        NVL(BYTES_USED_OUT_BUNDLE_ROAMING, 0) AS DATA_BYTE_USED_OUT_BUNDLE_ROAM,
        NVL(MMS_COUNT, 0) AS DATA_MMS_USED,
        NVL(BUNDLE_MMS_USED_VOLUME, 0) AS DATA_MMS_USED_IN_BUNDLE
    FROM MON.FT_DATA_CONSO_MSISDN_DAY
    WHERE EVENT_DATE = '2019-10-04'
)b on a.MSISDN = b.MSISDN
LEFT JOIN (
    SELECT
        MSISDN,
        NVL(CONSO_TEL, 0) AS TOTAL_VOICE_REVENUE,
        NVL(CONSO_SMS, 0) AS TOTAL_SMS_REVENUE,
        NVL(INROAM_MAIN_TEL_CONSO, 0) AS ROAM_IN_VOICE_REVENUE,
        NVL(ROAM_MAIN_TEL_CONSO, 0) AS ROAM_OUT_VOICE_REVENUE,
        NVL(INROAM_SMS_CONSO, 0) AS ROAM_IN_SMS_REVENUE,
        NVL(ROAM_SMS_CONSO, 0) AS ROAM_OUT_SMS_REVENUE,
        NVL(TEL_COUNT, 0) AS OG_CALL_TOTAL_COUNT,
        NVL(ONNET_TEL_COUNT, 0) AS OG_CALL_OCM_COUNT,
        NVL(MTN_TEL_COUNT, 0) AS OG_CALL_MTN_COUNT,
        NVL(NEXTTEL_TEL_COUNT, 0) AS OG_CALL_NEXTTEL_COUNT,
        NVL(CAMTEL_TEL_COUNT, 0) AS OG_CALL_CAMTEL_COUNT,
        NVL(SET_TEL_COUNT, 0) AS OG_CALL_SET_COUNT,
        NVL(INROAM_TEL_COUNT, 0) AS OG_CALL_ROAM_IN_COUNT,
        NVL(ROAM_TEL_COUNT, 0) AS OG_CALL_ROAM_OUT_COUNT,
        NVL(SVA_TEL_COUNT, 0) AS OG_CALL_SVA_COUNT,
        NVL(INTERNATIONAL_TEL_COUNT, 0) AS OG_CALL_INTERNATIONAL_COUNT,
        NVL(BILLED_TEL_DURATION, 0) AS OG_RATED_CALL_DURATION,
        NVL(TEL_DURATION, 0) AS OG_TOTAL_CALL_DURATION,
        NVL(ONNET_DURATION, 0) AS RATED_TEL_OCM_DURATION,
        NVL(MTN_BILLED_TEL_DURATION, 0) AS RATED_TEL_MTN_DURATION,
        NVL(NEXTTEL_BILLED_TEL_DURATION, 0) AS RATED_TEL_NEXTTEL_DURATION,
        NVL(CAMTEL_BILLED_TEL_DURATION, 0) AS RATED_TEL_CAMTEL_DURATION,
        NVL(SET_BILLED_TEL_DURATION, 0) AS RATED_TEL_SET_DURATION,
        NVL(INROAM_BILLED_TEL_DURATION, 0) AS RATED_TEL_ROAM_IN_DURATION,
        NVL(ROAM_BILLED_TEL_DURATION, 0) AS RATED_TEL_ROAM_OUT_DURATION,
        NVL(SVA_BILLED_DURATION, 0) AS RATED_TEL_SVA_DURATION,
        NVL(INTERNATIONAL_BIL_TEL_DURATION, 0) AS RATED_TEL_INT_DURATION,
        NVL(CONSO_TEL_MAIN, 0) AS MAIN_RATED_TEL_AMOUNT,
        NVL(CONSO_TEL, 0) - NVL(CONSO_TEL_MAIN, 0) AS PROMO_RATED_TEL_AMOUNT,
        NVL(CONSO_TEL, 0) AS OG_TOTAL_RATED_CALL_AMOUNT,
        NVL(ONNET_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_OCM_AMOUNT,
        NVL(MTN_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_MTN_AMOUNT,
        NVL(NEXTTEL_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_NEXTTEL_AMOUNT,
        NVL(CAMTEL_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_CAMTEL_AMOUNT,
        NVL(SET_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_SET_AMOUNT,
        NVL(INROAM_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_ROAM_IN_AMOUNT,
        NVL(ROAM_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_ROAM_OUT_AMOUNT,
        NVL(SVA_BILLED_TEL_CONSO, 0) AS MAIN_RATED_TEL_SVA_AMOUNT,
        NVL(INTERNATIONAL_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_INT_AMOUNT,
        NVL(ONNET_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_OCM_AMOUNT,
        NVL(MTN_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_MTN_AMOUNT,
        NVL(NEXTTEL_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_NEXTTEL_AMOUNT,
        NVL(CAMTEL_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_CAMTEL_AMOUNT,
        NVL(SET_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_SET_AMOUNT,
        NVL(INROAM_MAIN_TEL_CONSO, 0) AS PROMO_RATED_TEL_ROAMIN_AMOUNT,
        NVL(ROAM_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_ROAMOUT_AMOUNT,
        NVL(INTERNATIONAL_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_INT_AMOUNT,
        NVL(SMS_COUNT, 0) AS OG_SMS_TOTAL_COUNT,
        NVL(ONNET_SMS_COUNT, 0) AS OG_SMS_OCM_COUNT,
        NVL(MTN_SMS_COUNT, 0) AS OG_SMS_MTN_COUNT,
        NVL(NEXTTEL_SMS_COUNT, 0) AS OG_SMS_NEXTTEL_COUNT,
        NVL(CAMTEL_SMS_COUNT, 0) AS OG_SMS_CAMTEL_COUNT,
        NVL(SET_SMS_COUNT, 0) AS OG_SMS_SET_COUNT,
        NVL(INROAM_SMS_COUNT, 0) AS OG_SMS_ROAM_IN_COUNT,
        NVL(ROAM_SMS_COUNT, 0) AS OG_SMS_ROAM_OUT_COUNT,
        NVL(SVA_SMS_COUNT, 0) AS OG_SMS_SVA_COUNT,
        NVL(INTERNATIONAL_SMS_COUNT, 0) AS OG_SMS_INTERNATIONAL_COUNT,
        NVL(MAIN_CALL_COST-(CONSO_TEL_MAIN+OTHERS_VAS_MAIN_COST), 0) AS MAIN_RATED_SMS_AMOUNT,
        NVL(ONNET_SMS_CONSO, 0) AS MAIN_RATED_SMS_OCM_AMOUNT,
        NVL(MTN_SMS_CONSO, 0) AS MAIN_RATED_SMS_MTN_AMOUNT,
        NVL(NEXTTEL_SMS_CONSO, 0) AS MAIN_RATED_SMS_NEXTTEL_AMOUNT,
        NVL(CAMTEL_SMS_CONSO, 0) AS MAIN_RATED_SMS_CAMTEL_AMOUNT,
        NVL(SET_SMS_CONSO, 0) AS MAIN_RATED_SMS_SET_AMOUNT,
        NVL(INROAM_SMS_CONSO, 0) AS MAIN_RATED_SMS_ROAM_IN_AMOUNT,
        NVL(ROAM_SMS_CONSO, 0) AS MAIN_RATED_SMS_ROAM_OUT_AMOUNT,
        NVL(SVA_SMS_CONSO, 0) AS MAIN_RATED_SMS_SVA_AMOUNT,
        NVL(INTERNATIONAL_SMS_CONSO, 0) AS MAIN_RATED_SMS_INT_AMOUNT
    FROM TMP.FT_CONSO_MSISDN_DAY
    WHERE EVENT_DATE = '2019-10-04'
)c on a.MSISDN = c.MSISDN
LEFT JOIN
(
    SELECT
        (CASE
            WHEN LENGTH(MSISDN) = 13 AND substr(MSISDN,1,3) = '160' AND FN_GET_NNP_MSISDN_SIMPLE_DESTN(MSISDN) IN ('MTN','VIETTEL','OCM') THEN SUBSTR(MSISDN,-9)
            ELSE MSISDN
        END) MSISDN,
        SITE_NAME AS LOC_SITE_NAME,
        TOWNNAME AS LOC_TOWN_NAME,
        ADMINISTRATIVE_REGION AS LOC_ADMINTRATIVE_REGION,
        COMMERCIAL_REGION AS LOC_COMMERCIAL_REGION
    FROM MON.FT_CLIENT_LAST_SITE_DAY
    WHERE EVENT_DATE = '2019-10-02'
    AND FN_GET_OPERATOR_CODE(MSISDN) IN ('SET', 'OCM')
)d on a.MSISDN=d.MSISDN
LEFT JOIN
(
    SELECT
        NVL(a.MSISDN, b.MSISDN) AS MSISDN,
        NVL(C2S_REFILL_COUNT, 0) AS C2S_REFILL_COUNT,
        NVL(C2S_MAIN_REFILL_AMOUNT, 0) AS C2S_MAIN_REFILL_AMOUNT,
        NVL(C2S_PROMO_REFILL_AMOUNT, 0) AS C2S_PROMO_REFILL_AMOUNT,
        NVL(P2P_REFILL_COUNT, 0) AS P2P_REFILL_COUNT,
        NVL(P2P_REFILL_AMOUNT, 0) AS P2P_REFILL_AMOUNT,
        NVL(SCRATCH_REFILL_COUNT, 0) AS SCRATCH_REFILL_COUNT,
        NVL(SCRATCH_MAIN_REFILL_AMOUNT, 0) AS SCRATCH_MAIN_REFILL_AMOUNT,
        NVL(SCRATCH_PROMO_REFILL_AMOUNT, 0) AS SCRATCH_PROMO_REFILL_AMOUNT,
        NVL(P2P_REFILL_FEES, 0) AS P2P_REFILL_FEES
    FROM
    (
        --C2S et SCRATCH
        SELECT
            RECEIVER_MSISDN MSISDN
            ,SUM(CASE WHEN REFILL_MEAN='C2S' THEN 1 ELSE 0 END ) C2S_REFILL_COUNT
            ,SUM(CASE WHEN REFILL_MEAN='C2S' THEN REFILL_AMOUNT ELSE 0 END ) C2S_MAIN_REFILL_AMOUNT
            ,SUM(CASE WHEN REFILL_MEAN='C2S' THEN REFILL_BONUS ELSE 0 END ) C2S_PROMO_REFILL_AMOUNT
            ,SUM(CASE WHEN REFILL_MEAN='SCRATCH' THEN 1 ELSE 0 end ) SCRATCH_REFILL_COUNT
            ,SUM(CASE WHEN REFILL_MEAN='SCRATCH' THEN REFILL_AMOUNT ELSE 0 END ) SCRATCH_MAIN_REFILL_AMOUNT
            ,SUM(CASE WHEN REFILL_MEAN='SCRATCH' THEN REFILL_BONUS ELSE 0 END ) SCRATCH_PROMO_REFILL_AMOUNT
        FROM MON.FT_REFILL
        WHERE REFILL_DATE = '2019-10-04'
            AND TERMINATION_IND='200'
        GROUP BY RECEIVER_MSISDN
    ) a
    FULL JOIN
    (
        --P2P
        SELECT
            RECEIVER_MSISDN MSISDN
            ,COUNT(*) P2P_REFILL_COUNT
            ,SUM(TRANSFER_AMT) P2P_REFILL_AMOUNT
            ,SUM(TRANSFER_FEES) P2P_REFILL_FEES
        FROM MON.FT_CREDIT_TRANSFER
        WHERE REFILL_DATE = '2019-10-04'
            AND TERMINATION_IND='000'
        GROUP BY RECEIVER_MSISDN
    ) b ON a.MSISDN = b.MSISDN
)e ON a.MSISDN = e.MSISDN
LEFT JOIN
(
    SELECT
        SERVED_PARTY_MSISDN AS MSISDN,
        SUM(CASE WHEN OPERATION_TYPE = 'REIMBURSMENT' THEN REFILL_AMOUNT ELSE 0 END) AS SOS_REIMBURSEMENT_AMOUNT,
        SUM(CASE WHEN OPERATION_TYPE = 'REIMBURSMENT' THEN 1 ELSE 0 END) AS SOS_REIMBURSEMENT_COUNT,
        SUM(CASE WHEN OPERATION_TYPE = 'LOAN' THEN LOAN_AMOUNT ELSE 0 END) AS SOS_LOAN_AMOUNT,
        SUM(CASE WHEN OPERATION_TYPE = 'LOAN' THEN 1 ELSE 0 END) AS SOS_LOAN_COUNT,
        SUM(FEE) AS SOS_FEES
    FROM MON.FT_OVERDRAFT
    WHERE TRANSACTION_DATE = '2019-10-04'
    GROUP BY SERVED_PARTY_MSISDN
)f on a.MSISDN=f.MSISDN
LEFT JOIN
(
    SELECT
        MSISDN,
        nvl(TOTAL_SUBS_AMOUNT, 0) AS TOTAL_SUBS_REVENUE
    FROM MON.FT_SUBSCRIPTION_MSISDN_DAY
    WHERE EVENT_DATE = '2019-10-04'
)g on a.MSISDN=g.MSISDN
LEFT JOIN (
     -- Souscriptions
    SELECT
        MSISDN,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'AUTRES' THEN NBRE_SUBS ELSE 0 END)  AS SUBS_AUTRES_COUNT,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'AUTRES' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_AUTRES_AMOUNT,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'VOIX' THEN NBRE_SUBS ELSE 0 END) AS SUBS_VOICE_COUNT,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'SMS' THEN NBRE_SUBS ELSE 0 END) AS SUBS_SMS_COUNT,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'DATA' THEN NBRE_SUBS ELSE 0 END) AS SUBS_DATA_COUNT,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'VOIX' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_VOICE_AMOUNT,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'SMS' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_SMS_AMOUNT,
        SUM(CASE WHEN UPPER(USAGE_MKT) = 'DATA' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_DATA_AMOUNT
    FROM
    (
        SELECT
            MSISDN,
            nvl(USAGE_MKT, 'AUTRES') AS USAGE_MKT,
            SUM(TOTAL_OCCURENCE) AS NBRE_SUBS,
            SUM(RATED_AMOUNT) AS RATED_AMOUNT
        FROM
        (
            SELECT
                SERVED_PARTY_MSISDN AS MSISDN,
                SUBSCRIPTION_SERVICE_DETAILS,
                TOTAL_OCCURENCE,
                RATED_AMOUNT
            FROM MON.FT_SUBSCRIPTION
            WHERE TRANSACTION_DATE = '2019-10-04'
        ) a
        LEFT JOIN
        (
            SELECT EVENT, USAGE_MKT
            FROM DIM.DT_SERVICES
        ) b
            ON a.SUBSCRIPTION_SERVICE_DETAILS = b.EVENT
        GROUP BY MSISDN, nvl(USAGE_MKT, 'AUTRES')
    )a GROUP BY MSISDN
)h on a.MSISDN=h.MSISDN