add jar hdfs:///PROD/UDF/hive-udf-1.0.1.jar;
create temporary function FN_NNP_SIMPLE_DESTINATION as 'cm.orange.bigdata.udf.GetNnpSimpleDestn';
CREATE TEMPORARY FUNCTION FN_GET_OPERATOR_CODE as 'cm.orange.bigdata.udf.GetOperatorCode';
CREATE TEMPORARY FUNCTION FN_GET_NNP_MSISDN_SIMPLE_DESTN as 'cm.orange.bigdata.udf.GetNnpMsisdnSimpleDestn';
set hive.vectorized.execution.enabled=false;
set hive.auto.convert.join=false;
INSERT INTO MON.FT_CLIENT_360 PARTITION(EVENT_DATE)
--create table tmp.FT_CLIENT_360 as
SELECT
    MSISDN,
    CURRENT_DATE DATE_PREMIERE_ACTIVATION, --Ã  revoir
    TYPE_PIECE,
    NUMERO_PIECE,
    SEX,
    DIR_FIRST_NAME,
    DIR_LAST_NAME,
    DATE_NAISSANCE,
    LANG,
    DATE_EXPIRATION,
    ADDRESSE,
    NUMERO_PIECE_TUTEUR,
    NOM_PARENT,
    DATE_NAISSANCE_TUTEUR,
    NOM_STRUCTURE,
    NUMERO_REGISTRE_COMMERCE,
    NUMERO_PIECE_REP_LEGAL,
    DIR_IDENTIFICATION_TOWN,
    DIR_IDENTIFICATION_DATE,
    ACTIVATION_DATE,
    DEACTIVATION_DATE,
    DATE_CHANGEMENT_STATUT,
    STATUT_DEROGATION,
    STATUT_BSCS,
    OSP_STATUS,
    ODBINCOMINGCALLS,
    ODBOUTGOINGCALLS,
    REGION_ADMINISTRATIVE,
    REGION_COMMERCIALE,
    SITE_NAME,
    VILLE,
    LONGITUDE,
    LATITUDE,
    OFFRE_COMMERCIALE,
    TYPE_CONTRAT,
    SEGMENTATION,
    IMSI,
    IMEI,
    DATA_VIA_OM,
    TER_TAC_CODE,
    TER_CONSTRUCTOR,
    TER_MODEL,
    TER_2G_3G_4G_COMPATIBILITY,
    TER_2G_COMPATIBILITY,
    TER_3G_COMPATIBILITY,
    TER_4G_COMPATIBILITY,
    GRP_GP_STATUS,
    GRP_LAST_OG_CALL,
    GRP_LAST_IC_CALL,
    GRP_REMAIN_CREDIT_MAIN,
    GRP_REMAIN_CREDIT_PROMO,
    DATA_MAIN_RATED_AMOUNT,
    DATA_GOS_MAIN_RATED_AMOUNT,
    DATA_PROMO_RATED_AMOUNT,
    DATA_ROAM_MAIN_RATED_AMOUNT,
    DATA_ROAM_PROMO_RATED_AMOUNT,
    DATA_BYTES_RECEIVED,
    DATA_BYTES_SENT,
    DATA_BYTES_USED_IN_BUNDLE,
    DATA_BYTES_USED_PAYGO,
    DATA_BYTES_USED_IN_BUNDLE_ROAM,
    DATA_BYTE_USED_OUT_BUNDLE_ROAM,
    DATA_MMS_USED,
    DATA_MMS_USED_IN_BUNDLE,
    SOS_LOAN_COUNT,
    SOS_LOAN_AMOUNT,
    SOS_REIMBURSEMENT_COUNT,
    SOS_REIMBURSEMENT_AMOUNT,
    SOS_FEES,
    TOTAL_REVENUE,
    TOTAL_VOICE_REVENUE,
    TOTAL_SMS_REVENUE,
    TOTAL_SUBS_REVENUE,
    C2S_REFILL_COUNT,
    C2S_MAIN_REFILL_AMOUNT,
    C2S_PROMO_REFILL_AMOUNT,
    P2P_REFILL_COUNT,
    P2P_REFILL_AMOUNT,
    P2P_REFILL_FEES,
    SCRATCH_REFILL_COUNT,
    SCRATCH_MAIN_REFILL_AMOUNT,
    SCRATCH_PROMO_REFILL_AMOUNT,
    TOTAL_DATA_REVENUE,
    ROAM_DATA_REVENUE,
    ROAM_IN_VOICE_REVENUE,
    ROAM_OUT_VOICE_REVENUE,
    ROAM_IN_SMS_REVENUE,
    ROAM_OUT_SMS_REVENUE,
    OG_CALL_TOTAL_COUNT,
    OG_CALL_OCM_COUNT,
    OG_CALL_MTN_COUNT,
    OG_CALL_NEXTTEL_COUNT,
    OG_CALL_CAMTEL_COUNT,
    OG_CALL_SET_COUNT,
    OG_CALL_ROAM_IN_COUNT,
    OG_CALL_ROAM_OUT_COUNT,
    OG_CALL_SVA_COUNT,
    OG_CALL_INTERNATIONAL_COUNT,
    OG_RATED_CALL_DURATION,
    OG_TOTAL_CALL_DURATION,
    RATED_TEL_OCM_DURATION,
    RATED_TEL_MTN_DURATION,
    RATED_TEL_NEXTTEL_DURATION,
    RATED_TEL_CAMTEL_DURATION,
    RATED_TEL_SET_DURATION,
    RATED_TEL_ROAM_IN_DURATION,
    RATED_TEL_ROAM_OUT_DURATION,
    RATED_TEL_SVA_DURATION,
    RATED_TEL_INT_DURATION,
    MAIN_RATED_TEL_AMOUNT,
    PROMO_RATED_TEL_AMOUNT,
    OG_TOTAL_RATED_CALL_AMOUNT,
    MAIN_RATED_TEL_OCM_AMOUNT,
    MAIN_RATED_TEL_MTN_AMOUNT,
    MAIN_RATED_TEL_NEXTTEL_AMOUNT,
    MAIN_RATED_TEL_CAMTEL_AMOUNT,
    MAIN_RATED_TEL_SET_AMOUNT,
    MAIN_RATED_TEL_ROAM_IN_AMOUNT,
    MAIN_RATED_TEL_ROAM_OUT_AMOUNT,
    MAIN_RATED_TEL_SVA_AMOUNT,
    MAIN_RATED_TEL_INT_AMOUNT,
    PROMO_RATED_TEL_OCM_AMOUNT,
    PROMO_RATED_TEL_MTN_AMOUNT,
    PROMO_RATED_TEL_NEXTTEL_AMOUNT,
    PROMO_RATED_TEL_CAMTEL_AMOUNT,
    PROMO_RATED_TEL_SET_AMOUNT,
    PROMO_RATED_TEL_ROAMIN_AMOUNT,
    PROMO_RATED_TEL_ROAMOUT_AMOUNT,
    PROMO_RATED_TEL_INT_AMOUNT,
    OG_SMS_TOTAL_COUNT,
    OG_SMS_OCM_COUNT,
    OG_SMS_MTN_COUNT,
    OG_SMS_NEXTTEL_COUNT,
    OG_SMS_CAMTEL_COUNT,
    OG_SMS_SET_COUNT,
    OG_SMS_ROAM_IN_COUNT,
    OG_SMS_ROAM_OUT_COUNT,
    OG_SMS_SVA_COUNT,
    OG_SMS_INTERNATIONAL_COUNT,
    MAIN_RATED_SMS_AMOUNT,
    MAIN_RATED_SMS_OCM_AMOUNT,
    MAIN_RATED_SMS_MTN_AMOUNT,
    MAIN_RATED_SMS_NEXTTEL_AMOUNT,
    MAIN_RATED_SMS_CAMTEL_AMOUNT,
    MAIN_RATED_SMS_SET_AMOUNT,
    MAIN_RATED_SMS_ROAM_IN_AMOUNT,
    MAIN_RATED_SMS_ROAM_OUT_AMOUNT,
    MAIN_RATED_SMS_SVA_AMOUNT,
    MAIN_RATED_SMS_INT_AMOUNT,
    SUBS_BUNDLE_PLENTY_COUNT,
    SUBS_ORANGE_BONUS_COUNT,
    SUBS_FNF_MODIFY_COUNT,
    SUBS_DATA_2G_COUNT,
    SUBS_DATA_3G_JOUR_COUNT,
    SUBS_DATA_3G_SEMAINE_COUNT,
    SUBS_DATA_3G_MOIS_COUNT,
    SUBS_MAXI_BONUS_COUNT,
    SUBS_PRO_COUNT,
    SUBS_INTERN_JOUR_COUNT,
    SUBS_INTERN_SEMAINE_COUNT,
    SUBS_INTERN_MOIS_COUNT,
    SUBS_PACK_SMS_JOUR_COUNT,
    SUBS_PACK_SMS_SEMAINE_COUNT,
    SUBS_PACK_SMS_MOIS_COUNT,
    SUBS_WS_COUNT,
    SUBS_OBONUS_ILLIMITE_COUNT,
    SUBS_ORANGE_PHENIX_COUNT,
    SUBS_RECHARGE_PLENTY_COUNT,
    SUBS_AUTRES_COUNT,
    SUBS_DATA_FLYBOX_COUNT,
    SUBS_DATA_AUTRES_COUNT,
    SUBS_ROAMING_COUNT,
    SUBS_SMS_AUTRES_COUNT,
    SUBS_BUNDLE_PLENTY_AMOUNT,
    SUBS_ORANGE_BONUS_AMOUNT,
    SUBS_FNF_MODIFY_AMOUNT,
    SUBS_DATA_2G_AMOUNT,
    SUBS_DATA_3G_JOUR_AMOUNT,
    SUBS_DATA_3G_SEMAINE_AMOUNT,
    SUBS_DATA_3G_MOIS_AMOUNT,
    SUBS_MAXI_BONUS_AMOUNT,
    SUBS_PRO_AMOUNT,
    SUBS_INTERN_JOUR_AMOUNT,
    SUBS_INTERN_SEMAINE_AMOUNT,
    SUBS_INTERN_MOIS_AMOUNT,
    SUBS_PACK_SMS_JOUR_AMOUNT,
    SUBS_PACK_SMS_SEMAINE_AMOUNT,
    SUBS_PACK_SMS_MOIS_AMOUNT,
    SUBS_WS_AMOUNT,
    SUBS_OBONUS_ILLIMITE_AMOUNT,
    SUBS_ORANGE_PHENIX_AMOUNT,
    SUBS_RECHARGE_PLENTY_AMOUNT,
    SUBS_AUTRES_AMOUNT,
    SUBS_DATA_FLYBOX_AMOUNT,
    SUBS_DATA_AUTRES_AMOUNT,
    SUBS_ROAMING_AMOUNT,
    SUBS_SMS_AUTRES_AMOUNT,
    SUBS_VOICE_COUNT,
    SUBS_SMS_COUNT,
    SUBS_DATA_COUNT,
    SUBS_VOICE_AMOUNT,
    SUBS_SMS_AMOUNT,
    SUBS_DATA_AMOUNT,
    REVENU_MOYEN,
    PREMIUM,
    CONSO_MOY_DATA,
    RECHARGE_MOY,
    PREMIUM_PLUS,
    STATUT_IN,
    NUMERO_PIECE_ABSENT,
    NUMERO_PIECE_TUT_ABSENT,
    NUMERO_PIECE_INF_4,
    NUMERO_PIECE_TUT_INF_4,
    NUMERO_PIECE_NON_AUTHORISE,
    NUMERO_PIECE_TUT_NON_AUTH,
    NUMERO_PIECE_EGALE_MSISDN,
    NUMERO_PIECE_TUT_EGALE_MSISDN,
    NUMERO_PIECE_A_CARACT_NON_AUTH,
    NUMERO_PIECE_TUT_CARAC_NON_A,
    NUMERO_PIECE_UNIQUEMENT_LETTRE,
    NUMERO_PIECE_TUT_UNIQ_LETTRE,
    NOM_ABSENT,
    NOM_PARENT_ABSENT,
    NOM_DOUTEUX,
    NOM_PARENT_DOUTEUX,
    DATE_NAISSANCE_ABSENT,
    DATE_NAISSANCE_TUT_ABSENT,
    DATE_EXPIRATION_ABSENT,
    ADDRESSE_ABSENT,
    ADDRESSE_DOUTEUSE,
    TYPE_PERSONNE_INCONNU,
    MINEUR_MAL_IDENTIFIE,
    TYPE_PERSONNE,
    NULL DATE_ACQUISITION, -- A REVOIR
    DATE_NAISSANCE_DOUTEUX,
    DATE_NAISSANCE_TUT_DOUTEUX,
    DATE_EXPIRATION_DOUTEUSE,
    CNI_EXPIRE,
    MULTI_SIM,
    NULL EST_PRESENT_OM,-- A REVOIR
    EST_PRESENT_ZEB,
    EST_PRESENT_ART,
    EST_PRESENT_GP,
    EST_PRESENT_OCM,
    NULL EST_ACTIF_OM,-- A REVOIR
    EST_CLIENT_VIP,
    NULL EST_ACTIF_DATA,-- A REVOIR
    CONFORM_OCM_P_MORALE_M2M,
    CONFORM_ART_P_MORALE_M2M,
    CONFORM_OCM_P_MORALE_FLOTTE,
    CONFORM_ART_P_MORALE_FLOTTE,
    CONFORM_OCM_P_PHY_MAJEUR,
    CONFORM_ART_P_PHY_MAJEUR,
    CONFORM_OCM_P_PHY_MINEUR,
    CONFORM_ART_P_PHY_MINEUR,
    EST_SUSPENDU,
    NOM_STRUCTURE_ABSENT,
    NUMERO_REGISTRE_ABSENT,
    NUMERO_REGISTRE_DOUTEUX,
    CONFORME_ART,
    CONFORME_OCM,
    IMEI_ABSENT,
    ADRESSE_ABSENT,
    EST_PREMIUM,
    ADRESSE_TUTEUR,
    TYPE_PIECE_TUTEUR,
    ACCEPTATION_CGV,
    CONTRAT_SOUCRIPTION,
    DISPONIBILITE_SCAN,
    PLAN_LOCALISATION,
    PROFESSION_IDENTIFICATEUR,
    DATE_VALIDATION_BO,
    STATUT_VALIDATION_BO,
    MOTIF_REJET_BO,
    STATUT_VALIDATION_BOO,

    -- DISTRIBUTION
    INSCRIPTEUR,
    MIDATEDEP,
    MTT_DEPOT,
    NB_DEPOT,
    IDSPEC,
    FIRSTDEPOT,
    FIRSTTRAN,
    DEST_TRAN,
    SERV_TRAN,
    MIDATETR,
    MTT_TRANS,
    NB_TRANSACTION,
    REG_LEVEL,
    SEUIL_OK,
    AUTO_INSCRIPTION,
    BOUCLE_P2P,
    DOUBLE_PROFIL,
    BOUCLE,
    CONFORMITE,

    --SOS CREDIT
    ED_AMOUNT,
    ED_TRANSACTION_TYPE,
    ED_BYTES_OBTAINED,
    ED_CONTACT_CHANNEL,
    --OMNY
    OMNY_TRANSACTION_AMOUNT,
    OMNY_COMMISSIONS_PAID,
    OMNY_COMMISSIONS_RECEIVED,
    OMNY_COMMISSIONS_OTHERS,
    OMNY_SERVICE_CHARGE_RECEIVED,
    OMNY_SERVICE_CHARGE_PAID,
    OMNY_TAXES,
    OMNY_SERVICE_TYPE,
    OMNY_SENDER_PRE_BAL,
    OMNY_SENDER_POST_BAL,
    OMNY_RECEIVER_PRE_BAL,
    OMNY_RECEIVER_POST_BAL,
    CURRENT_TIMESTAMP INSERT_DATE,
    '2019-09-22' EVENT_DATE
FROM(
    SELECT
        a.MSISDN MSISDN,
        CONTRACT_TYPE,
        COMMERCIAL_OFFER,
        ACTIVATION_DATE,
        DEACTIVATION_DATE,
        LANG,
        OSP_STATUS,
        IMSI,
        GRP_LAST_OG_CALL,
        GRP_LAST_IC_CALL,
        GRP_REMAIN_CREDIT_MAIN,
        GRP_REMAIN_CREDIT_PROMO,
        GRP_GP_STATUS,

        -- ANNUAIRE
        DIR_FIRST_NAME,
        DIR_LAST_NAME,
        DIR_BIRTH_DATE,
        DIR_IDENTIFICATION_TOWN,
        DIR_IDENTIFICATION_DATE,
        PROFESSION_IDENTIFICATEUR,
        SEX,
        EST_PRESENT_DANS_ACCOUNT_ACTIVITY,
        EST_PRESENT_DANS_DT_BASE_IDENTIF,
        EST_PRESENT_DANS_MSC,

        -- DATA
        NVL(DATA_MAIN_RATED_AMOUNT, 0) + NVL(DATA_PROMO_RATED_AMOUNT, 0) AS TOTAL_DATA_REVENUE,
        NVL(DATA_ROAM_MAIN_RATED_AMOUNT, 0) + NVL(DATA_ROAM_PROMO_RATED_AMOUNT, 0) AS ROAM_DATA_REVENUE,
        DATA_MAIN_RATED_AMOUNT,
        DATA_GOS_MAIN_RATED_AMOUNT,
        DATA_PROMO_RATED_AMOUNT,
        DATA_ROAM_MAIN_RATED_AMOUNT,
        DATA_ROAM_PROMO_RATED_AMOUNT,
        DATA_BYTES_RECEIVED,
        DATA_BYTES_SENT,
        DATA_BYTES_USED_IN_BUNDLE,
        DATA_BYTES_USED_PAYGO,
        DATA_BYTES_USED_IN_BUNDLE_ROAM,
        DATA_BYTE_USED_OUT_BUNDLE_ROAM,
        DATA_MMS_USED,
        DATA_MMS_USED_IN_BUNDLE,


        -- VOIX SMS
        TOTAL_SUBS_REVENUE,
        NVL(TOTAL_VOICE_REVENUE, 0) + NVL(TOTAL_SMS_REVENUE, 0) + NVL(TOTAL_SUBS_REVENUE, 0) + NVL(DATA_MAIN_RATED_AMOUNT, 0) + NVL(DATA_PROMO_RATED_AMOUNT, 0) AS TOTAL_REVENUE,
        TOTAL_VOICE_REVENUE,
        TOTAL_SMS_REVENUE,
        ROAM_IN_VOICE_REVENUE,
        ROAM_OUT_VOICE_REVENUE,
        ROAM_IN_SMS_REVENUE,
        ROAM_OUT_SMS_REVENUE,
        OG_CALL_TOTAL_COUNT,
        OG_CALL_OCM_COUNT,
        OG_CALL_MTN_COUNT,
        OG_CALL_NEXTTEL_COUNT,
        OG_CALL_CAMTEL_COUNT,
        OG_CALL_SET_COUNT,
        OG_CALL_ROAM_IN_COUNT,
        OG_CALL_ROAM_OUT_COUNT,
        OG_CALL_SVA_COUNT,
        OG_CALL_INTERNATIONAL_COUNT,
        OG_RATED_CALL_DURATION,
        OG_TOTAL_CALL_DURATION,
        RATED_TEL_OCM_DURATION,
        RATED_TEL_MTN_DURATION,
        RATED_TEL_NEXTTEL_DURATION,
        RATED_TEL_CAMTEL_DURATION,
        RATED_TEL_SET_DURATION,
        RATED_TEL_ROAM_IN_DURATION,
        RATED_TEL_ROAM_OUT_DURATION,
        RATED_TEL_SVA_DURATION,
        RATED_TEL_INT_DURATION,
        MAIN_RATED_TEL_AMOUNT,
        PROMO_RATED_TEL_AMOUNT,
        OG_TOTAL_RATED_CALL_AMOUNT,
        MAIN_RATED_TEL_OCM_AMOUNT,
        MAIN_RATED_TEL_MTN_AMOUNT,
        MAIN_RATED_TEL_NEXTTEL_AMOUNT,
        MAIN_RATED_TEL_CAMTEL_AMOUNT,
        MAIN_RATED_TEL_SET_AMOUNT,
        MAIN_RATED_TEL_ROAM_IN_AMOUNT,
        MAIN_RATED_TEL_ROAM_OUT_AMOUNT,
        MAIN_RATED_TEL_SVA_AMOUNT,
        MAIN_RATED_TEL_INT_AMOUNT,
        PROMO_RATED_TEL_OCM_AMOUNT,
        PROMO_RATED_TEL_MTN_AMOUNT,
        PROMO_RATED_TEL_NEXTTEL_AMOUNT,
        PROMO_RATED_TEL_CAMTEL_AMOUNT,
        PROMO_RATED_TEL_SET_AMOUNT,
        PROMO_RATED_TEL_ROAMIN_AMOUNT,
        PROMO_RATED_TEL_ROAMOUT_AMOUNT,
        PROMO_RATED_TEL_INT_AMOUNT,
        OG_SMS_TOTAL_COUNT,
        OG_SMS_OCM_COUNT,
        OG_SMS_MTN_COUNT,
        OG_SMS_NEXTTEL_COUNT,
        OG_SMS_CAMTEL_COUNT,
        OG_SMS_SET_COUNT,
        OG_SMS_ROAM_IN_COUNT,
        OG_SMS_ROAM_OUT_COUNT,
        OG_SMS_SVA_COUNT,
        OG_SMS_INTERNATIONAL_COUNT,
        MAIN_RATED_SMS_AMOUNT,
        MAIN_RATED_SMS_OCM_AMOUNT,
        MAIN_RATED_SMS_MTN_AMOUNT,
        MAIN_RATED_SMS_NEXTTEL_AMOUNT,
        MAIN_RATED_SMS_CAMTEL_AMOUNT,
        MAIN_RATED_SMS_SET_AMOUNT,
        MAIN_RATED_SMS_ROAM_IN_AMOUNT,
        MAIN_RATED_SMS_ROAM_OUT_AMOUNT,
        MAIN_RATED_SMS_SVA_AMOUNT,
        MAIN_RATED_SMS_INT_AMOUNT,


        --LOCALISATION
        LOC_SITE_NAME,
        LOC_TOWN_NAME,
        LOC_ADMINTRATIVE_REGION,
        LOC_COMMERCIAL_REGION,

        --RECHARGE P2P
        C2S_REFILL_COUNT,
        C2S_MAIN_REFILL_AMOUNT,
        C2S_PROMO_REFILL_AMOUNT,
        P2P_REFILL_COUNT,
        P2P_REFILL_AMOUNT,
        SCRATCH_REFILL_COUNT,
        SCRATCH_MAIN_REFILL_AMOUNT,
        SCRATCH_PROMO_REFILL_AMOUNT,
        P2P_REFILL_FEES,

        --SOS CREDIT
        SOS_REIMBURSEMENT_AMOUNT,
        SOS_REIMBURSEMENT_COUNT,
        SOS_LOAN_AMOUNT,
        SOS_LOAN_COUNT,
        SOS_FEES,


        --INFOS SUB
        SUBS_AUTRES_COUNT,
        SUBS_AUTRES_AMOUNT,
        SUBS_VOICE_COUNT,
        SUBS_SMS_COUNT,
        SUBS_DATA_COUNT,
        SUBS_VOICE_AMOUNT,
        SUBS_SMS_AMOUNT,
        SUBS_DATA_AMOUNT,

        0 AS SUBS_BUNDLE_PLENTY_COUNT,
        0 AS SUBS_ORANGE_BONUS_COUNT,
        0 AS SUBS_FNF_MODIFY_COUNT,
        0 AS SUBS_DATA_2G_COUNT,
        0 AS SUBS_DATA_3G_JOUR_COUNT,
        0 AS SUBS_DATA_3G_SEMAINE_COUNT,
        0 AS SUBS_DATA_3G_MOIS_COUNT,
        0 AS SUBS_MAXI_BONUS_COUNT,
        0 AS SUBS_PRO_COUNT,
        0 AS SUBS_INTERN_JOUR_COUNT,
        0 AS SUBS_INTERN_SEMAINE_COUNT,
        0 AS SUBS_INTERN_MOIS_COUNT,
        0 AS SUBS_PACK_SMS_JOUR_COUNT,
        0 AS SUBS_PACK_SMS_SEMAINE_COUNT,
        0 AS SUBS_PACK_SMS_MOIS_COUNT,
        0 AS SUBS_WS_COUNT,
        0 AS SUBS_OBONUS_ILLIMITE_COUNT,
        0 AS SUBS_ORANGE_PHENIX_COUNT,
        0 AS SUBS_RECHARGE_PLENTY_COUNT,
        0 AS SUBS_DATA_FLYBOX_COUNT,
        0 AS SUBS_DATA_AUTRES_COUNT,
        0 AS SUBS_ROAMING_COUNT,
        0 AS SUBS_SMS_AUTRES_COUNT,
        0 AS SUBS_BUNDLE_PLENTY_AMOUNT,
        0 AS SUBS_ORANGE_BONUS_AMOUNT,
        0 AS SUBS_FNF_MODIFY_AMOUNT,
        0 AS SUBS_DATA_2G_AMOUNT,
        0 AS SUBS_DATA_3G_JOUR_AMOUNT,
        0 AS SUBS_DATA_3G_SEMAINE_AMOUNT,
        0 AS SUBS_DATA_3G_MOIS_AMOUNT,
        0 AS SUBS_MAXI_BONUS_AMOUNT,
        0 AS SUBS_PRO_AMOUNT,
        0 AS SUBS_INTERN_JOUR_AMOUNT,
        0 AS SUBS_INTERN_SEMAINE_AMOUNT,
        0 AS SUBS_INTERN_MOIS_AMOUNT,
        0 AS SUBS_PACK_SMS_JOUR_AMOUNT,
        0 AS SUBS_PACK_SMS_SEMAINE_AMOUNT,
        0 AS SUBS_PACK_SMS_MOIS_AMOUNT,
        0 AS SUBS_WS_AMOUNT,
        0 AS SUBS_OBONUS_ILLIMITE_AMOUNT,
        0 AS SUBS_ORANGE_PHENIX_AMOUNT,
        0 AS SUBS_RECHARGE_PLENTY_AMOUNT,
        0 AS SUBS_DATA_FLYBOX_AMOUNT,
        0 AS SUBS_DATA_AUTRES_AMOUNT,
        0 AS SUBS_ROAMING_AMOUNT,
        0 AS SUBS_SMS_AUTRES_AMOUNT,

        DATA_VIA_OM,

        TER_TAC_CODE,
        TER_IMEI,
        TER_CONSTRUCTOR,
        TER_MODEL,
        TER_2G_3G_4G_COMPATIBILITY,
        TER_2G_COMPATIBILITY,
        TER_3G_COMPATIBILITY,
        TER_4G_COMPATIBILITY,
        '' REVENU_MOYEN,
        '' PREMIUM,
        '' CONSO_MOY_DATA,
        '' RECHARGE_MOY,
        '' PREMIUM_PLUS,


         -- DISTRIBUTION
        INSCRIPTEUR,
        MIDATEDEP,
        MTT_DEPOT,
        NB_DEPOT,
        IDSPEC,
        FIRSTDEPOT,
        FIRSTTRAN,
        DEST_TRAN,
        SERV_TRAN,
        MIDATETR,
        MTT_TRANS,
        NB_TRANSACTION,
        REG_LEVEL,
        SEUIL_OK,
        AUTO_INSCRIPTION,
        BOUCLE_P2P,
        DOUBLE_PROFIL,
        BOUCLE,
        CONFORMITE,

        --k.EVENT_DATE    EVENT_DATE,
        --k.MSISDN    MSISDN,
        k.TYPE_PIECE    TYPE_PIECE,
        k.NUMERO_PIECE    NUMERO_PIECE,
        -- k.NOM    NOM,
        k.DATE_NAISSANCE    DATE_NAISSANCE,
        k.DATE_EXPIRATION    DATE_EXPIRATION,
        k.ADDRESSE    ADDRESSE,
        k.NUMERO_PIECE_TUTEUR    NUMERO_PIECE_TUTEUR,
        k.NOM_PARENT    NOM_PARENT,
        k.DATE_NAISSANCE_TUTEUR    DATE_NAISSANCE_TUTEUR,
        k.NOM_STRUCTURE    NOM_STRUCTURE,
        k.NUMERO_REGISTRE_COMMERCE    NUMERO_REGISTRE_COMMERCE,
        k.NUMERO_PIECE_REP_LEGAL    NUMERO_PIECE_REP_LEGAL,
        k.DATE_ACTIVATION    DATE_ACTIVATION,
        k.DATE_CHANGEMENT_STATUT    DATE_CHANGEMENT_STATUT,
        k.STATUT_BSCS    STATUT_BSCS,
        k.ODBINCOMINGCALLS    ODBINCOMINGCALLS,
        k.ODBOUTGOINGCALLS    ODBOUTGOINGCALLS,
        k.IMEI    IMEI,
        k.STATUT_DEROGATION    STATUT_DEROGATION,
        k.REGION_ADMINISTRATIVE    REGION_ADMINISTRATIVE,
        k.REGION_COMMERCIALE    REGION_COMMERCIALE,
        k.SITE_NAME    SITE_NAME,
        k.VILLE    VILLE,
        k.LONGITUDE    LONGITUDE,
        k.LATITUDE    LATITUDE,
        k.OFFRE_COMMERCIALE    OFFRE_COMMERCIALE,
        k.TYPE_CONTRAT    TYPE_CONTRAT,
        k.SEGMENTATION    SEGMENTATION,
        --k.REV_M_3    REV_M_3,
        --k.REV_M_2    REV_M_2,
        --k.REV_M_1    REV_M_1,
        --k.REV_MOY    REV_MOY,
        k.STATUT_IN    STATUT_IN,
        k.NUMERO_PIECE_ABSENT    NUMERO_PIECE_ABSENT,
        k.NUMERO_PIECE_TUT_ABSENT    NUMERO_PIECE_TUT_ABSENT,
        k.NUMERO_PIECE_INF_4    NUMERO_PIECE_INF_4,
        k.NUMERO_PIECE_TUT_INF_4    NUMERO_PIECE_TUT_INF_4,
        k.NUMERO_PIECE_NON_AUTHORISE    NUMERO_PIECE_NON_AUTHORISE,
        k.NUMERO_PIECE_TUT_NON_AUTH    NUMERO_PIECE_TUT_NON_AUTH,
        k.NUMERO_PIECE_EGALE_MSISDN    NUMERO_PIECE_EGALE_MSISDN,
        k.NUMERO_PIECE_TUT_EGALE_MSISDN    NUMERO_PIECE_TUT_EGALE_MSISDN,
        k.NUMERO_PIECE_A_CARACT_NON_AUTH    NUMERO_PIECE_A_CARACT_NON_AUTH,
        k.NUMERO_PIECE_TUT_CARAC_NON_A    NUMERO_PIECE_TUT_CARAC_NON_A,
        k.NUMERO_PIECE_UNIQUEMENT_LETTRE    NUMERO_PIECE_UNIQUEMENT_LETTRE,
        k.NUMERO_PIECE_TUT_UNIQ_LETTRE    NUMERO_PIECE_TUT_UNIQ_LETTRE,
        k.NOM_ABSENT    NOM_ABSENT,
        k.NOM_PARENT_ABSENT    NOM_PARENT_ABSENT,
        k.NOM_DOUTEUX    NOM_DOUTEUX,
        k.NOM_PARENT_DOUTEUX    NOM_PARENT_DOUTEUX,
        k.DATE_NAISSANCE_ABSENT    DATE_NAISSANCE_ABSENT,
        k.DATE_NAISSANCE_TUT_ABSENT    DATE_NAISSANCE_TUT_ABSENT,
        k.DATE_EXPIRATION_ABSENT    DATE_EXPIRATION_ABSENT,
        k.ADDRESSE_ABSENT    ADDRESSE_ABSENT,
        k.ADDRESSE_DOUTEUSE    ADDRESSE_DOUTEUSE,
        k.TYPE_PERSONNE_INCONNU    TYPE_PERSONNE_INCONNU,
        k.MINEUR_MAL_IDENTIFIE    MINEUR_MAL_IDENTIFIE,
        --k.INSERT_DATE    INSERT_DATE,
        k.TYPE_PERSONNE    TYPE_PERSONNE,
        --k.DATE_ACQUISITION    DATE_ACQUISITION,
        k.DATE_NAISSANCE_DOUTEUX    DATE_NAISSANCE_DOUTEUX,
        k.DATE_NAISSANCE_TUT_DOUTEUX    DATE_NAISSANCE_TUT_DOUTEUX,
        k.DATE_EXPIRATION_DOUTEUSE    DATE_EXPIRATION_DOUTEUSE,
        k.CNI_EXPIRE    CNI_EXPIRE,
        k.MULTI_SIM    MULTI_SIM,
        --k.EST_PRESENT_OM    EST_PRESENT_OM,
        k.EST_PRESENT_ZEB    EST_PRESENT_ZEB,
        k.EST_PRESENT_ART    EST_PRESENT_ART,
        k.EST_PRESENT_GP    EST_PRESENT_GP,
        k.EST_PRESENT_OCM    EST_PRESENT_OCM,
        --k.EST_ACTIF_OM    EST_ACTIF_OM,
        k.EST_CLIENT_VIP    EST_CLIENT_VIP,
        -- k.REV_OM_M_3    REV_OM_M_3,
        --k.REV_OM_M_2    REV_OM_M_2,
        --k.REV_OM_M_1    REV_OM_M_1,
        --k.EST_ACTIF_DATA    EST_ACTIF_DATA,
        --k.TRAFFIC_DATA_M_3    TRAFFIC_DATA_M_3,
        --k.TRAFFIC_DATA_M_2    TRAFFIC_DATA_M_2,
        --k.TRAFFIC_DATA_M_1    TRAFFIC_DATA_M_1
        k.CONFORM_OCM_P_MORALE_M2M    CONFORM_OCM_P_MORALE_M2M,
        k.CONFORM_ART_P_MORALE_M2M    CONFORM_ART_P_MORALE_M2M,
        k.CONFORM_OCM_P_MORALE_FLOTTE    CONFORM_OCM_P_MORALE_FLOTTE,
        k.CONFORM_ART_P_MORALE_FLOTTE    CONFORM_ART_P_MORALE_FLOTTE,
        k.CONFORM_OCM_P_PHY_MAJEUR    CONFORM_OCM_P_PHY_MAJEUR,
        k.CONFORM_ART_P_PHY_MAJEUR    CONFORM_ART_P_PHY_MAJEUR,
        k.CONFORM_OCM_P_PHY_MINEUR    CONFORM_OCM_P_PHY_MINEUR,
        k.CONFORM_ART_P_PHY_MINEUR    CONFORM_ART_P_PHY_MINEUR,
        k.EST_SUSPENDU    EST_SUSPENDU,
        k.NOM_STRUCTURE_ABSENT    NOM_STRUCTURE_ABSENT,
        k.NUMERO_REGISTRE_ABSENT    NUMERO_REGISTRE_ABSENT,
        k.NUMERO_REGISTRE_DOUTEUX    NUMERO_REGISTRE_DOUTEUX,
        (case
            when k.TYPE_PERSONNE is  NULL then k.CONFORM_ART_P_PHY_MAJEUR
            when k.TYPE_PERSONNE ='MAJEUR' then k.CONFORM_ART_P_PHY_MAJEUR
            when k.TYPE_PERSONNE='PP' then  k.CONFORM_ART_P_PHY_MAJEUR
            when k.TYPE_PERSONNE ='MINEUR' then  k.CONFORM_ART_P_PHY_MINEUR
            when k.TYPE_PERSONNE ='PERSONNE_MORALE' then k.CONFORM_ART_P_MORALE_FLOTTE
            when k.TYPE_PERSONNE ='MACHINE_2_MACHINE' then  k.CONFORM_ART_P_MORALE_M2M
            else k.TYPE_PERSONNE
        end)  CONFORME_ART,
        (case
            when k.TYPE_PERSONNE is  NULL then k.CONFORM_ART_P_PHY_MAJEUR
            when k.TYPE_PERSONNE ='MAJEUR' then k.CONFORM_ART_P_PHY_MAJEUR
            when k.TYPE_PERSONNE ='PP' then k.CONFORM_OCM_P_PHY_MAJEUR
            when k.TYPE_PERSONNE ='MINEUR' then k.CONFORM_OCM_P_PHY_MINEUR
            when k.TYPE_PERSONNE ='PERSONNE_MORALE' then k.CONFORM_OCM_P_MORALE_FLOTTE
            when k.TYPE_PERSONNE ='MACHINE_2_MACHINE' then k.CONFORM_OCM_P_MORALE_M2M
            else  k.TYPE_PERSONNE
        end) CONFORME_OCM,
        k.IMEI_ABSENT    IMEI_ABSENT,
        k.ADRESSE_ABSENT    ADRESSE_ABSENT,
        k.EST_PREMIUM    EST_PREMIUM,
        k.ADRESSE_TUTEUR    ADRESSE_TUTEUR,
        k.TYPE_PIECE_TUTEUR     TYPE_PIECE_TUTEUR,
        k.ACCEPTATION_CGV   ACCEPTATION_CGV,
        k.CONTRAT_SOUCRIPTION   CONTRAT_SOUCRIPTION,
        k.DISPONIBILITE_SCAN    DISPONIBILITE_SCAN,
        k.PLAN_LOCALISATION     PLAN_LOCALISATION,
        --B.IDENTIFICATEUR IDENTIFICATEUR,
        --B.PROFESSION_IDENTIFICATEUR PROFESSION_IDENTIFICATEUR,
        k.DATE_VALIDATION_BO        ,
        k.STATUT_VALIDATION_BO      ,
        k.MOTIF_REJET_BO ,
        (Case
            when k.STATUT_VALIDATION_BO='1'   then 'VERIFIE ET VALIDE'
            when k.STATUT_VALIDATION_BO='3'    then 'VERIFIE ET CORRIGE'
            when k.STATUT_VALIDATION_BO= '-1'  then 'VERIFIE ET NON CONFORME NIVEAU 1'
            when k.STATUT_VALIDATION_BO= '-2'  then 'VERIFIE ET NON CONFORME NIVEAU 2'
            when k.STATUT_VALIDATION_BO= '-3'  then 'VERIFIE ET NON CONFORME NIVEAU 3'
            when k.STATUT_VALIDATION_BO= '-4'  then 'PRET POUR LA SUSPENSION'
            when k.STATUT_VALIDATION_BO= '-5'  then 'SUSPENDU APPEL SORTANT BO'
            when k.STATUT_VALIDATION_BO= '-6'  then 'SUSPENDU HORS BO'
            when k.STATUT_VALIDATION_BO= '-7'  then 'MODIFIER AVANT LA SUSPENSION'
            else 'NON VERIFIE'
        end) STATUT_VALIDATION_BOO,

        --OMNY
        OMNY_TRANSACTION_AMOUNT,
        OMNY_COMMISSIONS_PAID,
        OMNY_COMMISSIONS_RECEIVED,
        OMNY_COMMISSIONS_OTHERS,
        OMNY_SERVICE_CHARGE_RECEIVED,
        OMNY_SERVICE_CHARGE_PAID,
        OMNY_TAXES,
        OMNY_SERVICE_TYPE,
        OMNY_SENDER_PRE_BAL,
        OMNY_SENDER_POST_BAL,
        OMNY_RECEIVER_PRE_BAL,
        OMNY_RECEIVER_POST_BAL,

        --SOS DATA
        ED_AMOUNT,
        ED_TRANSACTION_TYPE,
        ED_BYTES_OBTAINED,
        ED_CONTACT_CHANNEL

    FROM (
            SELECT
            NVL(a.MSISDN, b.MSISDN) AS MSISDN,
            CONTRACT_TYPE,
            COMMERCIAL_OFFER,
            ACTIVATION_DATE,
            DEACTIVATION_DATE,
            LANG,
            OSP_STATUS,
            IMSI,
            GRP_LAST_OG_CALL,
            GRP_LAST_IC_CALL,
            GRP_REMAIN_CREDIT_MAIN,
            GRP_REMAIN_CREDIT_PROMO,
            GRP_GP_STATUS,
            DIR_FIRST_NAME,
            DIR_LAST_NAME,
            DIR_BIRTH_DATE,
            DIR_IDENTIFICATION_TOWN,
            DIR_IDENTIFICATION_DATE,
            PROFESSION_IDENTIFICATEUR,
            SEX,
            NVL(EST_PRESENT_DANS_ACCOUNT_ACTIVITY,'NON') EST_PRESENT_DANS_ACCOUNT_ACTIVITY,
            NVL(EST_PRESENT_DANS_DT_BASE_IDENTIF,'NON') EST_PRESENT_DANS_DT_BASE_IDENTIF,
            NVL(EST_PRESENT_DANS_MSC,'NON') EST_PRESENT_DANS_MSC
        FROM
        (
            SELECT
                NVL(a.MSISDN, b.MSISDN) AS MSISDN,
                CONTRACT_TYPE,
                COMMERCIAL_OFFER,
                ACTIVATION_DATE,
                DEACTIVATION_DATE,
                LANG,
                OSP_STATUS,
                IMSI,
                GRP_LAST_OG_CALL,
                GRP_LAST_IC_CALL,
                GRP_REMAIN_CREDIT_MAIN,
                GRP_REMAIN_CREDIT_PROMO,
                GRP_GP_STATUS,
                EST_PRESENT_DANS_ACCOUNT_ACTIVITY
            FROM
            (
                -- infos generales
                SELECT
                    ACCESS_KEY MSISDN,
                    OSP_CONTRACT_TYPE CONTRACT_TYPE,
                    COMMERCIAL_OFFER,
                    ACTIVATION_DATE,
                    DEACTIVATION_DATE,
                    LANG,
                    OSP_STATUS,
                    MAIN_IMSI IMSI
                FROM MON.FT_CONTRACT_SNAPSHOT
                WHERE EVENT_DATE = DATE_ADD('2019-09-22',1)
                    AND OSP_STATUS IN ('ACTIVE', 'INACTIVE')
            ) a
            FULL JOIN
            (
                -- infos groupe
                SELECT
                    MSISDN,
                    OG_CALL GRP_LAST_OG_CALL,
                    IC_CALL_4 GRP_LAST_IC_CALL,
                    REMAIN_CREDIT_MAIN GRP_REMAIN_CREDIT_MAIN,
                    REMAIN_CREDIT_PROMO GRP_REMAIN_CREDIT_PROMO,
                    GP_STATUS GRP_GP_STATUS,
                    'OUI' EST_PRESENT_DANS_ACCOUNT_ACTIVITY
                FROM MON.FT_ACCOUNT_ACTIVITY
                WHERE EVENT_DATE = DATE_ADD('2019-09-22',1)
            ) b  ON a.MSISDN = b.MSISDN
        ) a
        FULL JOIN (
            SELECT
                 NVL(a.MSISDN,b.MSISDN) MSISDN,
                 DIR_FIRST_NAME,
                 DIR_LAST_NAME,
                 DIR_BIRTH_DATE,
                 DIR_IDENTIFICATION_TOWN,
                 DIR_IDENTIFICATION_DATE,
                 EST_PRESENT_DANS_DT_BASE_IDENTIF,
                 PROFESSION_IDENTIFICATEUR,
                 SEX,
                 EST_PRESENT_DANS_MSC
            FROM
            (
                SELECT
                    MSISDN,
                    PRENOM AS DIR_FIRST_NAME,
                    NOM AS DIR_LAST_NAME,
                    NEE_LE AS DIR_BIRTH_DATE,
                    VILLE_VILLAGE AS DIR_IDENTIFICATION_TOWN,
                    TO_DATE(DATE_IDENTIFICATION) AS DIR_IDENTIFICATION_DATE,
                    PROFESSION_IDENTIFICATEUR,
                    genre sex,
                    'OUI' EST_PRESENT_DANS_DT_BASE_IDENTIF
                FROM tmp.BACKUP_DT_BASE_IDENTIFICATION WHERE backup_date= date_add('2019-09-22',1)
            )a
            FULL JOIN (
                SELECT
                    MSISDN,
                    'OUI' EST_PRESENT_DANS_MSC
                FROM TMP.FT_OG_IC_CALL_SNAPSHOT
                WHERE EVENT_DATE=date_add('2019-09-22',1) AND FN_NNP_SIMPLE_DESTINATION (MSISDN)='OCM'
            )b on a.MSISDN = b.MSISDN
        )b on a.MSISDN = b.MSISDN
        WHERE  NVL(a.MSISDN, b.MSISDN) IS NOT NULL
    )a
    LEFT JOIN  (
        SELECT
            MSISDN,
            NVL(MAIN_RATED_AMOUNT, 0) AS DATA_MAIN_RATED_AMOUNT,
            NVL(GOS_DEBIT_AMOUNT, 0) AS DATA_GOS_MAIN_RATED_AMOUNT,
            NVL(PROMO_RATED_AMOUNT, 0) AS DATA_PROMO_RATED_AMOUNT,
            NVL(MAIN_RATED_AMOUNT_ROAMING, 0) AS DATA_ROAM_MAIN_RATED_AMOUNT,
            NVL(PROMO_RATED_AMOUNT_ROAMING, 0) AS DATA_ROAM_PROMO_RATED_AMOUNT,
            NVL(BYTES_RECEIVED, 0) AS DATA_BYTES_RECEIVED,
            NVL(BYTES_SENT, 0) AS DATA_BYTES_SENT,
            NVL(BYTES_USED_IN_BUNDLE, 0) AS DATA_BYTES_USED_IN_BUNDLE,
            NVL(BYTES_USED_OUT_BUNDLE, 0) AS DATA_BYTES_USED_PAYGO,
            NVL(BYTES_USED_IN_BUNDLE_ROAMING, 0) AS DATA_BYTES_USED_IN_BUNDLE_ROAM,
            NVL(BYTES_USED_OUT_BUNDLE_ROAMING, 0) AS DATA_BYTE_USED_OUT_BUNDLE_ROAM,
            NVL(MMS_COUNT, 0) AS DATA_MMS_USED,
            NVL(BUNDLE_MMS_USED_VOLUME, 0) AS DATA_MMS_USED_IN_BUNDLE
        FROM tmp.FT_DATA_CONSO_MSISDN_DAY
        WHERE EVENT_DATE = '2019-09-22'
    )b on a.MSISDN = b.MSISDN
    LEFT JOIN (
        SELECT
            MSISDN,
            NVL(CONSO_TEL, 0) AS TOTAL_VOICE_REVENUE,
            NVL(CONSO_SMS, 0) AS TOTAL_SMS_REVENUE,
            NVL(INROAM_MAIN_TEL_CONSO, 0) AS ROAM_IN_VOICE_REVENUE,
            NVL(ROAM_MAIN_TEL_CONSO, 0) AS ROAM_OUT_VOICE_REVENUE,
            NVL(INROAM_SMS_CONSO, 0) AS ROAM_IN_SMS_REVENUE,
            NVL(ROAM_SMS_CONSO, 0) AS ROAM_OUT_SMS_REVENUE,
            NVL(TEL_COUNT, 0) AS OG_CALL_TOTAL_COUNT,
            NVL(ONNET_TEL_COUNT, 0) AS OG_CALL_OCM_COUNT,
            NVL(MTN_TEL_COUNT, 0) AS OG_CALL_MTN_COUNT,
            NVL(NEXTTEL_TEL_COUNT, 0) AS OG_CALL_NEXTTEL_COUNT,
            NVL(CAMTEL_TEL_COUNT, 0) AS OG_CALL_CAMTEL_COUNT,
            NVL(SET_TEL_COUNT, 0) AS OG_CALL_SET_COUNT,
            NVL(INROAM_TEL_COUNT, 0) AS OG_CALL_ROAM_IN_COUNT,
            NVL(ROAM_TEL_COUNT, 0) AS OG_CALL_ROAM_OUT_COUNT,
            NVL(SVA_TEL_COUNT, 0) AS OG_CALL_SVA_COUNT,
            NVL(INTERNATIONAL_TEL_COUNT, 0) AS OG_CALL_INTERNATIONAL_COUNT,
            NVL(BILLED_TEL_DURATION, 0) AS OG_RATED_CALL_DURATION,
            NVL(TEL_DURATION, 0) AS OG_TOTAL_CALL_DURATION,
            NVL(ONNET_DURATION, 0) AS RATED_TEL_OCM_DURATION,
            NVL(MTN_BILLED_TEL_DURATION, 0) AS RATED_TEL_MTN_DURATION,
            NVL(NEXTTEL_BILLED_TEL_DURATION, 0) AS RATED_TEL_NEXTTEL_DURATION,
            NVL(CAMTEL_BILLED_TEL_DURATION, 0) AS RATED_TEL_CAMTEL_DURATION,
            NVL(SET_BILLED_TEL_DURATION, 0) AS RATED_TEL_SET_DURATION,
            NVL(INROAM_BILLED_TEL_DURATION, 0) AS RATED_TEL_ROAM_IN_DURATION,
            NVL(ROAM_BILLED_TEL_DURATION, 0) AS RATED_TEL_ROAM_OUT_DURATION,
            NVL(SVA_BILLED_DURATION, 0) AS RATED_TEL_SVA_DURATION,
            NVL(INTERNATIONAL_BIL_TEL_DURATION, 0) AS RATED_TEL_INT_DURATION,
            NVL(CONSO_TEL_MAIN, 0) AS MAIN_RATED_TEL_AMOUNT,
            NVL(CONSO_TEL, 0) - NVL(CONSO_TEL_MAIN, 0) AS PROMO_RATED_TEL_AMOUNT,
            NVL(CONSO_TEL, 0) AS OG_TOTAL_RATED_CALL_AMOUNT,
            NVL(ONNET_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_OCM_AMOUNT,
            NVL(MTN_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_MTN_AMOUNT,
            NVL(NEXTTEL_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_NEXTTEL_AMOUNT,
            NVL(CAMTEL_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_CAMTEL_AMOUNT,
            NVL(SET_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_SET_AMOUNT,
            NVL(INROAM_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_ROAM_IN_AMOUNT,
            NVL(ROAM_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_ROAM_OUT_AMOUNT,
            NVL(SVA_BILLED_TEL_CONSO, 0) AS MAIN_RATED_TEL_SVA_AMOUNT,
            NVL(INTERNATIONAL_MAIN_TEL_CONSO, 0) AS MAIN_RATED_TEL_INT_AMOUNT,
            NVL(ONNET_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_OCM_AMOUNT,
            NVL(MTN_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_MTN_AMOUNT,
            NVL(NEXTTEL_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_NEXTTEL_AMOUNT,
            NVL(CAMTEL_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_CAMTEL_AMOUNT,
            NVL(SET_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_SET_AMOUNT,
            NVL(INROAM_MAIN_TEL_CONSO, 0) AS PROMO_RATED_TEL_ROAMIN_AMOUNT,
            NVL(ROAM_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_ROAMOUT_AMOUNT,
            NVL(INTERNATIONAL_PROMO_TEL_CONSO, 0) AS PROMO_RATED_TEL_INT_AMOUNT,
            NVL(SMS_COUNT, 0) AS OG_SMS_TOTAL_COUNT,
            NVL(ONNET_SMS_COUNT, 0) AS OG_SMS_OCM_COUNT,
            NVL(MTN_SMS_COUNT, 0) AS OG_SMS_MTN_COUNT,
            NVL(NEXTTEL_SMS_COUNT, 0) AS OG_SMS_NEXTTEL_COUNT,
            NVL(CAMTEL_SMS_COUNT, 0) AS OG_SMS_CAMTEL_COUNT,
            NVL(SET_SMS_COUNT, 0) AS OG_SMS_SET_COUNT,
            NVL(INROAM_SMS_COUNT, 0) AS OG_SMS_ROAM_IN_COUNT,
            NVL(ROAM_SMS_COUNT, 0) AS OG_SMS_ROAM_OUT_COUNT,
            NVL(SVA_SMS_COUNT, 0) AS OG_SMS_SVA_COUNT,
            NVL(INTERNATIONAL_SMS_COUNT, 0) AS OG_SMS_INTERNATIONAL_COUNT,
            NVL(MAIN_CALL_COST-(CONSO_TEL_MAIN+OTHERS_VAS_MAIN_COST), 0) AS MAIN_RATED_SMS_AMOUNT,
            NVL(ONNET_SMS_CONSO, 0) AS MAIN_RATED_SMS_OCM_AMOUNT,
            NVL(MTN_SMS_CONSO, 0) AS MAIN_RATED_SMS_MTN_AMOUNT,
            NVL(NEXTTEL_SMS_CONSO, 0) AS MAIN_RATED_SMS_NEXTTEL_AMOUNT,
            NVL(CAMTEL_SMS_CONSO, 0) AS MAIN_RATED_SMS_CAMTEL_AMOUNT,
            NVL(SET_SMS_CONSO, 0) AS MAIN_RATED_SMS_SET_AMOUNT,
            NVL(INROAM_SMS_CONSO, 0) AS MAIN_RATED_SMS_ROAM_IN_AMOUNT,
            NVL(ROAM_SMS_CONSO, 0) AS MAIN_RATED_SMS_ROAM_OUT_AMOUNT,
            NVL(SVA_SMS_CONSO, 0) AS MAIN_RATED_SMS_SVA_AMOUNT,
            NVL(INTERNATIONAL_SMS_CONSO, 0) AS MAIN_RATED_SMS_INT_AMOUNT
        FROM TMP.FT_CONSO_MSISDN_DAY
        WHERE EVENT_DATE = '2019-09-22'
    )c on a.MSISDN = c.MSISDN
    LEFT JOIN
    (
        SELECT
            (CASE
                WHEN LENGTH(MSISDN) = 13 AND substr(MSISDN,1,3) = '160' AND FN_GET_NNP_MSISDN_SIMPLE_DESTN(MSISDN) IN ('MTN','VIETTEL','OCM') THEN SUBSTR(MSISDN,-9)
                ELSE MSISDN
            END) MSISDN,
            SITE_NAME AS LOC_SITE_NAME,
            TOWNNAME AS LOC_TOWN_NAME,
            ADMINISTRATIVE_REGION AS LOC_ADMINTRATIVE_REGION,
            COMMERCIAL_REGION AS LOC_COMMERCIAL_REGION
        FROM (
                SELECT
                    a.*,
                    ROW_NUMBER() OVER (PARTITION  BY msisdn ORDER BY LAST_LOCATION_DAY DESC, insert_date desc) RN
                FROM TMP.FT_CLIENT_LAST_SITE_DAY a
                WHERE EVENT_DATE = '2019-09-22'
        )a WHERE RN=1
        AND FN_GET_OPERATOR_CODE(MSISDN) IN ('SET', 'OCM')
    )d on a.MSISDN=d.MSISDN
    LEFT JOIN
    (
        SELECT
            NVL(a.MSISDN, b.MSISDN) AS MSISDN,
            NVL(C2S_REFILL_COUNT, 0) AS C2S_REFILL_COUNT,
            NVL(C2S_MAIN_REFILL_AMOUNT, 0) AS C2S_MAIN_REFILL_AMOUNT,
            NVL(C2S_PROMO_REFILL_AMOUNT, 0) AS C2S_PROMO_REFILL_AMOUNT,
            NVL(P2P_REFILL_COUNT, 0) AS P2P_REFILL_COUNT,
            NVL(P2P_REFILL_AMOUNT, 0) AS P2P_REFILL_AMOUNT,
            NVL(SCRATCH_REFILL_COUNT, 0) AS SCRATCH_REFILL_COUNT,
            NVL(SCRATCH_MAIN_REFILL_AMOUNT, 0) AS SCRATCH_MAIN_REFILL_AMOUNT,
            NVL(SCRATCH_PROMO_REFILL_AMOUNT, 0) AS SCRATCH_PROMO_REFILL_AMOUNT,
            NVL(P2P_REFILL_FEES, 0) AS P2P_REFILL_FEES
        FROM
        (
            --C2S et SCRATCH
            SELECT
                RECEIVER_MSISDN MSISDN
                ,SUM(CASE WHEN REFILL_MEAN='C2S' THEN 1 ELSE 0 END ) C2S_REFILL_COUNT
                ,SUM(CASE WHEN REFILL_MEAN='C2S' THEN REFILL_AMOUNT ELSE 0 END ) C2S_MAIN_REFILL_AMOUNT
                ,SUM(CASE WHEN REFILL_MEAN='C2S' THEN REFILL_BONUS ELSE 0 END ) C2S_PROMO_REFILL_AMOUNT
                ,SUM(CASE WHEN REFILL_MEAN='SCRATCH' THEN 1 ELSE 0 end ) SCRATCH_REFILL_COUNT
                ,SUM(CASE WHEN REFILL_MEAN='SCRATCH' THEN REFILL_AMOUNT ELSE 0 END ) SCRATCH_MAIN_REFILL_AMOUNT
                ,SUM(CASE WHEN REFILL_MEAN='SCRATCH' THEN REFILL_BONUS ELSE 0 END ) SCRATCH_PROMO_REFILL_AMOUNT
            FROM tmp.FT_REFILL
            WHERE REFILL_DATE = '2019-09-22'
                AND TERMINATION_IND='200'
            GROUP BY RECEIVER_MSISDN
        ) a
        FULL JOIN
        (
            --P2P
            SELECT
                RECEIVER_MSISDN MSISDN
                ,COUNT(*) P2P_REFILL_COUNT
                ,SUM(TRANSFER_AMT) P2P_REFILL_AMOUNT
                ,SUM(TRANSFER_FEES) P2P_REFILL_FEES
            FROM tmp.FT_CREDIT_TRANSFER
            WHERE REFILL_DATE = '2019-09-22'
                AND TERMINATION_IND='000'
            GROUP BY RECEIVER_MSISDN
        ) b ON a.MSISDN = b.MSISDN
    )e ON a.MSISDN = e.MSISDN
    LEFT JOIN
    (
        SELECT
            SERVED_PARTY_MSISDN AS MSISDN,
            SUM(CASE WHEN OPERATION_TYPE = 'REIMBURSMENT' THEN REFILL_AMOUNT ELSE 0 END) AS SOS_REIMBURSEMENT_AMOUNT,
            SUM(CASE WHEN OPERATION_TYPE = 'REIMBURSMENT' THEN 1 ELSE 0 END) AS SOS_REIMBURSEMENT_COUNT,
            SUM(CASE WHEN OPERATION_TYPE = 'LOAN' THEN LOAN_AMOUNT ELSE 0 END) AS SOS_LOAN_AMOUNT,
            SUM(CASE WHEN OPERATION_TYPE = 'LOAN' THEN 1 ELSE 0 END) AS SOS_LOAN_COUNT,
            SUM(FEE) AS SOS_FEES
        FROM tmp.FT_OVERDRAFT
        WHERE TRANSACTION_DATE = '2019-09-22'
        GROUP BY SERVED_PARTY_MSISDN
    )f on a.MSISDN=f.MSISDN
    LEFT JOIN
    (
        SELECT
            MSISDN,
            nvl(TOTAL_SUBS_AMOUNT, 0) AS TOTAL_SUBS_REVENUE
        FROM tmp.FT_SUBSCRIPTION_MSISDN_DAY
        WHERE EVENT_DATE = '2019-09-22'
    )g on a.MSISDN=g.MSISDN
    LEFT JOIN (
        -- Souscriptions
        SELECT
            MSISDN,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'AUTRES' THEN NBRE_SUBS ELSE 0 END)  AS SUBS_AUTRES_COUNT,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'AUTRES' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_AUTRES_AMOUNT,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'VOIX' THEN NBRE_SUBS ELSE 0 END) AS SUBS_VOICE_COUNT,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'SMS' THEN NBRE_SUBS ELSE 0 END) AS SUBS_SMS_COUNT,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'DATA' THEN NBRE_SUBS ELSE 0 END) AS SUBS_DATA_COUNT,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'VOIX' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_VOICE_AMOUNT,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'SMS' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_SMS_AMOUNT,
            SUM(CASE WHEN UPPER(USAGE_MKT) = 'DATA' THEN RATED_AMOUNT ELSE 0 END) AS SUBS_DATA_AMOUNT,
            SUM(DATA_VIA_OM) AS DATA_VIA_OM
        FROM
        (
            SELECT
                MSISDN,
                nvl(USAGE_MKT, 'AUTRES') AS USAGE_MKT,
                SUM(TOTAL_OCCURENCE) AS NBRE_SUBS,
                SUM(RATED_AMOUNT) AS RATED_AMOUNT,
                SUM(CASE WHEN SUBSCRIPTION_CHANNEL='32' THEN RATED_AMOUNT ELSE 0 END )DATA_VIA_OM
            FROM
            (
                SELECT
                    SERVED_PARTY_MSISDN AS MSISDN,
                    SUBSCRIPTION_SERVICE_DETAILS,
                    TOTAL_OCCURENCE,
                    RATED_AMOUNT,
                    SUBSCRIPTION_CHANNEL
                FROM tmp.FT_SUBSCRIPTION
                WHERE TRANSACTION_DATE = '2019-09-22'
            ) a
            LEFT JOIN
            (
                SELECT EVENT, USAGE_MKT
                FROM DIM.DT_SERVICES
            ) b
                ON a.SUBSCRIPTION_SERVICE_DETAILS = b.EVENT
            GROUP BY MSISDN, nvl(USAGE_MKT, 'AUTRES')
        )a GROUP BY MSISDN
    )h on a.MSISDN=h.MSISDN
    LEFT JOIN
    (
        SELECT
            MSISDN,
            SUM(amount) ED_AMOUNT,
            MAX(TRANSACTION_TYPE) ED_TRANSACTION_TYPE,
            SUM(BYTES_OBTAINED) ED_BYTES_OBTAINED,
            MAX(CONTACT_CHANNEL) ED_CONTACT_CHANNEL
        FROM (
            select
                msisdn,
                FIRST_VALUE(TRANSACTION_TYPE) OVER (PARTITION BY MSISDN ORDER BY cast(transaction_time as int) DESC) TRANSACTION_TYPE,
                amount,
                --CONTACT_CHANNEL,
                BYTES_OBTAINED,
                FIRST_VALUE(CONTACT_CHANNEL) OVER (PARTITION BY MSISDN ORDER BY cast(transaction_time as int) DESC) CONTACT_CHANNEL
            from  tmp.FT_EMERGENCY_DATA
            WHERE TRANSACTION_DATE = '2019-09-22'
        )a
        GROUP BY MSISDN
    )i on a.MSISDN=i.MSISDN
    LEFT JOIN
    (
        SELECT
            MSISDN,
            SUM(TRANSACTION_AMOUNT) OMNY_TRANSACTION_AMOUNT,
            SUM(COMMISSIONS_PAID) OMNY_COMMISSIONS_PAID,
            SUM(COMMISSIONS_RECEIVED) OMNY_COMMISSIONS_RECEIVED,
            SUM(COMMISSIONS_OTHERS) OMNY_COMMISSIONS_OTHERS,
            SUM(SERVICE_CHARGE_RECEIVED) OMNY_SERVICE_CHARGE_RECEIVED,
            SUM(SERVICE_CHARGE_PAID) OMNY_SERVICE_CHARGE_PAID,
            SUM(TAXES) OMNY_TAXES,
            MAX(SERVICE_TYPE) OMNY_SERVICE_TYPE,
            SUM(SENDER_PRE_BAL) OMNY_SENDER_PRE_BAL,
            SUM(SENDER_POST_BAL) OMNY_SENDER_POST_BAL,
            SUM(RECEIVER_PRE_BAL) OMNY_RECEIVER_PRE_BAL,
            SUM(RECEIVER_POST_BAL) OMNY_RECEIVER_POST_BAL
        FROM (
            select
                SENDER_MSISDN MSISDN,
                --SERVICE_TYPE,
                FIRST_VALUE(SERVICE_TYPE) OVER (PARTITION BY SENDER_MSISDN ORDER BY TRANSFER_DATETIME DESC) SERVICE_TYPE,
                TRANSACTION_AMOUNT,
                COMMISSIONS_PAID,
                COMMISSIONS_RECEIVED,
                COMMISSIONS_OTHERS,
                SERVICE_CHARGE_RECEIVED,
                SERVICE_CHARGE_PAID,
                TAXES,
                SENDER_PRE_BAL,
                SENDER_POST_BAL,
                RECEIVER_PRE_BAL,
                RECEIVER_POST_BAL
            from  tmp.IT_OMNY_TRANSACTIONS
            WHERE ORIGINAL_FILE_DATE = '2019-09-22'
        )a
        GROUP BY MSISDN
    )j on a.MSISDN=j.MSISDN
    left join (
        SELECT
            A.*,
            (CASE
                WHEN A.TYPE_PERSONNE = 'MACHINE_2_MACHINE' THEN
                    (
                        CASE WHEN (
                                A.NOM_STRUCTURE IS NOT NULL AND
                                (A.NUMERO_REGISTRE_COMMERCE IS NOT NULL AND UPPER(A.NUMERO_REGISTRE_COMMERCE) <> 'NON RENSEIGNE')
                                --NUMERO_PIECE_REP_LEGAL IS NOT NULL
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_OCM_P_MORALE_M2M,
            (CASE
                WHEN A.TYPE_PERSONNE = 'MACHINE_2_MACHINE' THEN
                    (
                        CASE WHEN (
                                A.NOM_STRUCTURE IS NOT NULL AND
                                (A.NUMERO_REGISTRE_COMMERCE IS NOT NULL AND UPPER(A.NUMERO_REGISTRE_COMMERCE) <> 'NON RENSEIGNE')
                                --NUMERO_PIECE_REP_LEGAL IS NOT NULL
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_ART_P_MORALE_M2M,
            (CASE
                WHEN A.TYPE_PERSONNE = 'PERSONNE_MORALE' THEN
                    (
                        CASE WHEN (
                                    A.NOM_STRUCTURE IS NOT NULL AND
                                    (A.NUMERO_REGISTRE_COMMERCE IS NOT NULL AND UPPER(NUMERO_REGISTRE_COMMERCE) <> 'NON RENSEIGNE') AND
                                    NUMERO_PIECE_REP_LEGAL IS NOT NULL AND
                                    A.NOM_ABSENT = 'NON' AND A.NOM_DOUTEUX = 'NON' AND
                                    A.IMEI IS NOT NULL AND
                                    A.NUMERO_PIECE_ABSENT = 'NON' AND A.NUMERO_PIECE_INF_4 = 'NON' AND A.NUMERO_PIECE_NON_AUTHORISE = 'NON' AND A.NUMERO_PIECE_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_A_CARACT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_UNIQUEMENT_LETTRE = 'NON'
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_OCM_P_MORALE_FLOTTE,
            (CASE
                WHEN A.TYPE_PERSONNE = 'PERSONNE_MORALE' THEN
                    (
                        CASE WHEN (
                                    A.NOM_STRUCTURE IS NOT NULL AND
                                    (A.NUMERO_REGISTRE_COMMERCE IS NOT NULL AND UPPER(NUMERO_REGISTRE_COMMERCE) <> 'NON RENSEIGNE') AND
                                    NUMERO_PIECE_REP_LEGAL IS NOT NULL AND
                                    NOM_ABSENT = 'NON' AND A.NOM_DOUTEUX = 'NON' AND
                                    A.IMEI IS NOT NULL AND
                                    A.NUMERO_PIECE_ABSENT = 'NON' AND A.NUMERO_PIECE_INF_4 = 'NON' AND A.NUMERO_PIECE_NON_AUTHORISE = 'NON' AND A.NUMERO_PIECE_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_A_CARACT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_UNIQUEMENT_LETTRE = 'NON'
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_ART_P_MORALE_FLOTTE,
            (CASE
                WHEN A.TYPE_PERSONNE = 'MAJEUR' OR A.TYPE_PERSONNE IS NULL OR A.TYPE_PERSONNE = 'PP' THEN
                    (
                        CASE WHEN (
                                --A.STATUT_BSCS = 'ACTIF' AND
                                A.DATE_ACTIVATION IS NOT NULL AND
                                A.NOM_ABSENT = 'NON' AND A.NOM_DOUTEUX = 'NON' AND
                                A.NUMERO_PIECE_ABSENT = 'NON' AND A.NUMERO_PIECE_INF_4 = 'NON' AND A.NUMERO_PIECE_NON_AUTHORISE = 'NON' AND A.NUMERO_PIECE_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_A_CARACT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_UNIQUEMENT_LETTRE = 'NON' AND
                                A.DATE_EXPIRATION_DOUTEUSE = 'NON' AND
                                A.TYPE_PIECE IS NOT NULL AND
                                A.DATE_NAISSANCE_ABSENT = 'NON' AND A.DATE_NAISSANCE_DOUTEUX = 'NON' AND
                                A.CNI_EXPIRE = 'NON' AND
                                A.MULTI_SIM = 'NON' AND
                                A.ADDRESSE IS NOT NULL AND
                                A.IMEI IS NOT NULL
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_OCM_P_PHY_MAJEUR,
            (CASE
                WHEN A.TYPE_PERSONNE = 'MAJEUR' OR A.TYPE_PERSONNE IS NULL OR A.TYPE_PERSONNE = 'PP' THEN
                    (
                        CASE WHEN (
                                --A.STATUT_BSCS = 'ACTIF' AND
                                A.DATE_ACTIVATION IS NOT NULL AND
                                A.NOM_ABSENT = 'NON' AND A.NOM_DOUTEUX = 'NON' AND
                                A.NUMERO_PIECE_ABSENT = 'NON' AND A.NUMERO_PIECE_INF_4 = 'NON' AND A.NUMERO_PIECE_NON_AUTHORISE = 'NON' AND A.NUMERO_PIECE_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_A_CARACT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_UNIQUEMENT_LETTRE = 'NON' AND
                                A.DATE_EXPIRATION_DOUTEUSE = 'NON' AND
                                A.TYPE_PIECE IS NOT NULL AND
                                A.DATE_NAISSANCE_ABSENT = 'NON' AND A.DATE_NAISSANCE_DOUTEUX = 'NON' AND
                                A.CNI_EXPIRE = 'NON' AND
                                A.MULTI_SIM = 'NON' AND
                                A.ADDRESSE IS NOT NULL AND
                                A.IMEI IS NOT NULL
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_ART_P_PHY_MAJEUR,
            (CASE
                WHEN A.TYPE_PERSONNE = 'MINEUR' THEN
                    (
                        CASE WHEN (
                                --A.STATUT_BSCS = 'ACTIF' AND
                                A.DATE_ACTIVATION IS NOT NULL AND
                                A.NOM_ABSENT = 'NON' AND A.NOM_DOUTEUX = 'NON' AND
                                A.NUMERO_PIECE_ABSENT = 'NON' AND A.NUMERO_PIECE_INF_4 = 'NON' AND A.NUMERO_PIECE_NON_AUTHORISE = 'NON' AND A.NUMERO_PIECE_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_A_CARACT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_UNIQUEMENT_LETTRE = 'NON' AND
                                A.DATE_EXPIRATION_DOUTEUSE = 'NON' AND
                                A.TYPE_PIECE IS NOT NULL AND
                                A.DATE_NAISSANCE_ABSENT = 'NON' AND A.DATE_NAISSANCE_DOUTEUX = 'NON' AND
                                A.NOM_PARENT_ABSENT = 'NON' AND A.NOM_PARENT_DOUTEUX = 'NON' AND
                                A.NUMERO_PIECE_TUT_ABSENT = 'NON' AND A.NUMERO_PIECE_TUT_INF_4 = 'NON' AND A.NUMERO_PIECE_TUT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_TUT_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_TUT_CARAC_NON_A = 'NON' AND A.NUMERO_PIECE_TUT_UNIQ_LETTRE = 'NON' AND
                                A.DATE_NAISSANCE_TUTEUR IS NOT NULL AND
                                A.CNI_EXPIRE = 'NON' AND
                                A.MULTI_SIM = 'NON' AND
                                A.ADDRESSE IS NOT NULL AND
                                A.IMEI IS NOT NULL
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_OCM_P_PHY_MINEUR,
            (CASE
                WHEN A.TYPE_PERSONNE = 'MINEUR' THEN
                    (
                        CASE WHEN (
                                --A.STATUT_BSCS = 'ACTIF' AND
                                A.DATE_ACTIVATION IS NOT NULL AND
                                A.NOM_ABSENT = 'NON' AND A.NOM_DOUTEUX = 'NON' AND
                                A.NUMERO_PIECE_ABSENT = 'NON' AND A.NUMERO_PIECE_INF_4 = 'NON' AND A.NUMERO_PIECE_NON_AUTHORISE = 'NON' AND A.NUMERO_PIECE_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_A_CARACT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_UNIQUEMENT_LETTRE = 'NON' AND
                                A.DATE_EXPIRATION_DOUTEUSE = 'NON' AND
                                A.TYPE_PIECE IS NOT NULL AND
                                A.DATE_NAISSANCE_ABSENT = 'NON' AND A.DATE_NAISSANCE_DOUTEUX = 'NON' AND
                                A.NOM_PARENT_ABSENT = 'NON' AND A.NOM_PARENT_DOUTEUX = 'NON' AND
                                A.NUMERO_PIECE_TUT_ABSENT = 'NON' AND A.NUMERO_PIECE_TUT_INF_4 = 'NON' AND A.NUMERO_PIECE_TUT_NON_AUTH = 'NON' AND A.NUMERO_PIECE_TUT_EGALE_MSISDN = 'NON' AND A.NUMERO_PIECE_TUT_CARAC_NON_A = 'NON' AND A.NUMERO_PIECE_TUT_UNIQ_LETTRE = 'NON' AND
                                A.DATE_NAISSANCE_TUTEUR IS NOT NULL AND
                                A.CNI_EXPIRE = 'NON' AND
                                A.MULTI_SIM = 'NON' AND
                                A.ADDRESSE IS NOT NULL AND
                                A.IMEI IS NOT NULL
                            ) THEN 'OUI' ELSE 'NON'
                    END)
                ELSE NULL
            END) CONFORM_ART_P_PHY_MINEUR,
            (CASE WHEN A.ODBOUTGOINGCALLS = '1' AND A.ODBINCOMINGCALLS = '1' THEN 'OUI' ELSE (CASE WHEN A.ODBOUTGOINGCALLS = '1' THEN'OUI' ELSE 'NON' END ) END) EST_SUSPENDU,
            (CASE WHEN A.NOM_STRUCTURE IS NULL THEN 'OUI' ELSE 'NON' END) NOM_STRUCTURE_ABSENT,
            (CASE WHEN A.NUMERO_REGISTRE_COMMERCE IS NULL THEN 'OUI' ELSE 'NON' END) NUMERO_REGISTRE_ABSENT,
            (CASE WHEN UPPER(A.NUMERO_REGISTRE_COMMERCE) = 'NON RENSEIGNE' THEN 'OUI' ELSE 'NON' END) NUMERO_REGISTRE_DOUTEUX,
            (CASE WHEN A.IMEI IS NULL THEN 'OUI' ELSE 'NON' END) IMEI_ABSENT
        FROM junk.TT_FT_BDI_II3 A
        --LEFT JOIN (SELECT DISTINCT MSISDN FROM TT_BDI_SUSPENDED) B ON A.MSISDN = B.MSISDN
    ) k on a.MSISDN=k.MSISDN
    left join (
        SELECT
            MSISDN,
            SUBSTR(IMEI_MOST_USED,1,8) AS TER_TAC_CODE,
            SUBSTR(IMEI_MOST_USED,1,8) AS TER_IMEI,
            CONSTRUCTOR AS TER_CONSTRUCTOR,
            MODEL AS TER_MODEL,
            TECHNOLOGIE AS TER_2G_3G_4G_COMPATIBILITY,
            (CASE WHEN TECHNOLOGIE = '2G' THEN 'O' ELSE 'N' END) AS TER_2G_COMPATIBILITY,
            (CASE WHEN TECHNOLOGIE IN ('2.5G', '2.75G', '3G') THEN 'O' ELSE 'N' END) AS TER_3G_COMPATIBILITY,
            (CASE WHEN TECHNOLOGIE = '4G' THEN 'O' ELSE 'N' END) AS TER_4G_COMPATIBILITY
        FROM
        (
          SELECT
            DISTINCT
             MSISDN,
              IMEI_MOST_USED
          FROM
          (
             SELECT
                MSISDN
                 , FIRST_VALUE(imei) OVER (PARTITION BY MSISDN ORDER BY TOTAL_DAYS_COUNT DESC) IMEI_MOST_USED
             FROM (
                select
                    msisdn,
                    substr(imei, 1, 14) imei,
                    count(DISTINCT sdate) total_days_count
                from MON.FT_IMEI_ONLINE
                where sdate='2019-09-22'
                GROUP BY substr(imei, 1, 14), msisdn
             )a
             --WHERE SMONTH = TO_CHAR(ADD_MONTHS(TO_DATE(s_slice_value, 'yyyymmdd'), -1), 'yyyymm')
          )a
        )a
        LEFT JOIN  DIM.DT_HANDSET_REF ON SUBSTR(IMEI_MOST_USED,1,8) = TAC_CODE
    ) l on a.MSISDN=l.MSISDN
    left join (
        select
            MSISDN,
            INSCRIPTEUR	,
            MIDATEDEP	,
            MTT_DEPOT	,
            NB_DEPOT	,
            null IDSPEC	,
            FIRSTDEPOT	,
            FIRSTTRAN	,
            DEST_TRAN	,
            SERV_TRAN	,
            MIDATETR	,
            MTT_TRANS	,
            NB_TRANSACTION	,
            REG_LEVEL	,
            SEUIL_OK	,
            AUTO_INSCRIPTION,
            BOUCLE_P2P	,
            DOUBLE_PROFIL	,
            BOUCLE	,
            CONFORMITE
        from tmp.FT_OMNY_SDT
    )m on a.MSISDN=m.MSISDN
)T