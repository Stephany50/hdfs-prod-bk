CREATE TABLE CDR.SPARK_IT_BILL_PER_ACCOUNT
(
    BILL_TYPE_NAME VARCHAR(200),
    CREATED_BY VARCHAR(200),
    CYCLE_TYPE VARCHAR(200),
    INVOICE_DATE VARCHAR(200),
    GENERATION_DATE VARCHAR(200),
    ACCT_NBR VARCHAR(200),
    CUST_CATEGORY VARCHAR(200),
    CUST_SEGMENT VARCHAR(200),
    SMS_NBR VARCHAR(200),
    EMAIL VARCHAR(200),
    CC_EMAIL VARCHAR(200),
    CUST_CODE VARCHAR(200),
    DEPT_NAME VARCHAR(200),
    CUST_NAME VARCHAR(200),
    BILL_NUMBER VARCHAR(200),
    BILL_AMOUNT VARCHAR(200),
    BILL_OPEN_AMOUNT VARCHAR(200),
    PRE_BALANCE VARCHAR(200),
    ENCAISSEMENTS VARCHAR(200),
    ACCOUNT_CURRENT_BALANCE VARCHAR(200),
    PREVIOUS_BILL_DUE VARCHAR(200),
    VARIATION VARCHAR(200),
    ORIGINAL_FILE_NAME VARCHAR(200),
    INSERT_DATE TIMESTAMP,
    ORIGINAL_FILE_DATE  DATE

)
PARTITIONED BY (event_date DATE)
STORED AS PARQUET
TBLPROPERTIES ("parquet.compress"="SNAPPY");



CREATE EXTERNAL TABLE CDR.SPARK_TT_BILL_PER_ACCOUNT
(
    ORIGINAL_FILE_NAME VARCHAR(200),
    ORIGINAL_FILE_SIZE INT,
    ORIGINAL_FILE_LINE_COUNT INT,
    BILL_TYPE_NAME VARCHAR(200),
    CREATED_BY VARCHAR(200),
    CYCLE_TYPE VARCHAR(200),
    INVOICE_DATE VARCHAR(200),
    GENERATION_DATE VARCHAR(200),
    ACCT_NBR VARCHAR(200),
    CUST_CATEGORY VARCHAR(200),
    CUST_SEGMENT VARCHAR(200),
    SMS_NBR VARCHAR(200),
    EMAIL VARCHAR(200),
    CC_EMAIL VARCHAR(200),
    RCCM VARCHAR(200), -- ajoiut ici
    NUI VARCHAR(200), -- ajout ici
    CUST_CODE VARCHAR(200),
    DEPT_NAME VARCHAR(200),
    CUST_NAME VARCHAR(200),
    BILL_NUMBER VARCHAR(200),
    BILL_AMOUNT VARCHAR(200),
    BILL_OPEN_AMOUNT VARCHAR(200),
    PRE_BALANCE VARCHAR(200),
    ENCAISSEMENTS VARCHAR(200),
    ACCOUNT_CURRENT_BALANCE VARCHAR(200),
    PREVIOUS_BILL_DUE VARCHAR(200),
    VARIATION VARCHAR(200)

)COMMENT 'CDR SPARK_TT_BILL_PER_ACCOUNT'
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
WITH SERDEPROPERTIES (
   "separatorChar" = "\;"
)
LOCATION '/PROD/TT/STAT_TOOLS/DATAMARTB2B/BILL_PER_ACCOUNT'
TBLPROPERTIES ('serialization.null.format'='');




---Staging table in DWH
CREATE TABLE MON.SQ_FT_BILL_PER_ACCOUNT_MONTH (
    BILL_TYPE_NAME VARCHAR (255),
    CREATED_BY VARCHAR (255),
    CYCLE_TYPE VARCHAR (255),
    INVOICE_DATE VARCHAR (255),
    GENERATION_DATE VARCHAR (255),
    ACCT_NBR VARCHAR (255),
    CUST_CATEGORY VARCHAR (255),
    CUST_SEGMENT VARCHAR (255),
    SMS_NBR VARCHAR (255),
    EMAIL VARCHAR (255),
    CC_EMAIL VARCHAR (255),
    CUST_CODE VARCHAR (255),
    DEPT_NAME VARCHAR (255),
    CUST_NAME VARCHAR (255),
    BILL_NUMBER VARCHAR (255),
    BILL_AMOUNT FLOAT,
    BILL_OPEN_AMOUNT FLOAT,
    PRE_BALANCE FLOAT,
    ENCAISSEMENTS FLOAT,
    ACCOUNT_CURRENT_BALANCE FLOAT,
    PREVIOUS_BILL_DUE FLOAT,
    VARIATION FLOAT,
    EVENT_DATE DATE,
    EVENT_MONTH VARCHAR (255)
);


--final table in DWH
CREATE TABLE MON.FT_BILL_PER_ACCOUNT (
    BILL_TYPE_NAME VARCHAR (255 BYTE),
    CREATED_BY VARCHAR (255 BYTE),
    CYCLE_TYPE VARCHAR (255 BYTE),
    INVOICE_DATE VARCHAR (255 BYTE),
    GENERATION_DATE VARCHAR (255 BYTE),
    ACCT_NBR VARCHAR (255 BYTE),
    CUST_CATEGORY VARCHAR (255 BYTE),
    CUST_SEGMENT VARCHAR (255 BYTE),
    SMS_NBR VARCHAR (255 BYTE),
    EMAIL VARCHAR (255 BYTE),
    CC_EMAIL VARCHAR (255 BYTE),
    CUST_CODE VARCHAR (255 BYTE),
    DEPT_NAME VARCHAR (255 BYTE),
    CUST_NAME VARCHAR (255 BYTE),
    BILL_NUMBER VARCHAR (255 BYTE),
    BILL_AMOUNT VARCHAR (255 BYTE),
    BILL_OPEN_AMOUNT VARCHAR (255 BYTE),
    PRE_BALANCE VARCHAR (255 BYTE),
    ENCAISSEMENTS VARCHAR (255 BYTE),
    ACCOUNT_CURRENT_BALANCE VARCHAR (255 BYTE),
    PREVIOUS_BILL_DUE VARCHAR (255 BYTE),
    VARIATION VARCHAR (255 BYTE),
    EVENT_DATE DATE,
    EVENT_MONTH VARCHAR (255 BYTE)
);


---Staging table in data lake
CREATE TABLE TMP.SQ_FT_BILL_PER_ACCOUNT_MONTH (
    BILL_TYPE_NAME VARCHAR (255),
    CREATED_BY VARCHAR (255),
    CYCLE_TYPE VARCHAR (255),
    INVOICE_DATE VARCHAR (255),
    GENERATION_DATE VARCHAR (255),
    ACCT_NBR VARCHAR (255),
    CUST_CATEGORY VARCHAR (255),
    CUST_SEGMENT VARCHAR (255),
    SMS_NBR VARCHAR (255),
    EMAIL VARCHAR (255),
    CC_EMAIL VARCHAR (255),
    CUST_CODE VARCHAR (255),
    DEPT_NAME VARCHAR (255),
    CUST_NAME VARCHAR (255),
    BILL_NUMBER VARCHAR (255),
    BILL_AMOUNT FLOAT,
    BILL_OPEN_AMOUNT FLOAT,
    PRE_BALANCE FLOAT,
    ENCAISSEMENTS FLOAT,
    ACCOUNT_CURRENT_BALANCE FLOAT,
    PREVIOUS_BILL_DUE FLOAT,
    VARIATION FLOAT,
    EVENT_DATE DATE,
    EVENT_MONTH VARCHAR (255)
);




DECLARE 
  SAMPLE_TABLE VARCHAR2(200); MIN_DATE_PARTITION VARCHAR2(200); MAX_DATE_PARTITION VARCHAR2(200);  KEY_COLUMN_PART_NAME VARCHAR2(200);
  KEY_COLUMN_PART_TYPE VARCHAR2(200);   PART_OWNER VARCHAR2(200);  PART_TABLE_NAME VARCHAR2(200);  PART_PARTITION_NAME VARCHAR2(200);
  PART_TYPE_PERIODE VARCHAR2(200);  PART_RETENTION NUMBER;  PART_TBS_CIBLE VARCHAR2(200);  PART_GARDER_01_DU_MOIS VARCHAR2(200);
PART_PCT_FREE NUMBER;   PART_COMPRESSION VARCHAR2(200);  PART_ROTATION_ACTIVE VARCHAR2(200);  PART_FORMAT VARCHAR2(200);
BEGIN 
  SAMPLE_TABLE := 'MON.SQ_FT_BILL_PER_ACCOUNT_MONTH ';
  MIN_DATE_PARTITION := '20220101';
  MAX_DATE_PARTITION := '20260101';
  KEY_COLUMN_PART_NAME := 'EVENT_MONTH';
  KEY_COLUMN_PART_TYPE := 'MOIS';
  PART_OWNER := 'MON';
  PART_TABLE_NAME := 'FT_BILL_PER_ACCOUNT';
  PART_PARTITION_NAME := 'FT_BILL_PER_ACCOUNT_';
  PART_TYPE_PERIODE := 'MOIS';
  PART_RETENTION := 1000;
  PART_TBS_CIBLE :=  'TAB_P_MON_J12_256M';
  PART_GARDER_01_DU_MOIS := 'NON';
  PART_PCT_FREE := 0;
  PART_COMPRESSION := 'COMPRESS';
  PART_ROTATION_ACTIVE := 'OUI';
  PART_FORMAT := 'yyyymm';
  MON.CREATE_PARTITIONED_TABLE ( SAMPLE_TABLE, MIN_DATE_PARTITION, MAX_DATE_PARTITION, KEY_COLUMN_PART_NAME, KEY_COLUMN_PART_TYPE, PART_OWNER, PART_TABLE_NAME, PART_PARTITION_NAME, PART_TYPE_PERIODE, PART_RETENTION, PART_TBS_CIBLE, PART_GARDER_01_DU_MOIS, PART_PCT_FREE, PART_COMPRESSION, PART_ROTATION_ACTIVE, PART_FORMAT );
  COMMIT; 
END;
