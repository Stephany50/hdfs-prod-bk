CREATE TABLE CDR.SPARK_IT_TRAFFIC_LINE_B2B
(
    OrderNumber VARCHAR(200),
    Customer_Order_Number VARCHAR(500),
    Customer_Name VARCHAR(1000),
    Event_Name VARCHAR(200),
    Service_Number VARCHAR(100),
    Order_State VARCHAR(100),
    Created_Date TIMESTAMP,
    Completed_Date TIMESTAMP,
    Accept_Channel  VARCHAR(100),
    Created_By VARCHAR(200),
    ORIGINAL_FILE_NAME VARCHAR(200),
    INSERT_DATE TIMESTAMP

)
PARTITIONED BY (event_date DATE)
STORED AS PARQUET
TBLPROPERTIES ("parquet.compress"="SNAPPY");



CREATE EXTERNAL TABLE CDR.SPARK_TT_TRAFFIC_LINE_B2B
(
    ORIGINAL_FILE_NAME VARCHAR(200),
    ORIGINAL_FILE_SIZE INT,
    ORIGINAL_FILE_LINE_COUNT INT,
    OrderNumber VARCHAR(200),
    Customer_Order_Number VARCHAR(500),
    Customer_Name VARCHAR(1000),
    Event_Name VARCHAR(200),
    Service_Number VARCHAR(100),
    Order_State VARCHAR(100),
    Created_Date VARCHAR(100),
    Completed_Date VARCHAR(100),
    Accept_Channel  VARCHAR(100),
    Created_By VARCHAR(200)
)COMMENT 'CDR SPARK_TT_TRAFFIC_LINE_B2B'
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
WITH SERDEPROPERTIES (
   "separatorChar" = "|"
)
LOCATION '/PROD/TT/STAT_TOOLS/DATAMARTB2B/ORDER_DETAIL_DAILY'
TBLPROPERTIES ('serialization.null.format'='');

flux.sqoop.export-rdms.dest-table = "MON.FT_ORDER_QUERY"



---Staging table in DWH
CREATE TABLE MON.SQ_FT_ORDER_QUERY_LIST (
    OrderNumber VARCHAR (255),
    Customer_Order_Number VARCHAR (255),
    Customer_Name VARCHAR (255),
    Event_Name VARCHAR (255),
    Service_Number VARCHAR (255),
    Order_State VARCHAR (255),
    Created_Date VARCHAR (100),
    Completed_Date VARCHAR (100),
    Accept_Channel  VARCHAR (255),
    staff_name VARCHAR (255),
    INSERT_DATE TIMESTAMP,
    EVENT_DATE DATE
);




---Staging table in data lake
CREATE TABLE TMP.SQ_FT_ORDER_QUERY_LIST (
    OrderNumber VARCHAR (255),
    Customer_Order_Number VARCHAR (255),
    Customer_Name VARCHAR (255),
    Event_Name VARCHAR (255),
    Service_Number VARCHAR (255),
    Order_State VARCHAR (255),
    Created_Date VARCHAR (100),
    Completed_Date VARCHAR (100),
    Accept_Channel  VARCHAR (255),
    staff_name VARCHAR (255),
    INSERT_DATE TIMESTAMP,
    EVENT_DATE DATE

);


DECLARE 
  SAMPLE_TABLE VARCHAR2(200); MIN_DATE_PARTITION VARCHAR2(200); MAX_DATE_PARTITION VARCHAR2(200);  KEY_COLUMN_PART_NAME VARCHAR2(200);
  KEY_COLUMN_PART_TYPE VARCHAR2(200);   PART_OWNER VARCHAR2(200);  PART_TABLE_NAME VARCHAR2(200);  PART_PARTITION_NAME VARCHAR2(200);
  PART_TYPE_PERIODE VARCHAR2(200);  PART_RETENTION NUMBER;  PART_TBS_CIBLE VARCHAR2(200);  PART_GARDER_01_DU_MOIS VARCHAR2(200);
PART_PCT_FREE NUMBER;   PART_COMPRESSION VARCHAR2(200);  PART_ROTATION_ACTIVE VARCHAR2(200);  PART_FORMAT VARCHAR2(200);
BEGIN 
  SAMPLE_TABLE := 'MON.SQ_FT_ORDER_QUERY_LIST';
  MIN_DATE_PARTITION := '20220101';
  MAX_DATE_PARTITION := '20270101';
  KEY_COLUMN_PART_NAME := 'EVENT_DATE';
  KEY_COLUMN_PART_TYPE := 'JOUR';
  PART_OWNER := 'MON';
  PART_TABLE_NAME := 'FT_ORDER_QUERY';
  PART_PARTITION_NAME := 'FT_ORDER_QUERY_';
  PART_TYPE_PERIODE := 'JOUR';
  PART_RETENTION := 1000;
  PART_TBS_CIBLE :=  'TAB_P_MON_J12_256M';
  PART_GARDER_01_DU_MOIS := 'NON';
  PART_PCT_FREE := 0;
  PART_COMPRESSION := 'COMPRESS';
  PART_ROTATION_ACTIVE := 'OUI';
  PART_FORMAT := 'yyyymmdd';
  MON.CREATE_PARTITIONED_TABLE ( SAMPLE_TABLE, MIN_DATE_PARTITION, MAX_DATE_PARTITION, KEY_COLUMN_PART_NAME, KEY_COLUMN_PART_TYPE, PART_OWNER, PART_TABLE_NAME, PART_PARTITION_NAME, PART_TYPE_PERIODE, PART_RETENTION, PART_TBS_CIBLE, PART_GARDER_01_DU_MOIS, PART_PCT_FREE, PART_COMPRESSION, PART_ROTATION_ACTIVE, PART_FORMAT );
  COMMIT; 
END;
