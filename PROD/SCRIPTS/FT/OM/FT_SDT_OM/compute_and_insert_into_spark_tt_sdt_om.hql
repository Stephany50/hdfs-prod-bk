INSERT INTO TMP.TT_SDT_OM
SELECT
    MSISDN,
    USER_NAME,
    ADDRESS,
    DATE_INSCRIPT,
    INSCRIPTEUR,
    ID_NUMBER,
    SEX,
    DATE_OF_BIRTH,
    MIDATEDEP,
    MTT_DEPOT,
    NB_DEPOT,
    FIRSTDEPOT,
    FIRSTTRAN,
    DEST_TRAN,
    SERV_TRAN,
    MIDATETR,
    MTT_TRANS,
    NB_TRANSACTION,
    REG_LEVEL,
    SEUIL_OK,
    AUTO_INSCRIPTION,
    BOUCLE_P2P,
    DOUBLE_PROFIL,
    (CASE WHEN AUTO_INSCRIPTION='VRAI' OR BOUCLE_P2P='VRAI' OR DOUBLE_PROFIL='VRAI' THEN 'VRAI' ELSE 'FAUX' END) BOUCLE,
    CONFORMITE,
    CURRENT_TIMESTAMP() INSERT_DATE
FROM
(
    SELECT
        SD.MSISDN,
        SD.USER_NAME,
        SD.ADDRESS,
        SD.DATE_INSCRIPT,
        SD.INSCRIPTEUR,
        SD.ID_NUMBER,
        SD.SEX,
        SD.DATE_OF_BIRTH,
        SD.MIDATEDEP,
        SD.MTT_DEPOT,
        SD.NB_DEPOT,
        SD.FIRSTDEPOT,
        PURT.FIRSTTRAN,
        PURT.DEST_TRAN,
        PURT.SERV_TRAN,
        PURT.MIDATETR,
        PURT.MTT_TRANS,
        PURT.NB_TRANSACTION,
        (CASE WHEN PURT.SENDER_MSISDN IS NOT NULL THEN 'SDT' ELSE SD.REG_LEVEL END) REG_LEVEL,
        (CASE WHEN SD.FIRSTDEPOT>=500 THEN 'VRAI' ELSE 'FAUX' END) SEUIL_OK,
        (CASE WHEN SD.MSISDN=SD.INSCRIPTEUR THEN 'VRAI' ELSE 'FAUX' END) AUTO_INSCRIPTION,
        (CASE WHEN PURT.SERV_TRAN='P2P' AND SD.INSCRIPTEUR=PURT.DEST_TRAN THEN 'VRAI' ELSE 'FAUX' END) BOUCLE_P2P,
        (CASE WHEN DB.MSISDN IS NOT NULL THEN 'VRAI' ELSE 'FAUX' END) DOUBLE_PROFIL,
        'FAUX' BOUCLE,
        (CASE WHEN LENGTH(SD.ID_NUMBER) IN ('9','10') AND SUBSTR(SD.ID_NUMBER,1,3)<'130' THEN 'VRAI' ELSE 'FAUX' END) CONFORMITE
    FROM
    (
        SELECT
            INS.*,
            PURD.*,
            (CASE WHEN PURD.RECEIVER_MSISDN IS NOT NULL THEN 'SD' ELSE 'S' END) REG_LEVEL
        FROM
        (
            SELECT
                EVENT_DATE,
                MSISDN,
                USER_NAME,
                ADDRESS,
                DATE_INSCRIPT,
                INSCRIPTEUR,
                ID_NUMBER,
                SEX,
                DATE_OF_BIRTH
            FROM
            (
                SELECT
                    REGISTERED_ON EVENT_DATE,
                    MSISDN,
                    CONCAT(CONCAT(USER_FIRST_NAME, ' '), USER_LAST_NAME) USER_NAME,
                    CONCAT(CONCAT(CONCAT(CONCAT(ADDRESS1, ','), ADDRESS2), ','), CITY) ADDRESS,
                    REGISTERED_ON DATE_INSCRIPT,
                    CREATED_BY_MSISDN INSCRIPTEUR,
                    ID_NUMBER,
                    SEX,
                    DOB DATE_OF_BIRTH,
                    ROW_NUMBER() OVER(PARTITION BY MSISDN ORDER BY REGISTERED_ON DESC) AS ROWNUMBER
                FROM CDR.SPARK_IT_OM_SUBSCRIBERS
                WHERE REGISTERED_ON BETWEEN SUBSTR('###SLICE_VALUE###', 0, 7) || '-01 00:00:00' AND DATE_ADD('###SLICE_VALUE###', 1) || '00:00:00'
                    AND USER_TYPE='SUBSCRIBER'
            ) K
            WHERE ROWNUMBER = 1
        ) INS
        LEFT JOIN 
        (
            SELECT
                T1.RECEIVER_MSISDN,
                MIN(T1.TRANSFER_DATETIME) MIDATEDEP,
                SUM(T1.TRANSACTION_AMOUNT) MTT_DEPOT,
                COUNT(T1.TRANSFER_ID) NB_DEPOT,
                -MAX(STRUCT(T1.TRANSFER_DATETIME, -T1.TRANSACTION_AMOUNT)).COL2 AS FIRSTDEPOT
                --MIN(T1.TRANSACTION_AMOUNT) KEEP (DENSE_RANK FIRST ORDER BY T1.TRANSFER_DATETIME) FIRSTDEPOT
            FROM CDR.SPARK_IT_OMNY_TRANSACTIONS T1 
            WHERE T1.TRANSFER_DATETIME BETWEEN SUBSTR('###SLICE_VALUE###', 0, 7) || '-01 00:00:00' AND DATE_ADD('###SLICE_VALUE###', 1) || '00:00:00'
                AND T1.TRANSFER_STATUS='TS'
                AND T1.SERVICE_TYPE IN ('CASHIN','P2P','OTF','ENT2REG')
            GROUP BY T1.RECEIVER_MSISDN
        ) PURD ON INS.MSISDN = PURD.RECEIVER_MSISDN
    ) SD
    LEFT JOIN 
    (
        SELECT
            T3.SENDER_MSISDN,
            MIN(T3.TRANSFER_DATETIME) MIDATETR,
            SUM(T3.TRANSACTION_AMOUNT) MTT_TRANS,
            COUNT(T3.TRANSFER_ID) NB_TRANSACTION,
            -MAX(STRUCT(T3.TRANSFER_DATETIME, -T3.TRANSACTION_AMOUNT)).COL2 AS FIRSTTRAN,
            -MAX(STRUCT(T3.TRANSFER_DATETIME, -T3.RECEIVER_MSISDN)).COL2 AS DEST_TRAN,
            -MAX(STRUCT(T3.TRANSFER_DATETIME, -T3.SERVICE_TYPE)).COL2 AS SERV_TRAN
            --MIN(T3.TRANSACTION_AMOUNT) KEEP (DENSE_RANK FIRST ORDER BY T3.TRANSFER_DATETIME) FIRSTTRAN,
            --MIN(T3.RECEIVER_MSISDN) KEEP (DENSE_RANK FIRST ORDER BY T3.TRANSFER_DATETIME) DEST_TRAN,
            --MIN(T3.SERVICE_TYPE) KEEP (DENSE_RANK FIRST ORDER BY T3.TRANSFER_DATETIME) SERV_TRAN
        FROM CDR.SPARK_IT_OMNY_TRANSACTIONS T3
        WHERE T3.TRANSFER_DATETIME BETWEEN SUBSTR('###SLICE_VALUE###', 0, 7) || '-01 00:00:00' AND DATE_ADD('###SLICE_VALUE###', 1) || '00:00:00'
            AND T3.TRANSFER_STATUS='TS'
            AND T3.SERVICE_TYPE IN ('CASHOUT','P2P','P2PNONREG','RC','BILLPAY','MERCHPAY')
        GROUP BY T3.SENDER_MSISDN
    ) PURT ON SD.MSISDN = PURT.SENDER_MSISDN
    LEFT JOIN 
    (
        SELECT MSISDN
        FROM CDR.SPARK_IT_OM_SUBSCRIBERS
        WHERE REGISTERED_ON BETWEEN SUBSTR('###SLICE_VALUE###', 0, 7) || '-01 00:00:00' AND DATE_ADD('###SLICE_VALUE###', 1) || '00:00:00'
            AND USER_TYPE NOT IN ('SUBSCRIBER') 
            AND ACCOUNT_STATUS NOT IN ('N')
        GROUP BY MSISDN
    ) DB ON SD.MSISDN = DB.MSISDN
) A
