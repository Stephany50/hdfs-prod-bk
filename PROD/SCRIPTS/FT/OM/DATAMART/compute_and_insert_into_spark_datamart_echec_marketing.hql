-- *****************************************
--*******************************************
--*****      MARKETING DATAMART ECHEC   *****
--*******************************************
-- *****************************************
INSERT INTO MON.SPARK_DATAMART_ECHEC_MARKETING
SELECT
 C.ACTIF_ID,
 C.MSISDN,
 C.SERVICE_TYPE,
 C.STYLES,
 C.TECHNOLOGY,
 C.PRODUCT_LINE,
 C.PRODUCT,
 C.DETAILS_MARKETING,
 C.DETAILS_CONFOMITY,
 C.TRANSFER_STATUS,
 C.ERROR_CODE,
 C.ERROR_DESC,
 C.BEAC,
 C.VOL,
 C.VAL,
 C.DIRECT_REVENUE,
 C.INDIRECT_REVENUE,
 C.OTHER_REVENUE,
 C.COMMISSION,
 D.SITE_NAME,
 C.JOUR
FROM
 (
-- CHANNEL ON SENDER MODE
-- CASHIN, SALARY PAY, B2W IN, GIMAC MERCHPAY, GIMAC P2P IN
 SELECT
 A.TRANSFER_DATETIME JOUR,
 (A.RECEIVER_USER_ID || '_' || A.RECEIVER_MSISDN) ACTIF_ID,
 A.RECEIVER_MSISDN MSISDN,
 A.SERVICE_TYPE,
 B.STYLES,
 B.TECHNOLOGY,
 B.PRODUCT_LINE,
 B.PRODUCT,
 B.DETAILS_MARKETING,
 B.DETAILS_CONFOMITY,
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC,
 B.BEAC,
 COUNT(A.TRANSFER_ID) VOL,
 SUM(A.TRANSACTION_AMOUNT) VAL,
 SUM(A.service_charge_received) DIRECT_REVENUE,
 SUM(A.COMMISSIONS_RECEIVED) INDIRECT_REVENUE,
 SUM(A.COMMISSIONS_OTHERS) OTHER_REVENUE,
 SUM(A.COMMISSIONS_PAID) COMMISSION
 FROM CDR.SPARK_IT_OMNY_TRANSACTIONS A JOIN (select distinct MSISDN,USER_ID,STYLES,TECHNOLOGY,PRODUCT_LINE,PRODUCT,DETAILS_MARKETING,DETAILS_CONFOMITY,BEAC from backup_dwh.ref_om_products3 where to_date(REF_DATE) in (select max(to_date(ref_date)) from backup_dwh.ref_om_products3 where to_date(ref_date)<='2020-08-28') and msisdn is not null) B
 ON UPPER(A.SENDER_MSISDN)=UPPER(B.MSISDN) AND UPPER(A.SENDER_USER_ID)=UPPER(B.USER_ID)
 WHERE
 A.TRANSFER_STATUS='TF' AND
 A.TRANSFER_DATETIME ='2020-08-28' AND
 A.RECEIVER_CATEGORY_CODE='SUBS' AND A.SENDER_CATEGORY_CODE<>'SUBS' AND
 A.SERVICE_TYPE IN ('CASHIN', 'ENT2REG', 'MERCHPAY', 'P2P')
 GROUP BY
 A.TRANSFER_DATETIME, (A.RECEIVER_USER_ID || '_' || A.RECEIVER_MSISDN), A.RECEIVER_MSISDN,
 A.SERVICE_TYPE, B.STYLES, B.TECHNOLOGY, B.PRODUCT_LINE, B.PRODUCT, B.DETAILS_MARKETING, B.DETAILS_CONFOMITY,
 A.TRANSFER_STATUS, A.ERROR_CODE, A.ERROR_DESC, B.BEAC
 UNION ALL
-- CHANNEL ON RECEIVER MODE
-- CASHOUT, MERPAY, BILLPAY, ASSURANCE,
 SELECT
 A.TRANSFER_DATETIME JOUR,
 (A.SENDER_USER_ID || '_' || A.SENDER_MSISDN) ID_ACTIF,
 A.SENDER_MSISDN MSISDN,
 A.SERVICE_TYPE,
 B.STYLES,
 B.TECHNOLOGY,
 B.PRODUCT_LINE,
 B.PRODUCT,
 B.DETAILS_MARKETING,
 B.DETAILS_CONFOMITY,
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC,
 B.BEAC,
 COUNT(A.TRANSFER_ID) VOL,
 SUM(A.TRANSACTION_AMOUNT) VAL,
 SUM(A.SERVICE_CHARGE_RECEIVED) DIRECT_REVENUE,
 SUM(A.COMMISSIONS_RECEIVED) INDIRECT_REVENUE,
 SUM(A.COMMISSIONS_OTHERS) OTHER_REVENUE,
 SUM(A.COMMISSIONS_PAID) COMMISSION
 FROM JUNK.SPARK_IT_OMNY_TRANSACTIONS A JOIN (select distinct MSISDN,USER_ID,STYLES,TECHNOLOGY,PRODUCT_LINE,PRODUCT,DETAILS_MARKETING,DETAILS_CONFOMITY,BEAC from backup_dwh.ref_om_products3 where to_date(REF_DATE) in (select max(to_date(ref_date)) from backup_dwh.ref_om_products3 where to_date(ref_date)<='2020-08-28') and msisdn is not null) B
 ON UPPER(A.RECEIVER_MSISDN)=UPPER(B.MSISDN) AND UPPER(A.RECEIVER_USER_ID)=UPPER(B.USER_ID)
 WHERE
 A.TRANSFER_STATUS='TF' AND
 A.TRANSFER_DATETIME ='2020-08-28' AND
 A.SENDER_CATEGORY_CODE='SUBS' AND A.RECEIVER_CATEGORY_CODE<>'SUBS' AND
 A.SERVICE_TYPE IN ('BILLPAY', 'CASHIN', 'CASHOUT', 'ENT2REG', 'MERCHPAY', 'P2P', 'P2PNONREG')
 GROUP BY
 A.TRANSFER_DATETIME, (A.SENDER_USER_ID || '_' || A.SENDER_MSISDN), A.SENDER_MSISDN, A.SERVICE_TYPE,
 B.STYLES, B.TECHNOLOGY, B.PRODUCT_LINE, B.PRODUCT, B.DETAILS_MARKETING, B.DETAILS_CONFOMITY, A.TRANSFER_STATUS,
 A.ERROR_CODE, A.ERROR_DESC, B.BEAC
 UNION ALL
-- TNO
 SELECT
 A.TRANSFER_DATETIME JOUR,
 (A.SENDER_USER_ID || '_' || A.SENDER_MSISDN) ID_ACTIF,
 A.SENDER_MSISDN MSISDN,
 A.SERVICE_TYPE,
 'TNO' STYLES,
 'USSD' TECHNOLOGY,
 'TRANSFERT' PRODUCT_LINE,
 'TNO' PRODUCT,
 (CASE WHEN TNO_MSISDN IS NULL THEN 'TNO_FREE_DEST' ELSE 'TNO_DEST' END) DETAILS_MARKETING,
 'TNO' DETAILS_CONFOMITY,
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC,
 'TRANSFERT' BEAC,
 COUNT(A.TRANSFER_ID) VOL,
 SUM(A.TRANSACTION_AMOUNT) VAL,
 SUM(A.SERVICE_CHARGE_RECEIVED) DIRECT_REVENUE,
 SUM(A.COMMISSIONS_RECEIVED) INDIRECT_REVENUE,
 SUM(A.COMMISSIONS_OTHERS) OTHER_REVENUE,
 SUM(A.COMMISSIONS_PAID) COMMISSION
 FROM JUNK.SPARK_IT_OMNY_TRANSACTIONS A
 WHERE
 A.TRANSFER_STATUS='TS' AND
 A.TRANSFER_DATETIME ='2020-08-28' AND
 A.SENDER_CATEGORY_CODE='SUBS' AND
 A.SERVICE_TYPE IN ('P2PNONREG')
 GROUP BY
 A.TRANSFER_DATETIME,
 (A.SENDER_USER_ID || '_' || A.SENDER_MSISDN),
 A.SENDER_MSISDN,
 A.SERVICE_TYPE,
 (CASE WHEN TNO_MSISDN IS NULL THEN 'TNO_FREE_DEST' ELSE 'TNO_DEST' END),
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC
 UNION ALL
-- P2P SENDER MODE
 SELECT
 A.TRANSFER_DATETIME JOUR,
 (A.SENDER_USER_ID || '_' || A.SENDER_MSISDN) ID_ACTIF,
 A.SENDER_MSISDN MSISDN,
 A.SERVICE_TYPE,
 'P2P' STYLES,
 'USSD' TECHNOLOGY,
 'TRANSFERT' PRODUCT_LINE,
 'P2P' PRODUCT,
 (CASE WHEN RECEIVER_CATEGORY_CODE='SUBS' THEN 'SENDER_REC_CONNU' ELSE 'SENDER_REC_INCONNU' END) DETAILS_MARKETING,
 (CASE WHEN RECEIVER_CATEGORY_CODE='SUBS' THEN 'SENDER_REC_CONNU' ELSE 'SENDER_REC_INCONNU' END) DETAILS_CONFOMITY,
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC,
 'TRANSFERT' BEAC,
 COUNT(A.TRANSFER_ID) VOL,
 SUM(A.TRANSACTION_AMOUNT) VAL,
 SUM(A.SERVICE_CHARGE_RECEIVED) DIRECT_REVENUE,
 SUM(A.COMMISSIONS_RECEIVED) INDIRECT_REVENUE,
 SUM(A.COMMISSIONS_OTHERS) OTHER_REVENUE,
 SUM(A.COMMISSIONS_PAID) COMMISSION
 FROM CDR.SPARK_IT_OMNY_TRANSACTIONS A
 WHERE
 A.TRANSFER_STATUS='TF' AND
 A.TRANSFER_DATETIME ='2020-08-28' AND
 A.SENDER_CATEGORY_CODE='SUBS' AND
 A.SERVICE_TYPE IN ('P2P','OTF') --AND
 --RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM MSISDN_B2W UNION SELECT MSISDN FROM OM_TEST_MSISDNS)
 GROUP BY
 A.TRANSFER_DATETIME,
 (A.SENDER_USER_ID || '_' || A.SENDER_MSISDN),
 A.SENDER_MSISDN,
 A.SERVICE_TYPE,
 (CASE WHEN RECEIVER_CATEGORY_CODE='SUBS' THEN 'SENDER_REC_CONNU' ELSE 'SENDER_REC_INCONNU' END),
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC
 UNION ALL
-- RECEIVER CONNU
 SELECT
 A.TRANSFER_DATETIME JOUR,
 (A.RECEIVER_USER_ID || '_' || A.RECEIVER_MSISDN) ID_ACTIF,
 A.RECEIVER_MSISDN MSISDN,
 A.SERVICE_TYPE,
 'P2P' STYLES,
 'USSD' TECHNOLOGY,
 'TRANSFERT' PRODUCT_LINE,
 'P2P' PRODUCT,
 (CASE WHEN SENDER_CATEGORY_CODE='SUBS' THEN 'REC_SENDER_CONNU' ELSE 'REC_SENDER_INCONNU' END) DETAILS_MARKETING,
 (CASE WHEN SENDER_CATEGORY_CODE='SUBS' THEN 'REC_SENDER_CONNU' ELSE 'REC_SENDER_INCONNU' END) DETAILS_CONFOMITY,
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC,
 'TRANSFERT' BEAC,
 COUNT(A.TRANSFER_ID) VOL,
 SUM(A.TRANSACTION_AMOUNT) VAL,
 SUM(A.SERVICE_CHARGE_RECEIVED) DIRECT_REVENUE,
 SUM(A.COMMISSIONS_RECEIVED) INDIRECT_REVENUE,
 SUM(A.COMMISSIONS_OTHERS) OTHER_REVENUE,
 SUM(A.COMMISSIONS_PAID) COMMISSION
 FROM CDR.SPARK_IT_OMNY_TRANSACTIONS A
 WHERE
 A.TRANSFER_STATUS='TF' AND
 A.TRANSFER_DATETIME ='2020-08-28' AND
 A.RECEIVER_CATEGORY_CODE='SUBS' AND
 A.SERVICE_TYPE IN ('P2P','OTF') --AND
 --RECEIVER_MSISDN NOT IN (SELECT MSISDN FROM MSISDN_B2W UNION SELECT MSISDN FROM OM_TEST_MSISDNS)
 GROUP BY
 A.TRANSFER_DATETIME,
 (A.RECEIVER_USER_ID || '_' || A.RECEIVER_MSISDN),
 A.RECEIVER_MSISDN,
 A.SERVICE_TYPE,
 (CASE WHEN SENDER_CATEGORY_CODE='SUBS' THEN 'REC_SENDER_CONNU' ELSE 'REC_SENDER_INCONNU' END),
 A.TRANSFER_STATUS,
 A.ERROR_CODE,
 A.ERROR_DESC
UNION ALL
 SELECT
 A.TRANSFER_DATETIME JOUR,
TRANSFER_STATUS,
ERROR_CODE,
ERROR_DESC,
 (A.SENDER_USER_ID || '_' || A.SENDER_MSISDN) ID_ACTIF,
 A.SENDER_MSISDN MSISDN,
 A.SERVICE_TYPE,
 'TOP_UP' STYLES,
 'USSD' TECHNOLOGY,
 'TELEPHONIE' PRODUCT_LINE,
 'TOP_UP' PRODUCT,
 (CASE WHEN OTHER_MSISDN IS NULL THEN 'SELF' WHEN OTHER_MSISDN IS NOT NULL AND OTHER_MSISDN=SENDER_MSISDN THEN 'TIERS_SELF' ELSE 'TIERS' END) MARKETING_DETAILS,
 (CASE WHEN OTHER_MSISDN IS NULL THEN 'SELF' WHEN OTHER_MSISDN IS NOT NULL AND OTHER_MSISDN=SENDER_MSISDN THEN 'TIERS_SELF' ELSE 'TIERS' END) CONFORMITY_DETAILS,
 'TELEPHONIE' BEAC,
 COUNT(A.TRANSFER_ID) VOL,
 SUM(A.TRANSACTION_AMOUNT) VAL,
 SUM(A.SERVICE_CHARGE_RECEIVED) DIRECT_REVENUE,
 SUM(A.COMMISSIONS_RECEIVED) INDIRECT_REVENUE,
 SUM(A.COMMISSIONS_OTHERS) OTHER_REVENUE,
 SUM(A.COMMISSIONS_PAID) COMMISSION
 FROM CDR.SPARK_IT_OMNY_TRANSACTIONS A
 WHERE
 TRANSFER_STATUS='TF' AND TRANSFER_DATETIME ='2020-08-28' AND SERVICE_TYPE='RC' AND SENDER_CATEGORY_CODE='SUBS' AND OTHER_MSISDN IS NULL
--AND SENDER_MSISDN NOT IN (SELECT MSISDN FROM OM_TEST_MSISDNS)
 GROUP BY
 A.TRANSFER_DATETIME,
 SENDER_MSISDN,
 SENDER_USER_ID,
 SERVICE_TYPE,
 (CASE WHEN OTHER_MSISDN IS NULL THEN 'SELF'
 WHEN OTHER_MSISDN IS NOT NULL AND OTHER_MSISDN=SENDER_MSISDN THEN 'TIERS_SELF'
 ELSE 'TIERS' END),
TRANSFER_STATUS,
ERROR_CODE,
ERROR_DESC
) C
 LEFT JOIN (SELECT * FROM MON.SPARK_FT_CLIENT_LAST_SITE_DAY where event_date='2020-08-28') D
ON C.MSISDN=D.MSISDN