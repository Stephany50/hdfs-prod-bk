
add jar hdfs:///PROD/UDF/hive-udf-1.0.jar;
create temporary function GENERATE_SEQUENCE_FROM_INTERVALE as 'cm.orange.bigdata.udf.GenerateSequenceFromIntervale';

INSERT INTO MISSING_FILES
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_DATA_CDR' FLUX_NAME, C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_DATA_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_DATA_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_DATA_POST_CDR' FLUX_NAME, C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_DATA_POST_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_DATA_POST_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_VOICE_SMS_CDR' FLUX_NAME,C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_VOICE_SMS_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_VOICE_SMS_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_VOICE_SMS_POST_CDR' FLUX_NAME, C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_VOICE_SMS_POST_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_VOICE_SMS_POST_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_ADJUSTMENT_CDR' FLUX_NAME,C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_ADJUSTMENT_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_ADJUSTMENT_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_RECHARGE_CDR' FLUX_NAME,C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_RECHARGE_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_RECHARGE_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_TRANSFER_CDR' FLUX_NAME, C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_TRANSFER_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_TRANSFER_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_SUBSCRIPTION_CDR' FLUX_NAME,C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_SUBSCRIPTION_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_SUBSCRIPTION_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_ED_CDR' FLUX_NAME,C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_ED_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_ED_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'IN' TABLE_SOURCE,'ZTE_EC_CDR' FLUX_NAME,C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT REPLACE(CDR_NAME, 'pla_', '') FILE_NAME FROM CDR.IT_ZTE_CHECK_FILE WHERE CDR_DATE = '2019-05-04' AND CDR_TYPE = 'ZTE_EC_CDR'
        UNION
        SELECT REPLACE(FILE_NAME, 'pla_', '') FILE_NAME  FROM CDR.IT_ZTE_CHECK_FILE_ALL WHERE FILE_DATE = '2019-05-04' AND FILE_TYPE = 'ZTE_EC_CDR'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT '2019-05-04' ORIGINAL_FILE_DATE,'ZEBRA' TABLE_SOURCE,'ZEBRA_CDR' FLUX_NAME,C.FILE_NAME MISSING_FILES, CURRENT_TIMESTAMP INSERT_DATE
FROM
(
    SELECT
     A.FILE_NAME
    FROM
     (
        SELECT original_file_name FILE_NAME FROM CDR.IT_ZEBRA_CHECKFILE WHERE CDR_DATE = '2019-05-04'
     ) A
)C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04') B ON B.ORIGINAL_FILE_NAME = C.FILE_NAME
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OTARIE' TABLE_SOURCE,'OTARIE_TRAFFIC_CUST' FLUX_NAME,CONCAT('traffic_customer','_','2019-05-04','_','*.csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OTARIE_TRAFFIC_CUST") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,18,10) = SUBSTRING(C.FILE_NAME,18,10)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OTARIE' TABLE_SOURCE,'OTARIE_TRAFFIC_CUST_CELL' FLUX_NAME,CONCAT('traffic_customer_cell','_','2019-05-04','_','*.csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OTARIE_TRAFFIC_CUST_CELL") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,23,10) = SUBSTRING(C.FILE_NAME,23,10)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OTARIE' TABLE_SOURCE,'OTARIE_CUSTOMER_SP' FLUX_NAME,CONCAT('customers_sp_day','_','2019-05-04','_','*.csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OTARIE_CUSTOMER_SP") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,18,10) = SUBSTRING(C.FILE_NAME,18,10)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OM' TABLE_SOURCE,'OM_ALL_BALANCE' FLUX_NAME,CONCAT('AllBalance','_',DATE_FORMAT('2019-05-04','YYYYMMdd'),'.','csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OM_ALL_BALANCE") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,-12,8) = SUBSTRING(C.FILE_NAME,-12,8)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OM' TABLE_SOURCE,'OM_APGL' FLUX_NAME,CONCAT('GL_TRX_INTERFACE','_',DATE_FORMAT('2019-05-04','YYYYMMdd'),'.','csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OM_APGL") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,-12,8) = SUBSTRING(C.FILE_NAME,-12,8)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OM' TABLE_SOURCE,'OM_COMMISSIONS' FLUX_NAME,CONCAT('CommissionsDetails','_',DATE_FORMAT('2019-05-04','YYYYMMdd'),'.','csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OM_COMMISSIONS") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,-12,8) = SUBSTRING(C.FILE_NAME,-12,8)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OM' TABLE_SOURCE,'OM_SERVICES_CHARGES' FLUX_NAME,CONCAT('ServicesChargesDetails','_',DATE_FORMAT('2019-05-04','YYYYMMdd'),'.','csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OM_SERVICES_CHARGES") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,-12,8) = SUBSTRING(C.FILE_NAME,-12,8)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OM' TABLE_SOURCE,'OM_SUBSCRIBERS' FLUX_NAME,CONCAT('Subscribers','_',DATE_FORMAT('2019-05-04','YYYYMMdd'),'.','csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OM_SUBSCRIBERS") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,-12,8) = SUBSTRING(C.FILE_NAME,-12,8)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'OM' TABLE_SOURCE,'OM_TRANSACTIONS' FLUX_NAME,CONCAT('Transactions','_',DATE_FORMAT('2019-05-04','YYYYMMdd'),'.','csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="OM_TRANSACTIONS") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,-12,8) = SUBSTRING(C.FILE_NAME,-12,8)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'BDI' TABLE_SOURCE,'BDI' FLUX_NAME,CONCAT('bdi','_',DATE_FORMAT('2019-05-04','YYYYMMdd'),'.','csv') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="BDI") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,5,8) = SUBSTRING(C.FILE_NAME,5,8)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT C.* FROM (SELECT '2019-05-04' ORIGINAL_FILE_DATE,'P2P' TABLE_SOURCE,'P2P_LOG' FLUX_NAME,CONCAT('p2pCommands','.','2019-05-04','.','log') FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE )C
LEFT JOIN (SELECT ORIGINAL_FILE_NAME FROM RECEIVED_FILES B WHERE ORIGINAL_FILE_MONTH =SUBSTRING('2019-05-04',0,7) and TO_DATE(ORIGINAL_FILE_DATE) = '2019-05-04' AND FILE_TYPE="P2P_LOG") B ON SUBSTRING(B.ORIGINAL_FILE_NAME,-14,10) = SUBSTRING(C.FILE_NAME,13,10)
WHERE B.ORIGINAL_FILE_NAME IS NULL
UNION
SELECT
'2019-05-04' ORIGINAL_FILE_DATE,'MSC' TABLE_SOURCE,'CRA_MSC_HUAWEI' FLUX_NAME,SEQUENCE FILE_NAME, CURRENT_TIMESTAMP INSERT_DATE
FROM (
    SELECT GENERATE_SEQUENCE_FROM_INTERVALE(PREVIOUS+1,INDEX)  SEQUENCE FROM (
        SELECT LAG(INDEX, 1) OVER (PARTITION BY MSC_TYPE ORDER BY INDEX) PREVIOUS,INDEX FROM (
            SELECT
                DISTINCT
                CAST(SUBSTRING(SOURCE,11,9) AS INT) INDEX,
                SUBSTRING(SOURCE,5,11) MSC_TYPE
            FROM CDR.IT_CRA_MSC_HUAWEI
            WHERE CALLDATE = '2019-05-07'
        )A
    )D WHERE INDEX-PREVIOUS >1
)R
LATERAL VIEW EXPLODE(SPLIT(SEQUENCE, ',')) SEQUENCE AS SEQUENCE

